{
  "openapi": "3.0.0",
  "x-explorer-enabled": false,
  "x-samples-enabled": false,
  "x-samples-languages": [
    "curl",
    "python",
    "node"
  ],
  "info": {
    "description": "Inscribe Fraud Detection API Documentation\n",
    "version": "2.0.0",
    "title": "Core Resources",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "api@inscribe.ai"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "Bank Accounts",
      "description": "Bank account objects are created to store bank account data. These objects describe characteristics of bank accounts, such as the account name, number, and type. You can get and list bank accounts using these endpoints. Bank accounts are identified by an id."
    },
    {
      "name": "Collect Sessions",
      "description": "Collect sessions allow you to automate each step of your document collection process, from customer contact to fraud checks and verification. Sessions are identified by an id."
    },
    {
      "name": "Credit Insights",
      "description": "Credit Insights provides inferred creditworthiness datapoints relating to a specific customer or bank account."
    },
    {
      "name": "Customers",
      "description": "Customer objects are created to easily track and store documents. You can create, get, update, delete, and list your customers. Customers are identified by an id."
    },
    {
      "name": "Documents",
      "description": "Document objects are created to store a document. You can create, get, delete, and list your documents against a customer. Documents are identified by an id."
    },
    {
      "name": "Open Banking",
      "description": "This endpoint allows you to associate open banking data with an Inscribe customer. There are 2 types of open banking data supported: Plaid and MX. Credit insights for this customer are then generated from this data."
    },
    {
      "name": "Transactions",
      "description": "Transaction objects are created to store transaction data. These objects describe characteristics of transactions, such as the date, amount, description, and category. You can list all of your transactions using these endpoints. Transactions are identified by an id."
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/customers/{customer_id}/bank_accounts": {
      "get": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "List Bank Accounts",
        "description": "Returns a list of bank accounts for a customer. The list is sorted by creation date, with the most recently created bank accounts appearing first.",
        "operationId": "getBankAccounts",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Inscribe customer id.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "size",
            "description": "Set the number of bank accounts to be returned by request.",
            "example": 15,
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 50
            }
          },
          {
            "in": "query",
            "name": "cursor",
            "description": "A cursor to retrieve the next set of bank accounts, starting after the cursor. If no cursor is sent, the first set of bank accounts will be returned.",
            "example": "9361c7fb-934b-4cac-8e07-4897e590ab94",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1transactions/get/parameters/15"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns back a list of Bank Account objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1bank_accounts~1%7Bbank_account_id%7D/get/responses/200/content/application~1json/schema"
                      },
                      "description": "A map with a data property that contains an array of bank accounts. Each entry in the array is a separate bank account object."
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "cursor": {
                          "type": "string",
                          "format": "uuid",
                          "description": "A cursor for use in pagination. This cursor is to be used in the next request's cursor parameter to request the next set of bank accounts.",
                          "example": "9361c7fb-934b-4cac-8e07-4897e590ab94"
                        }
                      }
                    }
                  },
                  "example": {
                    "data": [
                      {
                        "id": "3efae611-ct4b84-8ed0-a4e92ad3bf4bg",
                        "name": "Checking",
                        "account_number": 123456789,
                        "account_type": "PERSONAL",
                        "account_name": "Chase Premium Checking",
                        "end_date": "2022-07-25",
                        "start_date": "2022-06-25",
                        "guid": "9a5f7a95-8c84-47db-8b2f-584a2f258e7e",
                        "institution_name": "JP Morgan Chase"
                      },
                      {
                        "id": "7yfae611-ct4b84-8ed0-a4e92ad3bf4tg",
                        "name": "Savings",
                        "account_number": 123456789,
                        "account_type": "PERSONAL",
                        "account_name": "Wells Fargo Active Savings",
                        "end_date": "2022-07-25",
                        "start_date": "2022-06-25",
                        "guid": "4b9fdda9-4e60-4123-9728-5d292e216e33",
                        "institution_name": "Wells Fargo"
                      },
                      {
                        "id": "8pfae611-ct4b84-8ed0-a4e92ad3bf6dt",
                        "name": "Business Checking",
                        "account_number": 123456789,
                        "account_type": "BUSINESS",
                        "account_name": "Bank of America Business Checking",
                        "end_date": "2022-07-25",
                        "start_date": "2022-06-25",
                        "guid": "614e00c4-d533-4cf0-b4bf-d69c9644f9c0",
                        "institution_name": "Bank of America"
                      }
                    ],
                    "pagination": {
                      "cursor": "9361c7fb-934b-4cac-8e07-4897e590ab94"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/bank_accounts/{bank_account_id}": {
      "get": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "Retrieve a Bank Account",
        "description": "Retrieves the details of an existing customer's bank account. Supply the unique customer id and unique bank account id for that customer from the customer list and bank account list respectively.",
        "operationId": "getBankAccount",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The id of the customer to return.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "bank_account_id",
            "in": "path",
            "description": "The id of the bank account to return.",
            "example": "1tvbg371-b3eb-4b84-8ed0-a4e63ad3bf4c",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1transactions/get/parameters/15"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved bank account.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "A bank account object which contains information about the bank account.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the object.",
                      "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b"
                    },
                    "account_number": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The account number of the bank account.",
                      "example": 123456789
                    },
                    "account_type": {
                      "type": "string",
                      "description": "The type of the bank account.",
                      "example": "PERSONAL",
                      "enum": [
                        "PERSONAL",
                        "BUSINESS"
                      ]
                    },
                    "account_name": {
                      "type": "string",
                      "description": "The name of the bank account.",
                      "example": "Chase Premium Checking"
                    },
                    "end_date": {
                      "type": "string",
                      "format": "date",
                      "description": "The end date of the bank account in the format yyyy-MM-dd.",
                      "example": "2022-07-25"
                    },
                    "start_date": {
                      "type": "string",
                      "format": "date",
                      "description": "The start date of the bank account in the format yyyy-MM-dd.",
                      "example": "2022-06-25"
                    },
                    "guid": {
                      "type": "string",
                      "description": "An identifier for the bank account submitted by the data provider.",
                      "example": "64b1c962-5659-4b87-8e88-b5dce41c7c0c"
                    },
                    "institution_name": {
                      "type": "string",
                      "description": "The name of the bank.",
                      "example": "Bank of America"
                    },
                    "metadata": {
                      "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1transactions/get/responses/200/content/application~1json/schema/properties/metadata"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/collect/sessions": {
      "post": {
        "tags": [
          "Collect Sessions"
        ],
        "summary": "Create Collect Session",
        "description": "Inscribe's Collect API allows you to automate each step of your document collection process, from customer contact to fraud checks and verification.\nIn order to initiate a Collect Session, you will need to provide Inscribe with information about the user you wish to collect documents from, as well as the documents you need to collect from them. You will also need to provide your authentication details.",
        "operationId": "createSession",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "customer",
                  "document_requests"
                ],
                "properties": {
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique identifier of the associated customer object. If an id is not provided, a name must be provided.",
                        "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the customer object that will be created and associated with the session. If an id is provided this field will be ignored. Note that customer object names are required to be unique.",
                        "example": "lnrrigby-fdda-400c-8583-9b686c7254fd"
                      },
                      "email": {
                        "type": "string",
                        "description": "The contact email of the user. This field is required if the value of send_email is True.",
                        "example": "johnsmith@inscribe.ai"
                      }
                    }
                  },
                  "document_requests": {
                    "type": "array",
                    "items": {
                      "$ref": "#/paths/~1collect~1sessions~1%7Bsession_id%7D~1document_requests/post/requestBody/content/application~1json/schema/items"
                    }
                  },
                  "success_url": {
                    "type": "string",
                    "description": "The URL the user will be redirected to when they complete the session. Any occurrence of the string \"{SESSION_ID}\" in the URL will be replaced with the session id.",
                    "example": "https://inscribe.com/portal/#success?session_id={SESSION_ID}}"
                  },
                  "cancel_url": {
                    "type": "string",
                    "description": "The URL the user will be redirected to when they abort or cancel the session. Any occurrence of the string \"{SESSION_ID}\" in the URL will be replaced with the session id.",
                    "example": "https://inscribe.com/portal/#cancel?session_id={SESSION_ID}"
                  },
                  "send_email": {
                    "type": "boolean",
                    "description": "A boolean indicating whether Inscribe should email the user a URL for the Collect session (if send_email is True, the email field must not be null).",
                    "example": true
                  }
                }
              }
            }
          },
          "description": "A collect session request object.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created collect session.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the object.",
                          "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b"
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL for the session. The first UUID in the URL is a unique identifier for your organisation that will be static accross Collect sessions. The second UUID in the URL is the session id.",
                          "example": "https://collect.inscribe.ai/#/fa207be0-b4da-4234-a350-fbbfe3b3298c/d1e07ab9-36a6-43eb-a550-2bc77dce8afc"
                        },
                        "customer_id": {
                          "type": "string",
                          "description": "Unique identifier for the associated customer.",
                          "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time at which the session was completed. In the format: yyyy-MM-dd'T'HH:mm:ssZ",
                          "example": "2019-12-12T15:35:08.460Z"
                        },
                        "completed_at": {
                          "type": "string",
                          "description": "Time at which the session was completed. This will be null if the session has not been completed. In the format: yyyy-MM-dd'T'HH:mm:ssZ",
                          "example": "2019-12-12T15:35:08.460Z"
                        },
                        "success_url": {
                          "type": "string",
                          "description": "The URL the user will be redirected to when they complete the session.",
                          "example": "https://example.com/#success?session_id=0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b"
                        },
                        "cancel_url": {
                          "type": "string",
                          "description": "The URL the user will be redirected to when they abort or cancel the session.",
                          "example": "https://example.com/#cancel?session_id=0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b"
                        },
                        "logo_url": {
                          "type": "string",
                          "description": "A link to the logo displayed in the collect session.",
                          "example": "https://assets.website-files.com/5ea61a1bf0e208bb1c5737ac/5ec69023b5341a114ab26bc7_inscribe_logo.svg"
                        },
                        "display_name": {
                          "type": "string",
                          "description": "The name of the company being displayed in the collect session.",
                          "example": "Inscribe"
                        },
                        "expired": {
                          "type": "boolean",
                          "description": "States if the session is active"
                        }
                      }
                    }
                  ],
                  "properties": {
                    "document_requests": {
                      "type": "array",
                      "description": "List of document requests.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique identifier of the document request.",
                            "example": "194e60b7-9581-4847-93f3-661ae04ae666"
                          },
                          "label": {
                            "type": "string",
                            "description": "A descriptive string displayed when making the document request.",
                            "example": "July Bank Statements"
                          },
                          "max_documents": {
                            "type": "integer",
                            "description": "The maximum number of accepted documents that the user can upload to this request. The maximum value is 70, the default and minimum value is 1. Requests which stipulate a value in excess of 70 will be silently capped at 70."
                          },
                          "verify": {
                            "type": "array",
                            "description": "A list of verification types that will be applied to documents uploaded to this request.",
                            "items": {
                              "type": "string",
                              "example": "NAME"
                            }
                          },
                          "tags": {
                            "type": "array",
                            "description": "A list of the user-defined document request tags.",
                            "items": {
                              "type": "string",
                              "example": "bank_statement"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      },
      "get": {
        "tags": [
          "Collect Sessions"
        ],
        "summary": "List all Collect Sessions",
        "description": "Retrieve a paginated list of collect sessions for your organization.",
        "operationId": "getCollectSessions",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Indicate which page of the session list to return, the default is 1.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expired",
            "in": "query",
            "description": "Filter the returned collect sessions from the expired state. If omitted, both expired and active sessions will be returned.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "customer_id",
            "in": "query",
            "description": "Filter the returned collect sessions by a given customer ID. If omitted, sessions for all customers will be returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved collect sessions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1collect~1sessions/post/responses/200/content/application~1json/schema"
                      },
                      "description": "A list of collect session objects."
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer",
                              "description": "The limit on the number of collect sessions that can be returned per page.",
                              "example": 10
                            },
                            "current_page": {
                              "type": "integer",
                              "description": "The current page number.",
                              "example": 1
                            },
                            "number_of_pages": {
                              "type": "integer",
                              "description": "The total number of pages available with the current query parameters.",
                              "example": 1
                            },
                            "total": {
                              "type": "integer",
                              "description": "The total number of collect sessions available with the current query parameters.",
                              "example": 1
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "description": "The specified resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1customers/get/responses/400/content/application~1json/schema"
                }
              }
            }
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/collect/sessions/{session_id}": {
      "get": {
        "tags": [
          "Collect Sessions"
        ],
        "summary": "Retrieve a Collect Session",
        "description": "Retrieve a collect session by UUID",
        "operationId": "getCollectSession",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "description": "The id of the collect session to return.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved collect session.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1collect~1sessions/post/responses/200/content/application~1json/schema/allOf/0"
                    }
                  ],
                  "properties": {
                    "document_requests": {
                      "type": "array",
                      "description": "List of document requests.",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/paths/~1collect~1sessions/post/responses/200/content/application~1json/schema/properties/document_requests/items"
                          }
                        ],
                        "properties": {
                          "documents": {
                            "type": "array",
                            "description": "A list containing the full Document Response for each document collected.",
                            "items": {
                              "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1documents~1%7Bid%7D/get/responses/200/content/application~1json/schema"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          }
        }
      },
      "put": {
        "tags": [
          "Collect Sessions"
        ],
        "summary": "Update Collect Session",
        "description": "Edit properties of a collect session.\n",
        "operationId": "updateCollectSession",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "description": "The id of the collect session to return.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "expired": {
                    "type": "boolean",
                    "description": "Set whether the collect session is expired or not. An expired session can be reactivated at any time."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the collect session.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1collect~1sessions~1%7Bsession_id%7D/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/collect/sessions/{session_id}/document_requests": {
      "post": {
        "tags": [
          "Collect Sessions"
        ],
        "summary": "Add Document Requests",
        "description": "Add a document request to a Collect Session",
        "operationId": "addDocumentRequest",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "description": "The id of the collect session to add the document request to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "label"
                  ],
                  "properties": {
                    "label": {
                      "type": "string",
                      "description": "A descriptive string displayed when making the document request.",
                      "example": "July Bank Statements"
                    },
                    "description": {
                      "type": "string",
                      "description": "An optional description of the document request that will be visible to the collect session user.",
                      "example": "A personal bank statement for proof-of-income"
                    },
                    "max_documents": {
                      "type": "integer",
                      "description": "The maximum number of accepted documents that the user can upload to this request. The maximum value is 70, the default and minimum value is 1. Requests which stipulate a value in excess of 70 will be silently capped at 70.",
                      "example": 5
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1customers~1%7Bid%7D~1documents/post/requestBody/content/multipart~1form-data/schema/properties/tags/items"
                      }
                    },
                    "verify": {
                      "$ref": "#/paths/~1customers~1%7Bid%7D~1documents/post/requestBody/content/multipart~1form-data/schema/properties/verify_entities/items"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created collect session document requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1collect~1sessions/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/collect/sessions/{session_id}/document_requests/{document_request_id}": {
      "delete": {
        "tags": [
          "Collect Sessions"
        ],
        "summary": "Delete Document Request",
        "description": "Remove a collect session document request by its given UUID\n",
        "operationId": "deleteDocumentRequest",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "description": "The id of the collect session to remove the document request from.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "document_request_id",
            "in": "path",
            "description": "The UUID of the document request to be removed. The id can be retrieved from the [Get a Collect Session](https://docs.inscribe.ai/reference/getcollectsession) response.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted collect session document request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1collect~1sessions/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/credit_analysis": {
      "get": {
        "tags": [
          "Credit Insights"
        ],
        "summary": "Retrieve Summary Insights (Customer)",
        "description": "Returns income and creditworthiness information extracted from transactions belonging to a specific customer.",
        "operationId": "getCustomerCreditAnalysis",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The id of the customer to return.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Specifies the start date for data retrieval. Only data with a date on or after this will be considered. This helps in filtering the data to a specific time frame of interest.",
            "required": false,
            "example": "2024-01-01",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Specifies the end date for data retrieval. Only data with a date before this will be considered. This helps in filtering data to a specific time frame of interest.",
            "required": false,
            "example": "2024-12-31",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "document_ids",
            "in": "query",
            "description": "A comma separated list of document UUIDs. Only data from these documents will be considered (as well as open banking data). This helps in filtering data to include/exclude certain documents.",
            "required": false,
            "example": "3616baa9-9caf-434e-b4d0-8a32c644dfd4,3616baa9-9caf-434e-b4d0-8a32c644dfe5",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1transactions/get/parameters/15"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved customer credit insights.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "summary_statistics": {
                      "type": "object",
                      "description": "Summary statistics that contain inferred creditworthiness and income information (based on the submitted customer documents and transactions).",
                      "properties": {
                        "credits_count": {
                          "type": "integer",
                          "example": 3,
                          "description": "The quantity of credit transactions within the customer's transactions."
                        },
                        "credits_total": {
                          "type": "integer",
                          "description": "Summed amounts of all credit transactions within the customer's transactions (in cents). (Also still accessible via the deprecated alias `credits_total_gross`.)",
                          "example": 200
                        },
                        "debits_count": {
                          "type": "integer",
                          "description": "The quantity of debit transactions within the customer's transactions.",
                          "example": 10
                        },
                        "debits_total": {
                          "type": "integer",
                          "description": "Summed amounts of all debit transactions within the customer's transactions (in cents). (Also still accessible via the deprecated alias `debits_total_gross`.)",
                          "example": 300
                        },
                        "maximum_consecutive_days": {
                          "type": "integer",
                          "description": "The longest sequence of consecutive days that the uploaded customer data covers.",
                          "example": 31
                        },
                        "personal_income_annual_gross": {
                          "type": "integer",
                          "description": "The estimated gross annual personal income for the customer inferred from submitted payslips (in cents). (Also still accessible via the deprecated alias `salary_annual_gross`.)",
                          "example": 1200
                        },
                        "personal_income_annual_net": {
                          "type": "integer",
                          "description": "The estimated net annual personal income for the customer inferred from their transactions and/or payslips (in cents). (Also still accessible via the deprecated alias `salary_annual_net`.)",
                          "example": 960
                        },
                        "personal_income_period_gross": {
                          "type": "integer",
                          "description": "The total gross summed personal income found within the customer's submitted payslips (in cents). The term `period` refers to the time interval covering the earliest date to the latest date found in the submitted data. (Also still accessible via the deprecated alias `salary_period_gross`.)",
                          "example": 100
                        },
                        "personal_income_period_net": {
                          "type": "integer",
                          "description": "The total net summed personal income found within the customer's transactions and/or payslips (in cents). The term `period` refers to the time interval covering the earliest date to the latest date found in the submitted data. (Also still accessible via the deprecated alias `salary_period_net`.)",
                          "example": 80
                        },
                        "revenue_annual_gross": {
                          "type": "integer",
                          "description": "The estimated gross annual revenue for the customer inferred from their transactions (in cents).",
                          "example": 1200
                        },
                        "revenue_period_gross": {
                          "type": "integer",
                          "description": "The total gross summed revenue found within the customer's transactions (in cents). The term `period` refers to the time interval covering the earliest date to the latest date found in the submitted data.",
                          "example": 100
                        },
                        "total_net": {
                          "type": "integer",
                          "description": "The summed debit amounts minus the summed credit amounts (in cents).",
                          "example": -100
                        },
                        "transfers_count": {
                          "type": "integer",
                          "description": "The quantity of transfer transactions within the customer's transactions.",
                          "example": 6
                        },
                        "transfers_credits_total": {
                          "type": "integer",
                          "description": "Summed amounts of all credit transfer transactions within the customer's transactions (in cents). (Also still accessible via the deprecated alias `transfers_credits_total_gross`.)",
                          "example": 100
                        },
                        "transfers_debits_total": {
                          "type": "integer",
                          "description": "Summed amounts of all debit transfer transactions within the customer's transactions (in cents). (Also still accessible via the deprecated alias `transfers_debits_total_gross`.)",
                          "example": 200
                        },
                        "unique_days_count": {
                          "type": "integer",
                          "description": "Number of distinct days covered by the customer's bank statements and transactions.",
                          "example": 31
                        }
                      }
                    },
                    "bank_accounts": {
                      "type": "array",
                      "description": "A list of bank accounts associated with the customer.",
                      "items": {
                        "type": "string",
                        "description": "The respective UUID for the bank account.",
                        "example": "http://.../customer/{customer_id}/bank_accounts/{bank_account_id}"
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Additional data which provides context about Inscribe's Credit Insights response.",
                      "properties": {
                        "confidence_score": {
                          "type": "number",
                          "format": "float",
                          "description": "The confidence score represents the degree of certainty for the accuracy of the Credit Insights outputs.  We calculate this score using a weighted combination of parsing and transaction categorization certainties.  Confidence scores above 0.5 represent high confidence.",
                          "example": 0.99
                        },
                        "customer_contains_low_trust_documents": {
                          "type": "boolean",
                          "description": "This value will be set to True if the customer contains any documents under a trust score threshold of 50. Else,  this will be set to False.",
                          "example": false
                        },
                        "included_data_sources": {
                          "type": "object",
                          "description": "Lists all documents and open banking data which were used to create the Inscribe Credit Insights.",
                          "properties": {
                            "documents": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "document_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "b3de84cf-97aa-4321-a223-51640d5d8fca"
                                  }
                                }
                              }
                            },
                            "open_banking": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "open_banking_data_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "e959ed48-a9e4-44f3-a6f8-b9dddd21f27c"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "excluded_data_sources": {
                          "type": "object",
                          "description": "Lists all documents and open banking data which were excluded from the Inscribe Credit Insights. Documents can be excluded if they are duplicate documents, or when the include_unreconciled_documents query parameter is set to False.",
                          "properties": {
                            "documents": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "document_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "fd7abd7d-5d62-42d0-b49e-62eae1fd4e22"
                                  },
                                  "exclusion_reason": {
                                    "format": "string",
                                    "example": "UNRECONCILED_BANK_ACCOUNT"
                                  }
                                }
                              }
                            },
                            "open_banking": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "open_banking_data_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "920b148f-db30-46fe-8da9-3de2c9e55b04"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "query_parameters": {
                          "type": "object",
                          "description": "Lists the query parameters which were used in the original endpoint request."
                        }
                      }
                    },
                    "confidence_score": {
                      "type": "number",
                      "format": "float",
                      "deprecated": true,
                      "description": "The confidence score represents the degree of certainty for the accuracy of the Credit Insights outputs.  We calculate this score using a weighted combination of parsing and transaction categorization certainties.  Confidence scores above 0.5 represent high confidence. Also accessible under the `metadata` header.",
                      "example": 0.99
                    },
                    "customer_contains_low_trust_documents": {
                      "type": "boolean",
                      "deprecated": true,
                      "description": "This value will be set to True if the customer contains any documents under a trust score threshold of 50. Else,  this will be set to False. Also accessible under the `metadata` header.",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/bank_accounts/{bank_account_id}/credit_analysis": {
      "get": {
        "tags": [
          "Credit Insights"
        ],
        "summary": "Retrieve Summary Insights (Bank Account)",
        "description": "Returns income and creditworthiness information derived from a submitted customer bank account.",
        "operationId": "getBankAccountCreditAnalysis",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The id of the customer to return.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "bank_account_id",
            "in": "path",
            "description": "The id of the bank account to return.",
            "example": "506d3678-1bde-473e-b884-64189d48f9e7",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/3"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1transactions/get/parameters/15"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved bank account credit insights.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "summary_statistics": {
                      "type": "object",
                      "description": "Summary statistics that contain inferred creditworthiness and income information (based on the submitted customer documents and transactions).",
                      "properties": {
                        "average_daily_balance": {
                          "type": "integer",
                          "example": 10000,
                          "description": "The average daily bank account balance (in cents)."
                        },
                        "credits_count": {
                          "type": "integer",
                          "example": 3,
                          "description": "The quantity of credit transactions within the bank account's transactions."
                        },
                        "credits_total": {
                          "type": "integer",
                          "description": "Summed amounts of all credit transactions within the bank account's transactions (in cents). Can also be accessed via the alias `credits_total_gross`.",
                          "example": 200
                        },
                        "debits_count": {
                          "type": "integer",
                          "description": "The quantity of debit transactions within the bank account's transactions.",
                          "example": 10
                        },
                        "debits_total": {
                          "type": "integer",
                          "description": "Summed amounts of all debit transactions within the bank account's transactions (in cents). Can also be accessed via the alias `debits_total_gross`.",
                          "example": 300
                        },
                        "maximum_balance": {
                          "type": "integer",
                          "description": "The maximum bank account balance found (in cents).",
                          "example": 15000
                        },
                        "maximum_consecutive_days": {
                          "type": "integer",
                          "description": "The longest sequence of consecutive days that the uploaded customer bank account data covers.",
                          "example": 31
                        },
                        "minimum_balance": {
                          "type": "integer",
                          "description": "The minimum bank account balance found (in cents).",
                          "example": 5000
                        },
                        "personal_income_annual_net": {
                          "type": "integer",
                          "description": "The estimated net annual personal income inferred from the bank account's transactions (in cents). (Also still accessible via the deprecated alias `salary_annual_net`.)",
                          "example": 960
                        },
                        "personal_income_period_net": {
                          "type": "integer",
                          "description": "The total net summed personal_income found within the bank account's transactions (in cents).  The term `period` refers to the time interval covering the earliest date to the latest date found in the submitted data. (Also still accessible via the deprecated alias `salary_period_net`.)",
                          "example": 80
                        },
                        "revenue_annual_gross": {
                          "type": "integer",
                          "description": "The estimated gross annual revenue inferred from the bank account's transactions (in cents).",
                          "example": 1200
                        },
                        "revenue_period_gross": {
                          "type": "integer",
                          "description": "The total gross summed revenue found within the bank account's transactions (in cents).  The term `period` refers to the time interval covering the earliest date to the latest date found in the submitted data.",
                          "example": 100
                        },
                        "total_net": {
                          "type": "integer",
                          "description": "The summed debit amounts minus the summed credit amounts (in cents).",
                          "example": -100
                        },
                        "transfers_count": {
                          "type": "integer",
                          "description": "The quantity of transfer transactions within the bank account's transactions.",
                          "example": 6
                        },
                        "transfers_credits_total": {
                          "type": "integer",
                          "description": "Summed amounts of all credit transfer transactions within the bank account's transactions (in cents). (Also still accessible via the deprecated alias `transfers_credits_total_gross`.)",
                          "example": 100
                        },
                        "transfers_debits_total": {
                          "type": "integer",
                          "description": "Summed amounts of all debit transfer transactions within the bank account's transactions (in cents). (Also still accessible via the deprecated alias `transfers_debits_total_gross`.)",
                          "example": 200
                        },
                        "unique_days_count": {
                          "type": "integer",
                          "description": "Number of distinct days covered by the bank account statements and transactions.",
                          "example": 31
                        }
                      }
                    },
                    "metadata": {
                      "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/responses/200/content/application~1json/schema/properties/metadata"
                    },
                    "confidence_score": {
                      "type": "number",
                      "deprecated": true,
                      "format": "float",
                      "description": "The confidence score represents the degree of certainty for the accuracy of the Credit Insights outputs.  We calculate this score using a weighted combination of parsing and transaction categorization certainties.  Confidence scores above 0.5 represent high confidence.",
                      "example": 0.99
                    },
                    "customer_contains_low_trust_documents": {
                      "type": "boolean",
                      "deprecated": true,
                      "description": "This value will be set to True if the customer contains any documents under a trust score threshold of 50. Else,  this will be set to False."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/credit_analysis/cashflow_insights": {
      "get": {
        "tags": [
          "Credit Insights"
        ],
        "summary": "Retrieve Cashflow Insights (Customer)",
        "description": "Returns cashflow and balance insights derived from submitted customer documents and transactions.",
        "operationId": "getCustomerCreditAnalysisCashflowInsights",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The id of the customer to return.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/3"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1transactions/get/parameters/15"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved customer cashflow insights.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Insights about cashflow and balances (aggregated at both the customer and bank account levels).",
                  "properties": {
                    "average_credit_amount": {
                      "type": "number",
                      "format": "int",
                      "description": "The average transaction amount across all credit transactions (in cents).",
                      "example": 5000
                    },
                    "average_debit_amount": {
                      "type": "number",
                      "format": "int",
                      "description": "The average transaction amount across all debit transactions (in cents).",
                      "example": 4000
                    },
                    "count_credit_transactions": {
                      "type": "number",
                      "format": "int",
                      "description": "The count of all credit transactions.",
                      "example": 10
                    },
                    "count_debit_transactions": {
                      "type": "number",
                      "format": "int",
                      "description": "The count of all debit transactions.",
                      "example": 15
                    },
                    "total_credits": {
                      "type": "number",
                      "format": "int",
                      "description": "The summed amount of all credit transactions (in cents).",
                      "example": 30000
                    },
                    "total_debits": {
                      "type": "number",
                      "format": "int",
                      "description": "The summed amount of all debit transactions (in cents).",
                      "example": 10000
                    },
                    "total_net": {
                      "type": "number",
                      "format": "int",
                      "description": "This is equivalent to total_credits minus total_debits.",
                      "example": 20000
                    },
                    "count_self_transfers": {
                      "type": "number",
                      "format": "int",
                      "description": "The quantity of self-transfers. We define a self-transfer as a bank transfer between separate bank accounts within the same entity (e.g. an individual transferring money from their checking to their savings account).",
                      "example": 2
                    },
                    "max_balance": {
                      "type": "number",
                      "format": "int",
                      "description": "The highest aggregated daily balance found (in cents). Daily balances are taken from the end of each day. This aggregated statistic refers to the overall customer daily balance (i.e. the sum across all customer bank accounts).",
                      "example": 1455800
                    },
                    "min_balance": {
                      "type": "number",
                      "format": "int",
                      "description": "The lowest aggregated daily balance found (in cents). Daily balances are taken from the end of each day. This aggregated statistic refers to the overall customer daily balance (i.e. the sum across all customer bank accounts).",
                      "example": 1164686
                    },
                    "beginning_balance": {
                      "type": "number",
                      "format": "int",
                      "description": "The beginning balance found in the period (in cents). Daily balances are taken from the end of each day. This aggregated statistic refers to the overall customer daily balance (i.e. the sum across all customer bank accounts).",
                      "example": 1164686
                    },
                    "ending_balance": {
                      "type": "number",
                      "format": "int",
                      "description": "The ending balance found in the period (in cents). Daily balances are taken from the end of each day. This aggregated statistic refers to the overall customer daily balance (i.e. the sum across all customer bank accounts).",
                      "example": 1164686
                    },
                    "count_negative_balance_days": {
                      "type": "number",
                      "format": "int",
                      "description": "The number of days for which there was a negative balance. Daily balances are taken from the end of each day. This aggregated statistic refers to the overall customer daily balance (i.e. the sum across all customer bank accounts).",
                      "example": 0
                    },
                    "average_daily_balance": {
                      "type": "number",
                      "format": "int",
                      "description": "The statistical mean of the daily balances across the time period. Daily balances are taken from the end of each day. This aggregated statistic refers to the overall customer daily balance (i.e. the sum across all customer bank accounts).",
                      "example": 0
                    },
                    "daily_balance_volatility": {
                      "type": "number",
                      "format": "int",
                      "description": "This is the [standard deviation](<https://en.wikipedia.org/wiki/Standard_deviation>) of all daily balances. This represents the volatility of the customers bank account balances. For customers with multiple bank accounts, we calculate the [standard deviation of the sum ](<https://online.stat.psu.edu/stat500/book/export/html/572>)of the bank account balance variables.",
                      "example": 119
                    },
                    "cashflow_by_category": {
                      "type": "object",
                      "description": "Cashflow insights specific to each transaction category.",
                      "properties": {
                        "accommodation": {
                          "type": "object",
                          "properties": {
                            "rent": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "hotels": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "total_net": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_debit": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_credit": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "bank_charge": {
                          "type": "object",
                          "properties": {
                            "overdraft": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "nsf": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "interest_paid": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "total_net": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_debit": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_credit": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "entertainment": {
                          "type": "object",
                          "properties": {
                            "gambling": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 20000
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 10000
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 30000
                                }
                              }
                            },
                            "total_net": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_debit": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_credit": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "income": {
                          "type": "object",
                          "properties": {
                            "revenue": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "salary": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "interest_received": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "retirement": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "social_security": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "commission_received": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "total_net": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_debit": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_credit": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "infrastructure": {
                          "type": "object",
                          "properties": {
                            "total_net": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_debit": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_credit": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "insurance": {
                          "type": "object",
                          "properties": {
                            "total_net": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_debit": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_credit": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "investments": {
                          "type": "object",
                          "properties": {
                            "savings": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "trading": {
                              "type": "object",
                              "properties": {
                                "crypto_trading": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "total_net": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_debit": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_credit": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "loan": {
                          "type": "object",
                          "properties": {
                            "mortgage": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "mca": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "payday": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "card_repayment": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "auto_loan": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "buy_now_pay_later": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "total_net": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_debit": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_credit": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "personnel": {
                          "type": "object",
                          "properties": {
                            "total_net": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_debit": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_credit": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "refund": {
                          "type": "object",
                          "properties": {
                            "total_net": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_debit": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_credit": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "retail": {
                          "type": "object",
                          "properties": {
                            "food_and_drink": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "groceries": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "total_net": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_debit": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_credit": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "self_transfer": {
                          "type": "object",
                          "properties": {
                            "sweep_transfer": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "total_net": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_debit": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_credit": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "tax": {
                          "type": "object",
                          "properties": {
                            "total_net": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_debit": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_credit": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "transport": {
                          "type": "object",
                          "properties": {
                            "fuel": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "total_net": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_debit": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_credit": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "utilities": {
                          "type": "object",
                          "properties": {
                            "total_net": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_debit": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_credit": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "withdrawal": {
                          "type": "object",
                          "properties": {
                            "total_net": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_debit": {
                              "type": "integer",
                              "example": 0
                            },
                            "total_credit": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        }
                      }
                    },
                    "cashflow_by_method": {
                      "type": "object",
                      "description": "Cashflow insights specific to each transaction method. Transaction methods describes 'how' a transaction was completed (e.g. cash, check, bank transfer).",
                      "properties": {
                        "bank_transfer": {
                          "type": "object",
                          "properties": {
                            "total_credits": {
                              "type": "integer",
                              "example": 300,
                              "description": "The summed amount of all credit transactions relevant to this transaction method (in cents)."
                            },
                            "total_debits": {
                              "type": "integer",
                              "example": 200,
                              "description": "The summed amount of all debit transactions relevant to this transaction method (in cents)."
                            },
                            "total_net": {
                              "type": "integer",
                              "example": 100,
                              "description": "This is equivalent to total_credits minus total_debits."
                            }
                          }
                        },
                        "card_payment": {
                          "type": "object",
                          "properties": {
                            "total_credits": {
                              "type": "integer",
                              "example": 300,
                              "description": "The summed amount of all credit transactions relevant to this transaction method (in cents)."
                            },
                            "total_debits": {
                              "type": "integer",
                              "example": 200,
                              "description": "The summed amount of all debit transactions relevant to this transaction method (in cents)."
                            },
                            "total_net": {
                              "type": "integer",
                              "example": 100,
                              "description": "This is equivalent to total_credits minus total_debits."
                            }
                          }
                        },
                        "cash": {
                          "type": "object",
                          "properties": {
                            "total_credits": {
                              "type": "integer",
                              "example": 300,
                              "description": "The summed amount of all credit transactions relevant to this transaction method (in cents)."
                            },
                            "total_debits": {
                              "type": "integer",
                              "example": 200,
                              "description": "The summed amount of all debit transactions relevant to this transaction method (in cents)."
                            },
                            "total_net": {
                              "type": "integer",
                              "example": 100,
                              "description": "This is equivalent to total_credits minus total_debits."
                            }
                          }
                        },
                        "check": {
                          "type": "object",
                          "properties": {
                            "total_credits": {
                              "type": "integer",
                              "example": 300,
                              "description": "The summed amount of all credit transactions relevant to this transaction method (in cents)."
                            },
                            "total_debits": {
                              "type": "integer",
                              "example": 200,
                              "description": "The summed amount of all debit transactions relevant to this transaction method (in cents)."
                            },
                            "total_net": {
                              "type": "integer",
                              "example": 100,
                              "description": "This is equivalent to total_credits minus total_debits."
                            }
                          }
                        }
                      }
                    },
                    "bank_accounts": {
                      "type": "object",
                      "description": "A list of bank accounts associated with the customer.",
                      "properties": {
                        "bank_account_id": {
                          "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1bank_accounts~1%7Bbank_account_id%7D~1credit_analysis~1cashflow_insights/get/responses/200/content/application~1json/schema/allOf/0"
                        }
                      }
                    },
                    "metadata": {
                      "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/responses/200/content/application~1json/schema/properties/metadata"
                    },
                    "confidence_score": {
                      "type": "number",
                      "deprecated": true,
                      "format": "float",
                      "description": "The confidence score represents the degree of certainty for the accuracy of the Credit Insights outputs. We calculate this score using a weighted combination of parsing and transaction categorization certainties. Confidence scores above 0.5 represent high confidence.",
                      "example": 0.99
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/bank_accounts/{bank_account_id}/credit_analysis/cashflow_insights": {
      "get": {
        "tags": [
          "Credit Insights"
        ],
        "summary": "Retrieve Cashflow Insights (Bank Account)",
        "description": "Returns cashflow and balance insights derived from a submitted customer bank account.",
        "operationId": "getBankAccountCreditAnalysisCashflowInsights",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The id of the customer to return.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "bank_account_id",
            "in": "path",
            "description": "The id of the bank account to return.",
            "example": "506d3678-1bde-473e-b884-64189d48f9e7",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/3"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1transactions/get/parameters/15"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved customer cashflow insights.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Insights about cashflow and balances specific to the listed bank account.",
                      "properties": {
                        "average_credit_amount": {
                          "type": "number",
                          "format": "int",
                          "description": "The average transaction amount across all credit transactions (in cents).",
                          "example": 5000
                        },
                        "average_debit_amount": {
                          "type": "number",
                          "format": "int",
                          "description": "The average transaction amount across all debit transactions (in cents).",
                          "example": 4000
                        },
                        "count_credit_transactions": {
                          "type": "number",
                          "format": "int",
                          "description": "The count of all credit transactions.",
                          "example": 10
                        },
                        "count_debit_transactions": {
                          "type": "number",
                          "format": "int",
                          "description": "The count of all debit transactions.",
                          "example": 15
                        },
                        "total_credits": {
                          "type": "number",
                          "format": "int",
                          "description": "The summed amount of all credit transactions (in cents).",
                          "example": 30000
                        },
                        "total_debits": {
                          "type": "number",
                          "format": "int",
                          "description": "The summed amount of all debit transactions (in cents).",
                          "example": 10000
                        },
                        "total_net": {
                          "type": "number",
                          "format": "int",
                          "description": "This is equivalent to total_credits minus total_debits.",
                          "example": 20000
                        },
                        "count_self_transfers": {
                          "type": "number",
                          "format": "int",
                          "description": "The quantity of self-transfers. We define a self-transfer as a bank transfer between separate bank accounts within the same entity (e.g. an individual transferring money from their checking to their savings account).",
                          "example": 2
                        },
                        "max_balance": {
                          "type": "number",
                          "format": "int",
                          "description": "The highest daily balance found (in cents). Daily balances are taken from the end of each day.",
                          "example": 1455800
                        },
                        "min_balance": {
                          "type": "number",
                          "format": "int",
                          "description": "The lowest daily balance found (in cents). Daily balances are taken from the end of each day.",
                          "example": 1164686
                        },
                        "beginning_balance": {
                          "type": "number",
                          "format": "int",
                          "description": "The beginning balance for the bank account (in cents).",
                          "example": 1343187
                        },
                        "ending_balance": {
                          "type": "number",
                          "format": "int",
                          "description": "The ending balance for the bank account (in cents).",
                          "example": 1237381
                        },
                        "average_daily_balance": {
                          "type": "number",
                          "format": "int",
                          "description": "The average daily balance found (in cents). Daily balances are taken from the end of each day.",
                          "example": 1319166
                        },
                        "count_negative_balance_days": {
                          "type": "number",
                          "format": "int",
                          "description": "The number of days for which there was a negative balance. Daily balances are taken from the end of each day.",
                          "example": 0
                        },
                        "cashflow_by_category": {
                          "type": "object",
                          "description": "Cashflow insights specific to each transaction category.",
                          "properties": {
                            "accommodation": {
                              "type": "object",
                              "properties": {
                                "rent": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "hotels": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "bank_charge": {
                              "type": "object",
                              "properties": {
                                "overdraft": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "nsf": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "interest_paid": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "entertainment": {
                              "type": "object",
                              "properties": {
                                "gambling": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 20000
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 10000
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 30000
                                    }
                                  }
                                },
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "income": {
                              "type": "object",
                              "properties": {
                                "revenue": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "salary": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "interest_received": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "retirement": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "social_security": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "commission_received": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "infrastructure": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "insurance": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "investments": {
                              "type": "object",
                              "properties": {
                                "savings": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "trading": {
                                  "type": "object",
                                  "properties": {
                                    "crypto_trading": {
                                      "type": "object",
                                      "properties": {
                                        "total_net": {
                                          "type": "integer",
                                          "example": 0
                                        },
                                        "total_debit": {
                                          "type": "integer",
                                          "example": 0
                                        },
                                        "total_credit": {
                                          "type": "integer",
                                          "example": 0
                                        }
                                      }
                                    },
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "sweep_transfer": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "loan": {
                              "type": "object",
                              "properties": {
                                "mortgage": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "mca": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "payday": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "card_repayment": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "auto_loan": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "buy_now_pay_later": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "personnel": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "refund": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "retail": {
                              "type": "object",
                              "properties": {
                                "food_and_drink": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "groceries": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "self_transfer": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "tax": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "transport": {
                              "type": "object",
                              "properties": {
                                "fuel": {
                                  "type": "object",
                                  "properties": {
                                    "total_net": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_debit": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "total_credit": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "utilities": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "withdrawal": {
                              "type": "object",
                              "properties": {
                                "total_net": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_debit": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "total_credit": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            }
                          }
                        },
                        "cashflow_by_method": {
                          "type": "object",
                          "description": "Cashflow insights specific to each transaction method. Transaction methods describes 'how' a transaction was completed (e.g. cash, check, bank transfer).",
                          "properties": {
                            "bank_transfer": {
                              "type": "object",
                              "properties": {
                                "total_credits": {
                                  "type": "integer",
                                  "example": 300,
                                  "description": "The summed amount of all credit transactions relevant to this transaction method (in cents)."
                                },
                                "total_debits": {
                                  "type": "integer",
                                  "example": 200,
                                  "description": "The summed amount of all debit transactions relevant to this transaction method (in cents)."
                                },
                                "total_net": {
                                  "type": "integer",
                                  "example": 100,
                                  "description": "This is equivalent to total_credits minus total_debits."
                                }
                              }
                            },
                            "card_payment": {
                              "type": "object",
                              "properties": {
                                "total_credits": {
                                  "type": "integer",
                                  "example": 300,
                                  "description": "The summed amount of all credit transactions relevant to this transaction method (in cents)."
                                },
                                "total_debits": {
                                  "type": "integer",
                                  "example": 200,
                                  "description": "The summed amount of all debit transactions relevant to this transaction method (in cents)."
                                },
                                "total_net": {
                                  "type": "integer",
                                  "example": 100,
                                  "description": "This is equivalent to total_credits minus total_debits."
                                }
                              }
                            },
                            "cash": {
                              "type": "object",
                              "properties": {
                                "total_credits": {
                                  "type": "integer",
                                  "example": 300,
                                  "description": "The summed amount of all credit transactions relevant to this transaction method (in cents)."
                                },
                                "total_debits": {
                                  "type": "integer",
                                  "example": 200,
                                  "description": "The summed amount of all debit transactions relevant to this transaction method (in cents)."
                                },
                                "total_net": {
                                  "type": "integer",
                                  "example": 100,
                                  "description": "This is equivalent to total_credits minus total_debits."
                                }
                              }
                            },
                            "check": {
                              "type": "object",
                              "properties": {
                                "total_credits": {
                                  "type": "integer",
                                  "example": 300,
                                  "description": "The summed amount of all credit transactions relevant to this transaction method (in cents)."
                                },
                                "total_debits": {
                                  "type": "integer",
                                  "example": 200,
                                  "description": "The summed amount of all debit transactions relevant to this transaction method (in cents)."
                                },
                                "total_net": {
                                  "type": "integer",
                                  "example": 100,
                                  "description": "This is equivalent to total_credits minus total_debits."
                                }
                              }
                            }
                          }
                        },
                        "daily_balances": {
                          "type": "object",
                          "description": "The balance for each day in the period (in cents). Daily balances are taken from the end of each day.",
                          "example": {
                            "2022-12-23": 1341028,
                            "2022-12-24": 1455800,
                            "2022-12-25": 1455800,
                            "2022-12-26": 1440853,
                            "2022-12-27": 1440853,
                            "2022-12-28": 1440853,
                            "2022-12-29": 1440853,
                            "2022-12-30": 1440853,
                            "2022-12-31": 1440853,
                            "2022-01-01": 1440853,
                            "2022-01-02": 1316303,
                            "2022-01-03": 1316303,
                            "2022-01-04": 1316303,
                            "2022-01-05": 1282373,
                            "2022-01-06": 1282373,
                            "2022-01-07": 1282373,
                            "2022-01-08": 1282373,
                            "2022-01-09": 1282373,
                            "2022-01-10": 1282373,
                            "2022-01-11": 1282373,
                            "2022-01-12": 1257426,
                            "2022-01-13": 1248295,
                            "2022-01-14": 1247241,
                            "2022-01-15": 1247241,
                            "2022-01-16": 1247241,
                            "2022-01-17": 1247241,
                            "2022-01-18": 1247241,
                            "2022-01-19": 1247241,
                            "2022-01-20": 1164686,
                            "2022-01-21": 1238802,
                            "2022-01-22": 1237381
                          },
                          "properties": {
                            "date": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The balance information for the given date (in cents).",
                              "example": "2022-01-22"
                            }
                          }
                        },
                        "30_day_balance_change": {
                          "type": "number",
                          "description": "Balance change over the last 30 days for the account (in cents). This value will be set to null if the time period does not cover sufficient days.",
                          "example": -103647
                        },
                        "60_day_balance_change": {
                          "type": "number",
                          "description": "Balance change over the last 60 days for the account (in cents). This value will be set to null if the time period does not cover sufficient days.",
                          "example": null
                        },
                        "90_day_balance_change": {
                          "type": "number",
                          "description": "Balance change over the last 90 days for the account (in cents). This value will be set to null if the time period does not cover sufficient days.",
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "daily_balance_volatility": {
                          "type": "number",
                          "format": "int",
                          "description": "This is the [standard deviation](<https://en.wikipedia.org/wiki/Standard_deviation>) of all daily balances. This represents the volatility of the customers bank account balances. For customers with multiple bank accounts, we calculate the [standard deviation of the sum ](<https://online.stat.psu.edu/stat500/book/export/html/572>)of the bank account balance variables.",
                          "example": 119
                        },
                        "metadata": {
                          "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/responses/200/content/application~1json/schema/properties/metadata"
                        },
                        "confidence_score": {
                          "type": "number",
                          "deprecated": true,
                          "format": "float",
                          "description": "The confidence score represents the degree of certainty for the accuracy of the Credit Insights outputs. We calculate this score using a weighted combination of parsing and transaction categorization certainties. Confidence scores above 0.5 represent high confidence.",
                          "example": 0.99
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/credit_analysis/expenditure_insights": {
      "get": {
        "tags": [
          "Credit Insights"
        ],
        "summary": "Retrieve Expenditure Insights (Customer)",
        "description": "Returns expenditure insights derived from submitted customer documents and transactions.",
        "operationId": "getCustomerCreditAnalysisExpenditureInsights",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The id of the customer to return.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/3"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1transactions/get/parameters/15"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved customer expenditure insights.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_spend": {
                      "type": "integer",
                      "example": 359606,
                      "description": "The summed amounts of all spend (debit) transactions (in cents)."
                    },
                    "spend_by_vendor": {
                      "type": "object",
                      "description": "The summed amounts of all spend (debit) transactions split by vendor (in cents). It is important to note that not all transactions will have assigned vendors.",
                      "properties": {
                        "vendor": {
                          "description": "The summed amounts of all spend (debit) transactions associated to this vendor (in cents).",
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 10692
                            }
                          }
                        }
                      },
                      "example": {
                        "AMAZON": {
                          "total": 10692
                        },
                        "ATRIUM": {
                          "total": 2500
                        },
                        "ATT&T": {
                          "total": 74
                        },
                        "COSTCO": {
                          "total": 2057
                        },
                        "EBAY": {
                          "total": 12884
                        },
                        "FRED'S FISH": {
                          "total": 13359
                        },
                        "MAGNOLIA CENTER": {
                          "total": 6000
                        },
                        "PADDY'S PIES": {
                          "total": 2542
                        },
                        "SBC-CA": {
                          "total": 74
                        },
                        "WALMART": {
                          "total": 9190
                        }
                      }
                    },
                    "spend_by_category": {
                      "type": "object",
                      "description": "The summed amounts of all spend (debit) transactions split by Inscribe's transaction categories (in cents). Total spend can be accessed for each category, as well as each subcategory. It is important to note that not all transactions will have assigned categories.",
                      "properties": {
                        "accommodation": {
                          "type": "object",
                          "properties": {
                            "rent": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "hotels": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "total": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "bank_charge": {
                          "type": "object",
                          "properties": {
                            "overdraft": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "nsf": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "interest_paid": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "total": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "entertainment": {
                          "type": "object",
                          "properties": {
                            "gambling": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "total": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "infrastructure": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "insurance": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "investments": {
                          "type": "object",
                          "properties": {
                            "savings": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "sweep_transfer": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "trading": {
                              "type": "object",
                              "properties": {
                                "crypto_trading": {
                                  "type": "object",
                                  "properties": {
                                    "total": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "total": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "total": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "loan": {
                          "type": "object",
                          "properties": {
                            "mortgage": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "example": 119100
                                }
                              }
                            },
                            "mca": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "payday": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "card_repayment": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "auto_loan": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "buy_now_pay_later": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "total": {
                              "type": "integer",
                              "example": 119100
                            }
                          }
                        },
                        "personnel": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "retail": {
                          "type": "object",
                          "properties": {
                            "food_and_drink": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "groceries": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "total": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "tax": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "transport": {
                          "type": "object",
                          "properties": {
                            "fuel": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "example": 0
                                }
                              }
                            },
                            "total": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "utilities": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        },
                        "withdrawal": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/responses/200/content/application~1json/schema/properties/metadata"
                    },
                    "confidence_score": {
                      "type": "number",
                      "deprecated": true,
                      "format": "float",
                      "description": "The confidence score represents the degree of certainty for the accuracy of the Credit Insights outputs. We calculate this score using a weighted combination of parsing and transaction categorization certainties. Confidence scores above 0.5 represent high confidence.",
                      "example": 0.99
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/bank_accounts/{bank_account_id}/credit_analysis/expenditure_insights": {
      "get": {
        "tags": [
          "Credit Insights"
        ],
        "summary": "Retrieve Expenditure Insights (Bank Account)",
        "description": "Returns expenditure insights derived from submitted customer documents and transactions..",
        "operationId": "getBankAccountCreditAnalysisExpenditureInsights",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The id of the customer to return.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "bank_account_id",
            "in": "path",
            "description": "The id of the bank account to return.",
            "example": "506d3678-1bde-473e-b884-64189d48f9e7",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/3"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1transactions/get/parameters/15"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved customer expenditure insights.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis~1expenditure_insights/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/credit_analysis/income_insights": {
      "get": {
        "tags": [
          "Credit Insights"
        ],
        "summary": "Retrieve Income Insights (Customer)",
        "description": "Returns income insights derived from submitted customer documents and transactions.",
        "operationId": "getCustomerCreditAnalysisIncomeInsights",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The id of the customer to return.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/3"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1transactions/get/parameters/15"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved customer income insights.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "personal_income": {
                      "type": "object",
                      "description": "Insights relating to personal income data.",
                      "properties": {
                        "transaction_data": {
                          "type": "object",
                          "description": "Personal income insights relating to transaction data (bank statements and open banking data).",
                          "properties": {
                            "estimated_annual_net": {
                              "type": "integer",
                              "description": "Estimated annual net income (in cents).",
                              "example": 8866968
                            },
                            "period_net": {
                              "type": "integer",
                              "description": "Net income over the period (in cents). The term `period` refers to the time interval covering the earliest date to the latest date found in the submitted data.",
                              "example": 753085
                            },
                            "count_deposits": {
                              "type": "integer",
                              "description": "Number of income deposit transactions.",
                              "example": 24
                            },
                            "average_deposit_amount": {
                              "type": "integer",
                              "description": "The average deposit amount across all uploaded personal income transactions.",
                              "example": 10000
                            },
                            "streams": {
                              "type": "object",
                              "description": "List of all income streams relating to transaction data.",
                              "properties": {
                                "sample_payer_1": {
                                  "type": "array",
                                  "description": "Income insights relating to income received from sample_payer_1.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "frequency": {
                                        "type": "string",
                                        "description": "The frequency of this income stream, either `daily`, `weekly`, `fortnightly`, `monthly`, `irregular`, or `unknown`.",
                                        "example": "monthly"
                                      },
                                      "estimated_annual_net": {
                                        "type": "integer",
                                        "description": "Estimated annual net income for this income stream (in cents).",
                                        "example": 7495769
                                      },
                                      "period_net": {
                                        "type": "integer",
                                        "description": "Net income over the period for this income stream (in cents). The term `period` refers to the time interval covering the earliest date to the latest date found in the submitted data.",
                                        "example": 636627
                                      },
                                      "transaction_ids": {
                                        "type": "array",
                                        "description": "List of transaction IDs relating to this income stream.",
                                        "items": {
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "example": [
                                          "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
                                          "d0734cb2-eb23-11ed-a05b-0242ac120004"
                                        ]
                                      },
                                      "category": {
                                        "type": "string",
                                        "description": "The Inscribe category that this revenue stream belongs to. The Inscribe category that this income stream belongs to. Options here include the top-level category `income`, or one of the subcategories `salary`, `retirement`, `social_security`, `commission_received`, or `interest_received`.",
                                        "example": "salary"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "payslip_data": {
                          "type": "object",
                          "description": "Personal income insights relating to payslips.",
                          "properties": {
                            "estimated_annual_net": {
                              "type": "integer",
                              "description": "Estimated annual net income (in cents).",
                              "example": 8866968
                            },
                            "period_net": {
                              "type": "integer",
                              "description": "Net income over the period (in cents). The term `period` refers to the time interval covering the earliest date to the latest date found in the submitted data.",
                              "example": 753085
                            },
                            "estimated_annual_gross": {
                              "type": "integer",
                              "description": "Estimated annual gross income (in cents).",
                              "example": 9866968
                            },
                            "period_gross": {
                              "type": "integer",
                              "description": "Gross income over the period (in cents). The term `period` refers to the time interval covering the earliest date to the latest date found in the submitted data.",
                              "example": 783085
                            },
                            "streams": {
                              "type": "object",
                              "description": "List of all income streams relating to payslip data.",
                              "properties": {
                                "sample_payer_1": {
                                  "type": "array",
                                  "description": "Income insights relating to income received from sample_payer_1.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "frequency": {
                                        "type": "string",
                                        "description": "The frequency of this income stream, either `daily`, `weekly`, `fortnightly`, `monthly`, `irregular`, or `unknown`.",
                                        "example": "monthly"
                                      },
                                      "estimated_annual_net": {
                                        "type": "integer",
                                        "description": "Estimated annual net income for this income stream (in cents).",
                                        "example": 7495769
                                      },
                                      "period_net": {
                                        "type": "integer",
                                        "description": "Net income over the period for this income stream (in cents). The term `period` refers to the time interval covering the earliest date to the latest date found in the submitted data.",
                                        "example": 636627
                                      },
                                      "estimated_annual_gross": {
                                        "type": "integer",
                                        "description": "Estimated annual gross income for this income stream (in cents).",
                                        "example": 8495769
                                      },
                                      "period_gross": {
                                        "type": "integer",
                                        "description": "Gross income over the period for this income stream (in cents). The term `period` refers to the time interval covering the earliest date to the latest date found in the submitted data.",
                                        "example": 736627
                                      },
                                      "payslip_document_ids": {
                                        "type": "array",
                                        "description": "List of payslip document IDs related to this income stream.",
                                        "items": {
                                          "type": "integer",
                                          "example": 25017
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "revenue": {
                      "type": "object",
                      "description": "Insights relating to revenue data.",
                      "properties": {
                        "transaction_data": {
                          "type": "object",
                          "description": "Revenue insights relating to transaction data (bank statements and open banking data).",
                          "properties": {
                            "estimated_annual_gross": {
                              "type": "integer",
                              "description": "Estimated annual gross revenue (in cents).",
                              "example": 8866968
                            },
                            "period_gross": {
                              "type": "integer",
                              "description": "Gross revenue over the period (in cents). The term `period` refers to the time interval covering the earliest date to the latest date found in the submitted data.",
                              "example": 753085
                            },
                            "count_deposits": {
                              "type": "integer",
                              "description": "Number of revenue deposit transactions.",
                              "example": 24
                            },
                            "average_deposit_amount": {
                              "type": "integer",
                              "description": "The average deposit amount across all uploaded revenue transactions.",
                              "example": 10000
                            },
                            "streams": {
                              "type": "object",
                              "description": "List of all revenue streams relating to transaction data.",
                              "properties": {
                                "sample_payer_1": {
                                  "type": "array",
                                  "description": "Revenue insights relating to income received from sample_payer_1.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "frequency": {
                                        "type": "string",
                                        "description": "The frequency of this revenue stream, either `daily`, `weekly`, `fortnightly`, `monthly`, `irregular`, or `unknown`.",
                                        "example": "monthly"
                                      },
                                      "estimated_annual_gross": {
                                        "type": "integer",
                                        "description": "Estimated annual gross revenue for this stream (in cents).",
                                        "example": 7495769
                                      },
                                      "period_gross": {
                                        "type": "integer",
                                        "description": "Gross revenue over the period for this stream (in cents). The term `period` refers to the time interval covering the earliest date to the latest date found in the submitted data.",
                                        "example": 636627
                                      },
                                      "transaction_ids": {
                                        "type": "array",
                                        "description": "List of transaction IDs for this revenue stream.",
                                        "items": {
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "example": [
                                          "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
                                          "160d1f86-eb24-11ed-a05b-0242ac120003"
                                        ]
                                      },
                                      "category": {
                                        "type": "string",
                                        "description": "The Inscribe category that this revenue stream belongs to. The Inscribe category that this income stream belongs to. Options here include the top-level category `income`, or one of the subcategories `revenue`, `retirement`, `social_security`, `commission_received`, or `interest_received`.",
                                        "example": "revenue"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/responses/200/content/application~1json/schema/properties/metadata"
                    },
                    "confidence_score": {
                      "type": "number",
                      "deprecated": true,
                      "format": "float",
                      "description": "The confidence score represents the degree of certainty for the accuracy of the Credit Insights outputs. We calculate this score using a weighted combination of parsing and transaction categorization certainties. Confidence scores above 0.5 represent high confidence.",
                      "example": 0.99
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/bank_accounts/{bank_account_id}/credit_analysis/income_insights": {
      "get": {
        "tags": [
          "Credit Insights"
        ],
        "summary": "Retrieve Income Insights (Bank Account)",
        "description": "Returns income insights derived from a submitted customer bank account.",
        "operationId": "getBankAccountCreditAnalysisIncomeInsights",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The id of the customer to return.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "bank_account_id",
            "in": "path",
            "description": "The id of the bank account to return.",
            "example": "506d3678-1bde-473e-b884-64189d48f9e7",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/3"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1transactions/get/parameters/15"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved customer income insights.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis~1income_insights/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/credit_analysis/loan_insights": {
      "get": {
        "tags": [
          "Credit Insights"
        ],
        "summary": "Retrieve Loan Insights (Customer)",
        "description": "Returns loan insights derived from submitted customer documents and transactions.",
        "operationId": "getCustomerCreditAnalysisLoanInsights",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The id of the customer to return.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/3"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1transactions/get/parameters/15"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved customer loan insights.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count_loan_repayments": {
                      "type": "integer",
                      "example": 1,
                      "description": "The quantity of loan repayment transactions."
                    },
                    "total_loan_repayments": {
                      "type": "integer",
                      "example": 119100,
                      "description": "The summed amount of all loan repayment transactions (in cents)."
                    },
                    "count_loan_disbursements": {
                      "type": "integer",
                      "example": 0,
                      "description": "The quantity of loan disbursement (income) transactions."
                    },
                    "total_loan_disbursements": {
                      "type": "integer",
                      "example": 0,
                      "description": "The summed amount of all loan disbursement (income) transactions (in cents)."
                    },
                    "loans": {
                      "type": "object",
                      "description": "All found loans, split by lender. Each lender has an array of loans, as there may be more than one loan per lender (e.g. a customer may have a car loan and a mortgage with the same lender).",
                      "example": {
                        "pnc bank association": [
                          {
                            "repayment_transaction_ids": [
                              "d1cdcb04-e9fa-4a5a-a61c-04bf33edb0da"
                            ],
                            "disbursement_transaction_ids": [],
                            "repayment_frequency": "unknown",
                            "first_seen": "2022-01-02",
                            "total_repayments": 119100,
                            "total_disbursements": 0,
                            "category": "mortgage"
                          }
                        ]
                      },
                      "properties": {
                        "lender_name": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "repayment_transaction_ids": {
                                "type": "array",
                                "description": "An array of all loan repayment transaction ids for the given loan.",
                                "items": {
                                  "type": "string",
                                  "description": "A loan repayment transaction id.",
                                  "example": "d1cdcb04-e9fa-4a5a-a61c-04bf33edb0da"
                                }
                              },
                              "disbursement_transaction_ids": {
                                "type": "array",
                                "description": "An array of all loan disbursement transaction ids for the given loan.",
                                "items": {
                                  "description": "A loan disbursement transaction id.",
                                  "type": "string",
                                  "example": "f1ddcb04-e9fa-4a6a-a61c-74bf33edb0ee"
                                }
                              },
                              "repayment_frequency": {
                                "type": "string",
                                "example": "monthly",
                                "description": "The frequency of this loan repayment, either `daily`, `weekly`, `fortnightly`, `monthly`, `irregular`, or `unknown`."
                              },
                              "first_seen": {
                                "type": "string",
                                "format": "date",
                                "description": "The earliest date that a repayment transaction was seen for this loan.",
                                "example": "2022-01-02"
                              },
                              "total_repayments": {
                                "type": "integer",
                                "description": "The summed total of all loan repayment transactions for this loan (in cents).",
                                "example": 119100
                              },
                              "total_disbursements": {
                                "type": "integer",
                                "description": "The summed total of all loan disbursement (income) transactions for this loan (in cents).",
                                "example": 0
                              },
                              "category": {
                                "type": "string",
                                "description": "The Inscribe loan category that this loan belongs to. Options here include the top-level category `loan`, or the subcategories `mortgage`, `card_repayment`, `mca`, `payday`, `auto_loan`, or `buy_now_pay_later`.",
                                "example": "mortgage"
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/responses/200/content/application~1json/schema/properties/metadata"
                    },
                    "confidence_score": {
                      "type": "number",
                      "deprecated": true,
                      "format": "float",
                      "description": "The confidence score represents the degree of certainty for the accuracy of the Credit Insights outputs.  We calculate this score using a weighted combination of parsing and transaction categorization certainties.  Confidence scores above 0.5 represent high confidence.",
                      "example": 0.99
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/bank_accounts/{bank_account_id}/credit_analysis/loan_insights": {
      "get": {
        "tags": [
          "Credit Insights"
        ],
        "summary": "Retrieve Loan Insights (Bank Account)",
        "description": "Returns loan insights derived from a submitted customer bank account.",
        "operationId": "getBankAccountCreditAnalysisLoanInsights",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The id of the customer to return.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "bank_account_id",
            "in": "path",
            "description": "The id of the bank account to return.",
            "example": "506d3678-1bde-473e-b884-64189d48f9e7",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/3"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1transactions/get/parameters/15"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved customer loan insights.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis~1loan_insights/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/credit_analysis/risk_insights": {
      "get": {
        "tags": [
          "Credit Insights"
        ],
        "summary": "Retrieve Risk Insights (Customer)",
        "description": "Returns risk insights derived from submitted customer documents and transactions.",
        "operationId": "getCustomerCreditAnalysisRiskInsights",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The id of the customer to return.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/3"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1transactions/get/parameters/15"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved customer risk insights.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Insights about risk specific to the listed customer or bank account.",
                  "properties": {
                    "count_atm_withdrawal": {
                      "type": "number",
                      "format": "int",
                      "description": "The quantity of ATM withdrawal transactions.",
                      "example": 4
                    },
                    "total_atm_withdrawal": {
                      "type": "number",
                      "format": "int",
                      "description": "The summed amount of all ATM withdrawal transactions (in cents).",
                      "example": 10000
                    },
                    "count_nsf": {
                      "type": "number",
                      "format": "int",
                      "description": "The quantity of non-sufficient fund transactions. Excluding refund transactions.",
                      "example": 2
                    },
                    "count_nsf_days": {
                      "type": "number",
                      "format": "int",
                      "description": "The number of unique days on which non-sufficient fund transactions occurred. Excluding refund transactions.",
                      "example": 2
                    },
                    "count_overdraft": {
                      "type": "number",
                      "format": "int",
                      "description": "The quantity of overdraft transactions. Excluding refund transactions.",
                      "example": 2
                    },
                    "count_overdraft_days": {
                      "type": "number",
                      "format": "int",
                      "description": "The number of unique days on which overdraft transactions occurred. Excluding refund transactions.",
                      "example": 1
                    },
                    "gambling_net": {
                      "type": "number",
                      "format": "int",
                      "description": "This is the total gambling income minus the total gambling losses (in cents).",
                      "example": -10000
                    },
                    "total_gambling_spend": {
                      "type": "number",
                      "format": "int",
                      "description": "The summed amount of all gambling spend transactions (in cents).",
                      "example": 10000
                    },
                    "expenditure_exceeds_income": {
                      "type": "boolean",
                      "description": "A boolean which checks if total expenditure exceeded total income. For example, this will be set to True if total expenditure is $100 and total income is $50.",
                      "example": true
                    },
                    "large_deposits": {
                      "type": "array",
                      "description": "The quantity of large deposits that exceed defined thresholds.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "threshold_amount": {
                            "type": "number",
                            "format": "int",
                            "description": "The static threshold_amount determines if a deposit is significantly large or not. e.g., If 100000 is returned in this key, then the number of deposits over $1000.00 (100000 cents) will be returned in the quantity field"
                          },
                          "threshold_monthly_income_percentage": {
                            "type": "number",
                            "format": "int",
                            "description": "The percentage threshold determines if a deposit is significantly large or not based on an income percentage. e.g., If 50 is returned in this key, then the number of deposits which amount to over 50% of monthly income will be returned in the quantity field"
                          },
                          "quantity": {
                            "type": "number",
                            "format": "int",
                            "description": "The number of deposits whose amount exceeds the defined thresholds. For example, let's imagine deposit amounts of [1000, 200000, 12000000, 21000000] (in cents) and a predicted monthly income of 150000.\n\nIf: threshold_amount = 1000000 Then: quantity = 2 (There are only 2 deposits whose amount is greater than 1000000 cents)\n\nIf: threshold_monthly_income_percentage: 50 (50% of total monthly income, which is 50% of 150000 = 75000) Then: quantity = 3 (There are 3 deposits whose amount is greater than 50% of monthly income  (75000))"
                          }
                        },
                        "example": [
                          {
                            "threshold_amount": 100000,
                            "quantity": 123
                          },
                          {
                            "threshold_amount": 1000000,
                            "quantity": 10
                          },
                          {
                            "threshold_amount": 10000000,
                            "quantity": 0
                          },
                          {
                            "threshold_monthly_income_percentage": "50,",
                            "quantity": 15
                          }
                        ]
                      }
                    },
                    "large_withdrawals": {
                      "type": "array",
                      "description": "The quantity of large withdrawals based on defined thresholds.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "threshold_amount": {
                            "type": "number",
                            "format": "int",
                            "description": "The static threshold_amount determines if a withdrawal is significantly large or not. e.g., If 100000 is returned in this key, then the number of withdrawals over $1000.00 (100000 cents) will be returned in the quantity field"
                          },
                          "quantity": {
                            "type": "number",
                            "format": "int",
                            "description": "The number of withdrawals whose amounts exceed the threshold given by the threshold_amount field"
                          }
                        },
                        "example": [
                          {
                            "threshold_amount": 100000,
                            "quantity": 123
                          },
                          {
                            "threshold_amount": 1000000,
                            "quantity": 10
                          },
                          {
                            "threshold_amount": 10000000,
                            "quantity": 0
                          }
                        ]
                      }
                    },
                    "count_crypto_trading": {
                      "type": "number",
                      "format": "int",
                      "description": "The quantity of crypto trading transactions.",
                      "example": 2
                    },
                    "crypto_trading_net": {
                      "type": "number",
                      "format": "int",
                      "description": "The summed amount of all crypto trading transactions (in cents).",
                      "example": 500000
                    },
                    "count_negative_balance_days": {
                      "type": "number",
                      "format": "int",
                      "description": "The number of days for which there was a negative balance. Daily balances are taken from the end of each day.",
                      "example": 0
                    },
                    "daily_balance_volatility": {
                      "type": "number",
                      "format": "int",
                      "description": "This is the [standard deviation](<https://en.wikipedia.org/wiki/Standard_deviation>) of all daily balances. This represents the volatility of the customers bank account balances. For customers with multiple bank accounts, we calculate the [standard deviation of the sum ](<https://online.stat.psu.edu/stat500/book/export/html/572>)of the bank account balance variables.",
                      "example": 119
                    },
                    "metadata": {
                      "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/responses/200/content/application~1json/schema/properties/metadata"
                    },
                    "confidence_score": {
                      "type": "number",
                      "deprecated": true,
                      "format": "float",
                      "description": "The confidence score represents the degree of certainty for the accuracy of the Credit Insights outputs. We calculate this score using a weighted combination of parsing and transaction categorization certainties. Confidence scores above 0.5 represent high confidence.",
                      "example": 0.99
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/bank_accounts/{bank_account_id}/credit_analysis/risk_insights": {
      "get": {
        "tags": [
          "Credit Insights"
        ],
        "summary": "Retrieve Risk Insights (Bank Account)",
        "description": "Returns risk insights derived from a submitted customer bank account.",
        "operationId": "getBankAccountCreditAnalysisRiskInsights",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The id of the customer to return.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "bank_account_id",
            "in": "path",
            "description": "The id of the bank account to return.",
            "example": "506d3678-1bde-473e-b884-64189d48f9e7",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis/get/parameters/3"
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1transactions/get/parameters/15"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved customer risk insights.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1credit_analysis~1risk_insights/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Create a Customer",
        "description": "Creates a customer object to easily track and store documents.",
        "operationId": "addCustomer",
        "responses": {
          "201": {
            "description": "Successfully created a new customer.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the object.",
                      "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b"
                    },
                    "name": {
                      "type": "string",
                      "example": "Frank Abagnale",
                      "description": "A unique name that was given to the customer by you."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which the object was created. In the format: yyyy-MM-dd'T'HH:mm:ssZ",
                      "example": "2019-12-12T15:35:08.460Z"
                    },
                    "approved": {
                      "type": "boolean",
                      "description": "Has the value false if you have identified the customer as fraudulent, true is legitimate, and null if unknown. The default is null.",
                      "example": true
                    },
                    "notes": {
                      "type": "string",
                      "description": "Additional notes that you have recorded about this customer.",
                      "example": "Customer requires more documents"
                    },
                    "no_of_documents": {
                      "type": "integer",
                      "description": "A whole number representing the number of documents attached to this customer.",
                      "example": 2
                    },
                    "urls": {
                      "type": "object",
                      "properties": {
                        "web_app": {
                          "type": "string",
                          "description": "A URL to the location of this customer on our web app.",
                          "example": "https://app.inscribe.ai/#/customer/0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b"
                        },
                        "api": {
                          "type": "string",
                          "description": "A URL to the location of this customer on our API.",
                          "example": "https://api.inscribe.ai/api/v2/customers/0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b"
                        }
                      }
                    },
                    "creator": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier of the user who created this customer.",
                          "example": "dca9cbb0-d41a-408b-8fd1-99af7e10bf87"
                        },
                        "email": {
                          "type": "string",
                          "description": "The email address of the user who created this customer.",
                          "example": "mary.johnson@fraudchecker.com"
                        }
                      }
                    },
                    "organisation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier of the organisation this customer belongs to.",
                          "example": "15ee827f-2a76-42de-b8b8-36f11430f5a2"
                        }
                      }
                    },
                    "persons": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1customers/post/requestBody/content/application~1json/schema/properties/persons/items"
                      },
                      "description": "List of persons associated with the customer record"
                    },
                    "company": {
                      "type": "object",
                      "description": "The company associated with the customer record",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Company name",
                          "example": "Acme Inc"
                        },
                        "address": {
                          "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1documents~1%7Bid%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/verification/properties/address/properties/structured"
                        },
                        "id_number": {
                          "type": "string",
                          "description": "The ID number of the company, this could be the EIN or any other tax number",
                          "example": "01-1234567"
                        },
                        "structure": {
                          "type": "string",
                          "description": "The structure of the company",
                          "example": "LIMITED_LIABILITY_COMPANY",
                          "enum": [
                            "SOLE_PROPRIETORSHIP",
                            "PARTNERSHIP",
                            "CORPORATION",
                            "LIMITED_LIABILITY_COMPANY",
                            "PRIVATE_LIMITED_COMPANY",
                            "NON_PROFIT"
                          ]
                        },
                        "phone_number": {
                          "type": "string",
                          "description": "Phone number of the company",
                          "example": "+1 555 123 4567"
                        },
                        "website_url": {
                          "type": "string",
                          "description": "Website URL of the company",
                          "example": "https://inscribe.ai"
                        }
                      }
                    },
                    "fraud_rating": {
                      "type": "string",
                      "description": "The fraud rating of the customer. This field can be either 'HIGH_RISK', 'LOW_RISK', 'UNCERTAIN_RISK', or null. More information can be found at https://help.inscribe.ai/en/articles/8631969-fraud-rating",
                      "enum": [
                        "HIGH_RISK",
                        "LOW_RISK",
                        "UNCERTAIN_RISK",
                        null
                      ],
                      "nullable": true
                    },
                    "verify_entity": {
                      "type": "object",
                      "description": "Entities that have been requested to be verified.",
                      "properties": {
                        "income": {
                          "type": "object",
                          "description": "Income entities that have requested to be verified. This service is currently only available for Inscribe Credit customers. The `personal_income` and `revenue` fields will only be returned if they were included in the initial verification request when creating the customer.",
                          "properties": {
                            "personal_income": {
                              "description": "This is the personal income verification request.",
                              "type": "object",
                              "properties": {
                                "lower_income_tolerance": {
                                  "description": "The tolerance with which found incomes below the `input` amount are verified. For example, if this value is set to 0.1, an income will verified if it is at least 90% (1-`lower_income_tolerance`) of the `input` amount.",
                                  "type": "number",
                                  "example": 0.1
                                },
                                "under_reported_tolerance": {
                                  "description": "The tolerance with which found incomes above the `input` amount are set to `under_reported`. For example, if this value is set to 0.1, an income will set to `under_reported` if it is at least 110% (1+`under_reported_tolerance`) of the `input` amount.",
                                  "type": "number",
                                  "example": 0.1
                                },
                                "input": {
                                  "description": "This is the expected income amount to be verified (in cents).",
                                  "type": "number",
                                  "example": 10000
                                },
                                "frequency": {
                                  "description": "This is frequency of the income to check. Currently, the only income that can be checked is `annual` income.",
                                  "type": "string",
                                  "example": "annual"
                                },
                                "verified": {
                                  "description": "This is the status of the verification request. This will be set to `true` if the found income was greater than or equal to the `input` value (adjusted by any given `lower_income_tolerance`). It will be set to `false` if the `input` value did not meet that threshold. If no relevant documents have been provided, this value is set to `null`.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "matched": {
                                  "description": "This is the found income amount (in cents).",
                                  "type": "number",
                                  "example": 10000
                                },
                                "amount_type": {
                                  "description": "This is the type of the found income.",
                                  "type": "string",
                                  "enum": [
                                    "gross",
                                    "net"
                                  ]
                                },
                                "under_reported": {
                                  "description": "This value is set to `true` if the found income exceeded the `input` amount. It is set to `false` if the found income did not. It is set to `null` if no relevant documents were provided or if the income was not verified.",
                                  "type": "boolean",
                                  "example": false
                                }
                              }
                            },
                            "revenue": {
                              "description": "This is the revenue verification request.",
                              "type": "object",
                              "properties": {
                                "lower_income_tolerance": {
                                  "description": "The tolerance with which found incomes below the `input` amount are verified. For example, if this value is set to 0.1, an income will verified if it is at least 90% (1-`lower_income_tolerance`) of the `input` amount.",
                                  "type": "number",
                                  "example": 0.1
                                },
                                "under_reported_tolerance": {
                                  "description": "The tolerance with which found incomes above the `input` amount are set to `under_reported`. For example, if this value is set to 0.1, an income will set to `under_reported` if it is at least 110% (1+`under_reported_tolerance`) of the `input` amount.",
                                  "type": "number",
                                  "example": 0.1
                                },
                                "input": {
                                  "description": "This is the expected revenue amount to be verified (in cents).",
                                  "type": "number",
                                  "example": 50000
                                },
                                "frequency": {
                                  "description": "This is frequency of the revenue to check. Currently, the only revenue that can be checked is `annual` income.",
                                  "type": "string",
                                  "example": "annual"
                                },
                                "verified": {
                                  "description": "This is the status of the verification request. This will be set to `true` if the found revenue was greater than or equal to the `input` value (adjusted by any given `lower_income_tolerance`). It will be set to `false` if the `input` value did not meet that threshold. If no relevant documents have been provided, this value is set to `null`.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "matched": {
                                  "description": "This is the found revenue amount (in cents).",
                                  "type": "number",
                                  "example": 49000
                                },
                                "amount_type": {
                                  "description": "This is the type of the found revenue.",
                                  "type": "string",
                                  "enum": [
                                    "gross",
                                    "net"
                                  ]
                                },
                                "under_reported": {
                                  "description": "This value is set to `true` if the found revenue exceeded the `input` amount. It is set to `false` if the found revenue did not. It is set to `null` if no relevant documents were provided or if the revenue was not verified.",
                                  "type": "boolean",
                                  "example": false
                                }
                              }
                            },
                            "confidence_score": {
                              "type": "number",
                              "format": "float",
                              "description": "The confidence score represents the degree of certainty for the income verification decision.  We calculate this score using a weighted combination of parsing and transaction categorization certainties.  Confidence scores above 0.5 represent high confidence.",
                              "example": 0.99
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "409": {
            "description": "The name you have provided for the customer already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "error message"
                    },
                    "id": {
                      "type": "string",
                      "example": "ce1d4123-b482-4409-8177-cdf363bea111",
                      "description": "The id of the customer with the same name within your organisation."
                    }
                  },
                  "required": [
                    "message",
                    "id"
                  ]
                }
              }
            }
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Frank Abagnale",
                    "description": "A unique name given to the customer by you."
                  },
                  "approved": {
                    "type": "boolean",
                    "description": "Set the value true if you have approved the customer, false if you have rejected the customer. The default is null.",
                    "example": false
                  },
                  "notes": {
                    "type": "string",
                    "description": "Additional notes that you want to record about this customer.",
                    "example": "John is a new customer"
                  },
                  "persons": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Person associated with the customer record",
                      "properties": {
                        "first_name": {
                          "type": "string",
                          "description": "First name of the person",
                          "example": "John"
                        },
                        "last_name": {
                          "type": "string",
                          "description": "Last name of the person",
                          "example": "Smith"
                        },
                        "date_of_birth": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date of birth of the person. In the format: yyyy-MM-dd'T'HH:mm:ssZ",
                          "example": "1994-12-31T00:00:00.000Z"
                        },
                        "address": {
                          "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1documents~1%7Bid%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/verification/properties/address/properties/structured"
                        },
                        "phone_number": {
                          "type": "string",
                          "description": "Phone number of the person",
                          "example": "+353 85 123 4567"
                        },
                        "id_number": {
                          "type": "string",
                          "description": "The ID number of the person, this could be the SSN, PPSN or any other tax number",
                          "example": "078-05-1120"
                        }
                      }
                    },
                    "description": "List of persons associated with the customer record"
                  },
                  "company": {
                    "$ref": "#/paths/~1customers/post/responses/201/content/application~1json/schema/properties/company"
                  },
                  "verify_entity": {
                    "type": "object",
                    "description": "Entities that are requested to be verified.",
                    "properties": {
                      "income": {
                        "description": "Income entities that are requested to be verified. This service is currently only available for Inscribe Credit customers. It is possible to have verification requests on both `personal_income` and `revenue` for a given customer.",
                        "type": "object",
                        "properties": {
                          "personal_income": {
                            "description": "This is the personal income verification request.",
                            "type": "object",
                            "properties": {
                              "lower_income_tolerance": {
                                "description": "The tolerance with which found incomes below the `input` amount are verified. For example, if this value is set to 0.1, an income will verified if it is at least 90% (1-`lower_income_tolerance`) of the `input` amount.",
                                "type": "number",
                                "example": 0.1
                              },
                              "under_reported_tolerance": {
                                "description": "The tolerance with which found incomes above the `input` amount are set to `under_reported`. For example, if this value is set to 0.1, an income will set to `under_reported` if it is at least 110% (1+`under_reported_tolerance`) of the `input` amount.",
                                "type": "number",
                                "example": 0.1
                              },
                              "input": {
                                "description": "This is the expected income amount to be verified (in cents).",
                                "type": "number",
                                "example": 10000
                              },
                              "frequency": {
                                "description": "This is frequency of the income to check. Currently, the only income that can be checked is `annual` income.",
                                "type": "string",
                                "example": "annual"
                              }
                            }
                          },
                          "revenue": {
                            "description": "This is the revenue verification request.",
                            "type": "object",
                            "properties": {
                              "lower_income_tolerance": {
                                "description": "The tolerance with which found incomes below the `input` amount are verified. For example, if this value is set to 0.1, an income will verified if it is at least 90% (1-`lower_income_tolerance`) of the `input` amount.",
                                "type": "number",
                                "example": 0.1
                              },
                              "under_reported_tolerance": {
                                "description": "The tolerance with which found incomes above the `input` amount are set to `under_reported`. For example, if this value is set to 0.1, an income will set to `under_reported` if it is at least 110% (1+`under_reported_tolerance`) of the `input` amount.",
                                "type": "number",
                                "example": 0.1
                              },
                              "input": {
                                "description": "This is the expected revenue amount to be verified (in cents).",
                                "type": "number",
                                "example": 50000
                              },
                              "frequency": {
                                "description": "This is frequency of the revenue to check. Currently, the only revenue that can be checked is `annual` income.",
                                "type": "string",
                                "example": "annual"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "A customer object.",
          "required": true
        }
      },
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "List all Customers",
        "description": "Returns a paginated list of your customers based on optional query parameters. If the customer search query parameter is used, the list is sorted by relevance, otherwise, the customers are returned sorted by creation date, with the most recently created customers appearing first.",
        "operationId": "getCustomers",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Set a limit on the number of customers to be returned. The limit can range between 1 and 100, the default is 10.",
            "example": 10,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "Indicate which page of the customer list to return, the default is 1.",
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Filter by a customer's name. Any order parameters will be ignored and results will be ordered by similarity to the search term.",
            "example": "Frank Abagnale",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "Filter by the customer's status. This parameter can accept multiple values, allowing for a combination of status filters. Separate each status with a comma. The available filter options are: 'approved', 'rejected', and 'unknown', which reflect the customer approved field set by you as true, false, and null respectively. For example, '?status=approved,rejected' will filter customers whose status is either 'approved' or 'rejected'.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "approved",
                  "rejected",
                  "unknown"
                ]
              }
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Option to order the list of customers. There are two options: 'created_at' and '-created_at' where customers are returned sorted by creation date in ascending or descending order respectively.",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "-created_at"
              ]
            }
          },
          {
            "in": "query",
            "name": "startDate",
            "description": "The date filter allows you to filter customers by date intervals. The value must be in the format yyyy-MM-dd or yyyy-MM-dd'T'HH:mm:ssZ for precise filtering. The filter includes everything from the start date up to but not including the end date. startDate and endDate must both be set to filter by date.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "The date filter allows you to filter customers by date intervals. The value must be in the format yyyy-MM-dd or yyyy-MM-dd'T'HH:mm:ssZ for precise filtering. The filter includes everything from the start date up to but not including the end date. endDate and startDate must both be set to filter by date.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "creator",
            "description": "Filter customers created only by this user id. This user must be in your organisation and you must have permission to access their customers.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "tag",
            "description": "Filter customers where at least one document has been marked with the descriptive tag supplied.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "customer_ids",
            "description": "A comma separated list of customer UUIDs. This will filter the customers to only include the ones with the given UUIDs.",
            "required": false,
            "example": "3616baa9-9caf-434e-b4d0-8a32c644dfd4,3616baa9-9caf-434e-b4d0-8a32c644dfe5",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A map with a data property that contains an array of up to the limit of customers. Each entry in the array is a separate customer object. If no customers are available, the resulting array will be empty.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the object.",
                                "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b"
                              },
                              "name": {
                                "type": "string",
                                "example": "Frank Abagnale",
                                "description": "A unique name that was given to the customer by you."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time at which the object was created. In the format: yyyy-MM-dd'T'HH:mm:ssZ",
                                "example": "2019-12-12T15:35:08.460Z"
                              },
                              "approved": {
                                "type": "boolean",
                                "description": "Has the value false if you have identified the customer as fraudulent, true is legitimate, and null if unknown. The default is null.",
                                "example": true
                              },
                              "notes": {
                                "type": "string",
                                "description": "Additional notes that you have recorded about this customer.",
                                "example": "Customer requires more documents"
                              },
                              "no_of_documents": {
                                "type": "integer",
                                "description": "A whole number representing the number of documents attached to this customer.",
                                "example": 2
                              },
                              "urls": {
                                "type": "object",
                                "properties": {
                                  "web_app": {
                                    "type": "string",
                                    "description": "A URL to the location of this customer on our web app.",
                                    "example": "https://app.inscribe.ai/#/customer/0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b"
                                  },
                                  "api": {
                                    "type": "string",
                                    "description": "A URL to the location of this customer on our API.",
                                    "example": "https://api.inscribe.ai/api/v2/customers/0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b"
                                  }
                                }
                              },
                              "creator": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Unique identifier of the user who created this customer.",
                                    "example": "dca9cbb0-d41a-408b-8fd1-99af7e10bf87"
                                  },
                                  "email": {
                                    "type": "string",
                                    "description": "The email address of the user who created this customer.",
                                    "example": "mary.johnson@fraudchecker.com"
                                  }
                                }
                              },
                              "organisation": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Unique identifier of the organisation this customer belongs to.",
                                    "example": "15ee827f-2a76-42de-b8b8-36f11430f5a2"
                                  }
                                }
                              },
                              "persons": {
                                "$ref": "#/paths/~1customers/post/responses/201/content/application~1json/schema/properties/persons"
                              },
                              "company": {
                                "$ref": "#/paths/~1customers/post/responses/201/content/application~1json/schema/properties/company"
                              },
                              "fraud_rating": {
                                "$ref": "#/paths/~1customers/post/responses/201/content/application~1json/schema/properties/fraud_rating"
                              }
                            }
                          },
                          {
                            "not": {
                              "properties": {
                                "verify_entity": {}
                              }
                            }
                          }
                        ]
                      },
                      "description": "A map with a data property that contains an array of up to the limit of customers. Each entry in the array is a separate customer object. If no customers are available, the resulting array will be empty."
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer",
                              "description": "The limit on the number of customers that can be returned per page.",
                              "example": 10
                            },
                            "current_page": {
                              "type": "integer",
                              "description": "The current page number.",
                              "example": 1
                            },
                            "number_of_pages": {
                              "type": "integer",
                              "description": "The total number of pages available with the current query parameters.",
                              "example": 1
                            },
                            "total": {
                              "type": "integer",
                              "description": "The total number of customers available with the current query parameters.",
                              "example": 1
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "You have provided incorrect data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "You do not have permission to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1customers/get/responses/400/content/application~1json/schema"
                }
              }
            }
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Retrieve a Customer",
        "description": "Retrieves the details of an existing customer. Supply the unique customer id from either a customer creation request or the customer list.",
        "operationId": "getCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the customer to return.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1customers/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Update a Customer",
        "description": "Updates the specific customer by setting the values of the parameters passed. Any non-required parameters not provided will be left unchanged.",
        "operationId": "updateCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the customer to update.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1customers/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "409": {
            "$ref": "#/paths/~1customers/post/responses/409"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Frank Abagnale",
                    "description": "A unique name given to the customer by you."
                  },
                  "approved": {
                    "type": "boolean",
                    "description": "Set the value true if you have approved the customer, false if you have rejected the customer. The default is null.",
                    "example": false
                  },
                  "notes": {
                    "type": "string",
                    "description": "Additional notes that you want to record about this customer.",
                    "example": "John is a new customer"
                  },
                  "verify_entity": {
                    "$ref": "#/paths/~1customers/post/requestBody/content/application~1json/schema/properties/verify_entity"
                  },
                  "company": {
                    "$ref": "#/paths/~1customers/post/responses/201/content/application~1json/schema/properties/company"
                  }
                }
              }
            }
          },
          "description": "A customer object.",
          "required": true
        }
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Delete a Customer",
        "description": "Permanently deletes a customer and all documents associated with this customer. It cannot be undone.",
        "operationId": "deleteCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the customer to be deleted.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted."
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{id}/documents": {
      "post": {
        "x-readme": {
          "code-samples": [
            {
              "language": "curl",
              "code": "curl \"https://api.inscribe.ai/api/v2/customers/{customer_id}/documents/\" \\\n-H \"Authorization: Inscribe ...\" \\\n-F 'fileX=@/path/to/fileX' \\\n-F 'fileY=@/path/to/fileY' \\\n-F 'verify_entities=[{\"name\":\"Jane Customer\", \"address\":\"1000 Walnut Kansas City MO\"}]' \\\n-F 'tags=[{\"text\": \"onboarding\"}, {\"text\": \"new_system\"}]'\n"
            },
            {
              "language": "python",
              "code": "import requests\nimport os\nimport json\n\ncustomer_id = \"CUSTOMER_ID\"\n\nurl = f\"https://api.inscribe.ai/api/v2/customers/{customer_id}/documents\"\n\nheaders = {\n    \"Authorization\": \"Inscribe ...\"\n}\n\nverify_entities = [{\n    \"name\": \"Jane Customer\",\n    \"address\": \"1000 Walnut Kansas City MO\",\n    \"company\": \"Smith & Sons\",\n    \"id_number\": \"92914567\",\n    \"strings\": [{\"key\": \"phone\", \"input\": \"929-7113-145\"}]\n}]\n\ntags = [{\"text\": \"onboarding\"}, {\"text\": \"new_customer\"}]\n\nwith open(\"DOCUMENT_FILE_PATH\", \"rb+\") as document:\n    filename = os.path.basename(document.name)\n    files = {\n        \"verify_entities\": (None, json.dumps(verify_entities), 'application/json'),\n        \"tags\": (None, json.dumps(tags), 'application/json'),\n        \"file\": (filename, document, \"application/octet-stream\")\n    }\n    response = requests.request(\"POST\", url, files=files, headers=headers)\n    print(response.text)\n"
            },
            {
              "language": "node",
              "code": "const FormData = require('form-data');\nconst fetch = require('node-fetch');\nconst formData = new FormData();\nconst fs = require('fs');\n\nconst verifyEntities = [{\n  name: \"Jane Customer\",\n  address: \"1000 Walnut Kansas City MO\",\n  company: \"Smith & Sons\",\n  id_number: \"92914567\",\n  strings: [{key: \"phone\", input: \"929-7113-145\"}]\n}];\n\nconst tags = [{text: \"onboarding\"}, {text: \"new_customer\"}];\n\nformData.append(\"verify_entities\", JSON.stringify(verifyEntities));\nformData.append(\"tags\", JSON.stringify(tags));\nformData.append(\"file\", fs.createReadStream(\"DOCUMENT_FILE_PATH\"));\n\nconst customer_id = \"CUSTOMER_ID\";\n\nconst url = `https://api.inscribe.ai/api/v2/customers/${customer_id}/documents`;\nconst options = {\n  method: 'POST',\n  headers: {\n    Authorization: 'Inscribe ...'\n  },\n  body: formData,\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));\n"
            }
          ]
        },
        "tags": [
          "Documents"
        ],
        "summary": "Upload Document(s)",
        "description": "Uploads document(s) to a customer. Once the document(s) are uploaded, they will be queued for processing by Inscribe's fraud detection, parsing, and optionally verification algorithms. The file size limit is 50 MB and the page limit for PDFs is 350.",
        "operationId": "uploadDocuments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Inscribe customer id.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The document(s) you would like to upload. These document(s) must be one of the following supported mime type: application/pdf, image/jpg, image/png, application/octet-stream.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "description": "A list of files to be uploaded for analysis.",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "verify_entities": {
                    "type": "array",
                    "description": "Each verify_entity object in this array corresponds to a file in the above \"files\" parameter.",
                    "items": {
                      "type": "object",
                      "description": "Optional information to be verified against a document. If supplied there must be exactly one entry for each document, an entry can be blank if no information is to be verified.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "deprecated": true,
                          "example": "Frank Abagnale",
                          "description": "A personal name you wish to verify against the document. **Warning** This field is deprecated and will be removed in a future release. Please use `names` instead."
                        },
                        "names": {
                          "type": "array",
                          "description": "An array of personal names you wish to verify against the document.",
                          "items": {
                            "type": "string",
                            "example": "Frank Abagnale",
                            "description": "A personal name you wish to verify against the document."
                          }
                        },
                        "address": {
                          "type": "string",
                          "deprecated": true,
                          "description": "An address you wish to verify is represented in the document. **Warning** This field is deprecated and will be removed in a future release. Please use `addresses` instead.",
                          "example": "123 Fake Street"
                        },
                        "addresses": {
                          "type": "array",
                          "description": "An array of address you wish to verify are represented in the document.",
                          "items": {
                            "type": "string",
                            "example": "123 Fake Street",
                            "description": "An address you wish to verify is represented in the document."
                          }
                        },
                        "company": {
                          "type": "string",
                          "deprecated": true,
                          "example": "Inscribe AI Inc",
                          "description": "A company name you wish to verify against the document. **Warning** This field is deprecated and will be removed in a future release. Please use `companies` instead."
                        },
                        "companies": {
                          "type": "array",
                          "description": "An array of company names you wish to verify against the document.",
                          "items": {
                            "type": "string",
                            "example": "Inscribe AI Inc",
                            "description": "A company name you wish to verify against the document."
                          }
                        },
                        "id_number": {
                          "type": "string",
                          "deprecated": true,
                          "pattern": "^(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4}$|\\d{2}-\\d{7}|\\d{9}",
                          "example": "12-1234567",
                          "description": "An identification number you wish to verify against the document. Currently, SSN and EIN formats are supported. **Warning** This field is deprecated and will be removed in a future release. Please use `id_numbers` instead."
                        },
                        "id_numbers": {
                          "type": "array",
                          "description": "An array of identification numbers you wish to verify against the document.",
                          "items": {
                            "type": "string",
                            "pattern": "^(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4}$|\\d{2}-\\d{7}|\\d{9}",
                            "example": "12-1234567",
                            "description": "An identification number you wish to verify against the document. Currently, SSN and EIN formats are supported."
                          }
                        },
                        "strings": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "An identifier for the input. Set by you for your own reference.",
                                "example": "Phone number"
                              },
                              "input": {
                                "type": "string",
                                "description": "A string you wish to verify against the document.",
                                "example": "929 947 9991"
                              }
                            }
                          }
                        },
                        "patterns": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "An identifier for the pattern. Set by you for your own reference.",
                                "example": "Phone number"
                              },
                              "pattern": {
                                "type": "string",
                                "description": "A regular expression pattern you wish to verify against the document.",
                                "example": "^\\d{3} \\d{3} \\d{4}$"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "tags": {
                    "type": "array",
                    "description": "These tags will be associated with all the uploaded document(s).",
                    "items": {
                      "type": "object",
                      "required": [
                        "text"
                      ],
                      "properties": {
                        "text": {
                          "type": "string",
                          "description": "A descriptive value chosen by you to group documents together across customers.",
                          "example": "onboarding"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successfully uploaded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1documents~1%7Bid%7D/get/responses/200/content/application~1json/schema/allOf/0"
                      },
                      "description": "A map with a data property that contains an array of documents that have been uploaded. Each entry in the array is a separate document object."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        },
        "x-samples-code-samples": [
          {
            "language": "curl",
            "code": "curl \"https://api.inscribe.ai/api/v2/customers/{customer_id}/documents/\" \\\n-H \"Authorization: Inscribe ...\" \\\n-F 'fileX=@/path/to/fileX' \\\n-F 'fileY=@/path/to/fileY' \\\n-F 'verify_entities=[{\"name\":\"Jane Customer\", \"address\":\"1000 Walnut Kansas City MO\"}]' \\\n-F 'tags=[{\"text\": \"onboarding\"}, {\"text\": \"new_system\"}]'\n"
          },
          {
            "language": "python",
            "code": "import requests\nimport os\nimport json\n\ncustomer_id = \"CUSTOMER_ID\"\n\nurl = f\"https://api.inscribe.ai/api/v2/customers/{customer_id}/documents\"\n\nheaders = {\n    \"Authorization\": \"Inscribe ...\"\n}\n\nverify_entities = [{\n    \"name\": \"Jane Customer\",\n    \"address\": \"1000 Walnut Kansas City MO\",\n    \"company\": \"Smith & Sons\",\n    \"id_number\": \"92914567\",\n    \"strings\": [{\"key\": \"phone\", \"input\": \"929-7113-145\"}]\n}]\n\ntags = [{\"text\": \"onboarding\"}, {\"text\": \"new_customer\"}]\n\nwith open(\"DOCUMENT_FILE_PATH\", \"rb+\") as document:\n    filename = os.path.basename(document.name)\n    files = {\n        \"verify_entities\": (None, json.dumps(verify_entities), 'application/json'),\n        \"tags\": (None, json.dumps(tags), 'application/json'),\n        \"file\": (filename, document, \"application/octet-stream\")\n    }\n    response = requests.request(\"POST\", url, files=files, headers=headers)\n    print(response.text)\n"
          },
          {
            "languages": "node",
            "code": "const FormData = require('form-data');\nconst fetch = require('node-fetch');\nconst formData = new FormData();\nconst fs = require('fs');\n\nconst verifyEntities = [{\n  name: \"Jane Customer\",\n  address: \"1000 Walnut Kansas City MO\",\n  company: \"Smith & Sons\",\n  id_number: \"92914567\",\n  strings: [{key: \"phone\", input: \"929-7113-145\"}]\n}];\n\nconst tags = [{text: \"onboarding\"}, {text: \"new_customer\"}];\n\nformData.append(\"verify_entities\", JSON.stringify(verifyEntities));\nformData.append(\"tags\", JSON.stringify(tags));\nformData.append(\"file\", fs.createReadStream(\"DOCUMENT_FILE_PATH\"));\n\nconst customer_id = \"CUSTOMER_ID\";\n\nconst url = `https://api.inscribe.ai/api/v2/customers/${customer_id}/documents`;\nconst options = {\n  method: 'POST',\n  headers: {\n    Authorization: 'Inscribe ...'\n  },\n  body: formData,\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));\n"
          }
        ]
      },
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "List all Documents",
        "description": "Returns a list of all of your documents for a customer. The list is sorted by creation date, with the most recently created documents appearing first.",
        "operationId": "getDocuments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Inscribe customer id.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "description": "A comma separated list of customer UUIDs. Filter documents by specific customer IDs.",
            "example": "7c812569-ce51-45c1-859f327bfa06d7c5,7c812569-ce51-45c1-859f327bfa06d7c4",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "customer_statuses",
            "required": false,
            "description": "Filter documents by customer status.",
            "example": "unknown",
            "schema": {
              "type": "string",
              "enum": [
                "approved",
                "rejected",
                "unknown"
              ]
            }
          },
          {
            "in": "query",
            "name": "document_ids",
            "required": false,
            "description": "A comma separated list of document UUIDs. Filter documents by specific document IDs.",
            "example": "3616baa9-9caf-434e-b4d0-8a32c644dfd4,3616baa9-9caf-434e-b4d0-8a32c644dfe5",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "document_types",
            "required": false,
            "description": "Filter documents by document type",
            "example": "BANK_STATEMENT",
            "schema": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "BANK_STATEMENT",
                "BENEFITS_STATEMENT",
                "BUSINESS_FILING",
                "CHECK",
                "CREDIT_CARD_STATEMENT",
                "DRIVING_LICENSE",
                "FINANCIAL_STATEMENT",
                "INVESTMENT_STATEMENT",
                "INVOICE",
                "LEASE",
                "PAYSLIP",
                "SOCIAL_SECURITY_CARD",
                "TAX_FORM",
                "UTILITY_BILL"
              ]
            }
          },
          {
            "in": "query",
            "name": "end_date",
            "required": false,
            "description": "Filter documents created before this date.",
            "example": "2025-01-23",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "file_types",
            "required": false,
            "description": "Filter documents by file type.",
            "example": "TRUE_PDF",
            "schema": {
              "type": "string",
              "enum": [
                "IMAGE_PDF",
                "SCAN_OCR",
                "TRUE_PDF",
                "IMAGE",
                "MIXED_PAGE_PDF",
                "EMPTY_PDF",
                "FLATTENED_PDF"
              ]
            }
          },
          {
            "in": "query",
            "name": "is_fraudulent",
            "required": false,
            "description": "Filter documents by fraud status.",
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Set a limit on the number of documents to be returned per page. The limit can range between 1 and 50, the default is 15.",
            "example": 15,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 50
            }
          },
          {
            "in": "query",
            "name": "order",
            "required": false,
            "description": "Sort order for documents. Use -created_at for descending order by creation date.",
            "example": "-created_at",
            "schema": {
              "type": "string",
              "enum": [
                "-created_at",
                "created_at"
              ]
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "description": "Indicate which page of the document list to return, the default is 1.",
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "description": "A search query to filter documents.",
            "example": "hsbc_bank_statement",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "start_date",
            "required": false,
            "description": "Filter documents created on or after this date.",
            "example": "2025-01-22",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "tags",
            "required": false,
            "description": "A comma separated list of tags. Filter documents by tag.",
            "example": "HSBC,Wells Fargo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns back a list of Document objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1documents~1%7Bid%7D/get/responses/200/content/application~1json/schema"
                      },
                      "description": "A map with a data property that contains an array of documents that have been uploaded. Each entry in the array is a separate document object."
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer",
                              "description": "The limit on the number of documents that can be returned. per page.",
                              "example": 10
                            },
                            "current_page": {
                              "type": "integer",
                              "description": "The current page number.",
                              "example": 1
                            },
                            "number_of_pages": {
                              "type": "integer",
                              "description": "The total number of pages available with the current query parameters.",
                              "example": 1
                            },
                            "total": {
                              "type": "integer",
                              "description": "The total number of documents available with the current query parameters.",
                              "example": 1
                            }
                          }
                        },
                        "fraud_results": {
                          "type": "object",
                          "properties": {
                            "fraudulent_count": {
                              "type": "integer",
                              "description": "The number of fraudulent documents in this customer.",
                              "example": 1
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/documents/{id}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Retrieve a Document",
        "description": "Retrieve results and information of an existing document. Supply the unique customer id from either a customer creation request or the customer list, and the document id from either a document upload request or a list of documents from the customer. Inscribe will return the corresponding document overview when the document is in the PROCESSED state, until then some information will be unavailable. A webhook can be configured to receive PROCESSED document results in real-time.",
        "operationId": "getDocumentResults",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Inscribe customer id.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the document for which you want to retrieve results.",
            "example": 12345,
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document results.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Unique uuid identifier for the object.",
                          "example": "6e764ab5-4617-40d5-9076-0bd0e537b4d1"
                        },
                        "id": {
                          "type": "string",
                          "description": "Unique integer identifier for the object.",
                          "example": "42"
                        },
                        "name": {
                          "type": "string",
                          "example": "john_smith_payslip_dec20.pdf",
                          "description": "The filename of the document."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time at which the object was created. In the format: yyyy-MM-dd'T'HH:mm:ssZ",
                          "example": "2019-12-12T15:35:08.460Z"
                        },
                        "customer_id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The UUID of the associated Customer object",
                          "example": "684502aa-268a-4c2a-b166-ac4bfa2caf44"
                        },
                        "customer_name": {
                          "type": "string",
                          "description": "The name of the associated Customer object",
                          "example": "John Smith"
                        },
                        "state": {
                          "type": "string",
                          "description": "The current state of the document, it has the following options: PROCESSING - This document is still being processed. PROCESSED - This document has finished processing and results are available. ERROR_PROCESSING - An error occurred while processing this document. VIRUS_DETECTED - This document was found to contain a virus and will not be processed. CORRUPT_DATA_DETECTED - This document was found to contain corrupted data and could not be processed. PASSWORD_PROTECTED - This document is password protected. EXCEEDS_MAX_PAGE_COUNT - This document exceeds the maximum page count of 350.",
                          "enum": [
                            "PROCESSING",
                            "PROCESSED",
                            "ERROR_PROCESSING",
                            "VIRUS_DETECTED",
                            "CORRUPT_DATA_DETECTED",
                            "PASSWORD_PROTECTED",
                            "EXCEEDS_MAX_PAGE_COUNT"
                          ],
                          "example": "PROCESSED"
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The number of pages in the document. This value will be null until the document is in the PROCESSED state.",
                          "example": 1
                        },
                        "document_type": {
                          "type": "string",
                          "description": "The document type identified by Inscribe's classifier. This value will be null until the document is in the PROCESSED state.",
                          "example": "BANK_STATEMENT",
                          "enum": {
                            "$ref": "#/paths/~1customers~1%7Bid%7D~1documents/get/parameters/4/schema/enum"
                          }
                        },
                        "subtypes": {
                          "type": "array",
                          "description": "A list of the document subtypes identified by Inscribe's classifier. Currently, subtypes are identified for \"TAX_FORM\" and \"BANK_STATEMENT\" document types.\nTax documents can have the subtypes: \"CP_575\", \"147C\", \"SS4\", \"W2\", \"W3\", \"FORM_1040\", \"FORM_1040_SCHEDULE_C\", \"FORM_1065\", \"FORM_1099_MISC\", \"FORM_1099_NEC\", \"FORM_1120\", \"FORM_1120_S\".\nThe full list of subtypes for bank statements can be found at https://docs.inscribe.ai/docs/documents-classified-by-bank-names.",
                          "items": {
                            "type": "string",
                            "example": "CP_575",
                            "enum": [
                              "CP_575",
                              "147C",
                              "SS4",
                              "W2",
                              "W3",
                              "FORM_1040",
                              "FORM_1040_SCHEDULE_C",
                              "FORM_1065",
                              "FORM_1099_MISC",
                              "FORM_1099_NEC",
                              "FORM_1120",
                              "FORM_1120_S",
                              "ABNB_FEDERAL_CREDIT_UNION",
                              "ACADEMY_BANK",
                              "ADELFI",
                              "ADVIA_CREDIT_UNION",
                              "ALASKA_USA_FEDERAL_CREDIT_UNION",
                              "ALERUS",
                              "ALL_IN_CREDIT_UNION",
                              "ALLIED_IRISH_BANK",
                              "ALLY_BANK",
                              "ALPINE_BANK",
                              "ALTURA_CREDIT_UNION",
                              "AMARILLO_NATIONAL_BANK",
                              "AMEGY_BANK_OF_TEXAS",
                              "AMERICA_FIRST_FEDERAL_CREDIT_UNION",
                              "AMERICAN_AIRLINES_CREDIT_UNION",
                              "AMERICAN_BANK_OF_MISSOURI",
                              "AMERICAN_BUSINESS_BANK",
                              "AMERICAN_SAVINGS_BANK",
                              "AMERICU_CREDIT_UNION",
                              "AMERIS_BANK",
                              "ANB_BANK",
                              "ARKANSAS_FEDERAL_CREDIT_UNION",
                              "ARROWHEAD_CREDIT_UNION",
                              "ARVEST",
                              "ASSOCIATED_BANK_NA",
                              "ASSOCIATED_CREDIT_UNION",
                              "AVID_BANK",
                              "BANCFIRST",
                              "BANGOR_SAVINGS_BANK",
                              "BANK_OF_AMERICA",
                              "BANK_OF_CALIFORNIA",
                              "BANK_OF_HAWAII",
                              "BANK_OF_OKLAHOMA",
                              "BANK_OF_SOUTHERN_CALIFORNIA_NA",
                              "BANK_OF_THE_WEST",
                              "BANK_OZK",
                              "BANK_UNITED",
                              "BANNER_BANK",
                              "BARCLAYS",
                              "BAYFIRST_NATIONAL_BANK",
                              "BAYPORT_CREDIT_UNION",
                              "BCU",
                              "BEACON",
                              "BECU",
                              "BLACK_HILLS_FEDERAL_CREDIT_UNION",
                              "BLUE_SKY_BANK",
                              "BLUEVINE",
                              "BMO_HARRIS_BANK",
                              "BOK_FINANCIAL",
                              "BREMER_BANK",
                              "BREX",
                              "BRIDGE_BANK",
                              "BURKE_AND_HERBERT_BANK",
                              "BUSEY_BANK",
                              "C_THREE_BANK_NA",
                              "CALIFORNIA_COAST_CREDIT_UNION",
                              "CALPRIVATE_BANK",
                              "CANADIAN_IMPERIAL_BANK_OF_COMMERCE",
                              "CAPCOM_FEDERAL_CREDIT_UNION",
                              "CAPITAL_ONE",
                              "CARROLLTON_BANK",
                              "CATHAY_BANK",
                              "CB_AND_S_BANK",
                              "CEFCU",
                              "CENTENNIAL_BANK",
                              "CENTIER_CREDIT_UNION",
                              "CENTRA_CREDIT_UNION",
                              "CENTRAL_PACIFIC_BANK",
                              "CHAMBERS_BANK",
                              "CHASE_BANK",
                              "CHESAPEAKE_BANK",
                              "CHIME",
                              "CITIBANK",
                              "CITIZENS",
                              "CITIZENS_AND_FARMERS_BANK",
                              "CITY_NATIONAL_BANK",
                              "CITY_NATIONAL_BANK_OF_FLORIDA",
                              "CITY_STATE_BANK",
                              "COASTAL_CAROLINA_NATIONAL_BANK",
                              "COLUMBIA_BANK",
                              "COMMERCE_BANK",
                              "COMMONWEALTH_CENTRAL_CREDIT_UNION",
                              "COMMUNITY_NATIONAL_BANK_AND_TRUST",
                              "CONSUMERS_CREDIT_UNION",
                              "CREDIT_UNION_OF_COLORADO",
                              "CUSTOMERS_BANK",
                              "DELTA_COMMUNITY_CREDIT_UNION",
                              "DESERT_FINANCIAL",
                              "DFCU_FINANCIAL",
                              "DIGITAL_FEDERAL_CREDIT_UNION",
                              "DIME",
                              "DISCOVER",
                              "DUPONT_COMMUNITY_CREDIT_UNION",
                              "EASTERN_BANK",
                              "EDUCATIONAL_SYSTEMS_FEDERAL_CREDIT_UNION",
                              "EDUCATORS_CREDIT_UNION",
                              "EECU",
                              "EPHRATA_NATIONAL_BANK",
                              "EVERGREEN_CREDIT_UNION",
                              "EXCHANGE_BANK",
                              "F_AND_M_TRUST",
                              "FAIRWINDS_CREDIT_UNION",
                              "FCB",
                              "FIDELITY_INVESTMENTS",
                              "FIFTH_THIRD_BANK",
                              "FIRST_BANK_NC",
                              "FIRST_CITIZENS_BANK",
                              "FIRST_ENTERTAINMENT_CREDIT_UNION",
                              "FIRST_FEDERAL_LAKEWOOD",
                              "FIRST_FINANCIAL_BANK",
                              "FIRST_HAWAIIAN_BANK",
                              "FIRST_HORIZON",
                              "FIRST_INTERSTATE_BANK",
                              "FIRST_MID_BANK_AND_TRUST",
                              "FIRST_NATIONAL_BANK",
                              "FIRST_NATIONAL_BANK_OF_OMAHA",
                              "FIRST_REPUBLIC_BANK",
                              "FIRST_UNITED",
                              "FIRSTBANK",
                              "FLAGSTAR_BANK",
                              "FRANKLIN_MINT_FEDERAL_CREDIT_UNION",
                              "FROST_BANK",
                              "GENISYS_CREDIT_UNION",
                              "GLACIER_BANK",
                              "GOLDEN_1_CREDIT_UNION",
                              "GREATER_NEVADA_CREDIT_UNION",
                              "GTE_FEDERAL_CREDIT_UNION",
                              "HALIFAX",
                              "HANCOCK_WHITNEY",
                              "HAPO_COMMUNITY_CREDIT_UNION",
                              "HAPPY_STATE_BANK",
                              "HSBC_UK",
                              "HUDSON_VALLEY_FEDERAL_CREDIT_UNION",
                              "HUNTINGTON_NATIONAL_BANK",
                              "IBC_BANK",
                              "IDAHO_CENTRAL_CREDIT_UNION",
                              "IN_BANK",
                              "INDEPENDENT_FINANCIAL",
                              "INDUSTRIAL_CREDIT_UNION",
                              "INTEGRITY_BANK_AND_TRUST",
                              "KEMBA_CREDIT_UNION",
                              "KEYBANK",
                              "KINECTA_FEDERAL_UNION",
                              "LGE_COMMUNITY_CREDIT_UNION",
                              "LIVE_OAK_BANK",
                              "LLOYDS_BANK",
                              "LOGIX_SMARTER_BANKING",
                              "LONE_STAR_NATIONAL_BANK",
                              "M_AND_T_BANK",
                              "MACON_BANK_AND_TRUST",
                              "MATANUSKA_VALLEY_FEDERAL_CREDIT_UNION",
                              "MECU_CREDIT_UNION",
                              "MEMBERS_1ST_FEDERAL_CREDIT_UNION",
                              "MEOW",
                              "MERCURY",
                              "MERITRUST_CREDIT_UNION",
                              "METRO_CITY_BANK",
                              "MIDLAND_STATE_BANK",
                              "MIDWESTONE_BANK",
                              "MISSION_FED_CREDIT_UNION",
                              "MODERN_BANK",
                              "MONZO",
                              "MOUNTAIN_AMERICA_CREDIT_UNION",
                              "MVB_BANK",
                              "NATIONWIDE_BUILDING_SOCIETY",
                              "NATWEST",
                              "NAVIGANT_CREDIT_UNION",
                              "NAVY_CREDIT_UNION",
                              "NBT_BANK",
                              "NEW_ENGLAND_FEDERAL_CREDIT_UNION",
                              "NOBLE_CREDIT_UNION",
                              "NORTHWEST",
                              "NUMERICA_CREDIT_UNION",
                              "NUVISION_CREDIT_UNION",
                              "OLD_NATIONAL_BANK",
                              "ONPOINT_CREDIT_UNION",
                              "ORANGE_COUNTYS_CREDIT_UNION",
                              "ORIGIN_BANK",
                              "PACIFIC_PREMIER_BANK",
                              "PACIFIC_WESTERN_BANK",
                              "PALMETTO_CITIZENS_FEDERAL_CREDIT_UNION",
                              "PATELCO_CREDIT_UNION",
                              "PENN_STATE_FEDERAL_CREDIT_UNION",
                              "PEOPLES_BANK",
                              "PEOPLES_UNITED_BANK",
                              "PINNACLE",
                              "PINNACLE_BANK_GA",
                              "PINNACLE_BANK_NE",
                              "PINNACLE_BANK_TN,PINNACLE",
                              "PINNACLE,PINNACLE_BANK_TN",
                              "PIONEER_BANK",
                              "PIONEER_FEDERAL_CREDIT_UNION",
                              "PLAINSCAPITAL_BANK",
                              "PNC_BANK",
                              "PREMIER_BANK_ROCHESTER",
                              "PROFESSIONAL_BANK",
                              "QUEENSBOROUGH_NATIONAL_BANK",
                              "RBFCU",
                              "REDWOOD_CREDIT_UNION",
                              "REGIONS_BANK",
                              "RENASANT_BANK",
                              "RESOURCE_ONE_CREDIT_UNION",
                              "RICHWOOD_BANK",
                              "RIVERVALLEY_CREDIT_UNION",
                              "ROBINS_FINANCIAL_CREDIT_UNION",
                              "ROYAL_BANK_OF_CANADA",
                              "SANTANDER",
                              "SCHOOLSFIRST_FEDERAL_CREDIT_UNION",
                              "SEACOAST_BANK",
                              "SECU",
                              "SECURITY_SERVICE_FEDERAL_CREDIT_UNION",
                              "SELCO",
                              "SIGNATURE_BANK",
                              "SILICON_VALLEY_BANK",
                              "SIMMONS_BANK",
                              "SOFI",
                              "SOUND_CREDIT_UNION",
                              "SOUTHERN_BANCORP",
                              "SOUTHERN_FIRST",
                              "SOUTHSIDE_BANK",
                              "SOUTHSTATE_BANK",
                              "SOUTHTRUST_BANK",
                              "SPACE_COAST_CREDIT_UNION",
                              "SQUARE",
                              "STATE_BANK",
                              "SUMMIT_CREDIT_UNION",
                              "SUNCOAST_CREDIT_UNION",
                              "SUNFLOWER_BANK_NA",
                              "SUNMARK_CREDIT_UNION",
                              "SUPERIOR_CREDIT_UNION",
                              "SUSSER_BANK",
                              "SYNOVUS",
                              "TD_BANK",
                              "TECHNOLOGY_CREDIT_UNION",
                              "TEXAS_BANK_AND_TRUST",
                              "TEXAS_BAY_CREDIT_UNION",
                              "THE_SAVINGS_BANK",
                              "THE_SAVINGS_BANK,RICHWOOD_BANK",
                              "TIMBERLAND_BANK",
                              "TOWNE_BANK",
                              "TRAILHEAD_CREDIT_UNION",
                              "TRUIST",
                              "TRULIANT_FEDERAL_CREDIT_UNION",
                              "UMPQUA_BANK",
                              "UNIFY_FINANCIAL_CREDIT_UNION",
                              "UNION_BANK",
                              "UNITED_BANK",
                              "UNITED_COMMUNITY_BANK",
                              "UPGRADE",
                              "US_BANK",
                              "USAA",
                              "VALLEY",
                              "VARO",
                              "VILLAGE_BANK",
                              "VISTA_BANK",
                              "VYSTAR_CREDIT_UNION",
                              "WAFD_BANK",
                              "WALPOLE_COOPERATIVE_BANK",
                              "WAVE",
                              "WEBSTER_BANK",
                              "WECU",
                              "WELLS_FARGO",
                              "WISE",
                              "WOOD_FOREST_NATIONAL_BANK",
                              "WRIGHTPATT_CREDIT_UNION",
                              "WSFS_BANK",
                              "YOURBANK",
                              "ZIONS_BANK"
                            ]
                          }
                        },
                        "file_type": {
                          "type": "string",
                          "enum": {
                            "$ref": "#/paths/~1customers~1%7Bid%7D~1documents/get/parameters/6/schema/enum"
                          },
                          "description": "The file type identified by Inscribe. This value will be null until the document is in the PROCESSED state.",
                          "example": "TRUE_PDF"
                        },
                        "language": {
                          "type": "string",
                          "description": "The document language. More information on the available options can be found at https://docs.inscribe.ai/docs/language-field",
                          "example": "en"
                        },
                        "is_fraudulent": {
                          "type": "boolean",
                          "description": "Has the value true if Inscribe’s fraud detection algorithms have identified the document as being fraudulent, false if sufficient evidence of fraud is not found in the document. This value is only available when the document is in the PROCESSED state.",
                          "example": true
                        },
                        "trust_score": {
                          "type": "integer",
                          "description": "The trust score of a document, between 0 and 100. More information can be found at https://help.inscribe.ai/en/articles/5557654-trust-score.",
                          "example": 50
                        },
                        "quality_score": {
                          "type": "integer",
                          "description": "The quality score of a document, between 0 and 100. More information can be found at https://help.inscribe.ai/en/articles/5567690-quality-score.",
                          "example": 50
                        },
                        "review_status": {
                          "type": "string",
                          "description": "The current status of document level feedback. More information can be found at https://help.inscribe.ai/en/articles/8523290-document-level-feedback.",
                          "example": "ACCEPTED",
                          "enum": [
                            "ACCEPTED",
                            "REJECTED",
                            "REQUIRES_REVIEW"
                          ]
                        },
                        "urls": {
                          "type": "object",
                          "properties": {
                            "web_app": {
                              "type": "string",
                              "description": "A URL to the location of this document on our web app.",
                              "example": "https://app.inscribe.ai/#/customer/0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b/document/1234"
                            },
                            "api": {
                              "type": "string",
                              "description": "A URL to the location of this document on our API.",
                              "example": "https://api.inscribe.ai/api/v2/customers/0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b/documents/1234"
                            },
                            "original_file": {
                              "type": "string",
                              "description": "A URL to the location of the original document uploaded to us.",
                              "example": "https://production-us-west-2-assets.inscribeusercontent.com/files/users/123/documents/8a2d3b0c-27be-4513-91ab-52c6e0a19691_document.png"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "tags": {
                          "type": "array",
                          "description": "A list of tags that you have assigned to a document. Tags are used to group documents together across customers.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The id of the tag.",
                                "example": "ce1d4123-b482-4409-8177-cdf363bea111"
                              },
                              "value": {
                                "type": "string",
                                "description": "A descriptive string chosen by you to group documents together across customers.",
                                "example": "onboarding"
                              }
                            }
                          }
                        },
                        "collect_session": {
                          "type": "object",
                          "description": "An optional object, this will be non-null if this document was uploaded as part of a Collect session.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Unique identifier for the Collect session.",
                              "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b"
                            },
                            "document_request_id": {
                              "type": "integer",
                              "description": "Unique identifier for the document request that this document document was uploaded to.",
                              "example": 1
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Time at which the session was created. In the format: yyyy-MM-dd'T'HH:mm:ssZ",
                              "example": "2019-12-12T15:35:08.460Z"
                            },
                            "completed_at": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Time at which the session was completed. This will be null if the session has not been completed. In the format: yyyy-MM-dd'T'HH:mm:ssZ",
                              "example": "2019-12-12T15:35:08.460Z"
                            }
                          }
                        },
                        "checks": {
                          "type": "array",
                          "description": "A list of checks that were applied to the document. This feature is in beta and will improve over time.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the check",
                                "example": "Document Type Check"
                              },
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the check",
                                "example": "80b6e47f-4ac7-4dec-b9fc-c35a70fa48ec"
                              },
                              "public": {
                                "type": "boolean",
                                "description": "Whether the check is shown to customers during collect sessions",
                                "example": false
                              },
                              "passed": {
                                "type": "boolean",
                                "description": "Whether the check passed all of its conditions",
                                "example": false
                              },
                              "triggers": {
                                "type": "array",
                                "description": "A list of trigger conditions that were satisfied, causing the check to be applied to the document",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the condition variable",
                                      "example": "document_type"
                                    },
                                    "operator": {
                                      "type": "string",
                                      "description": "The operator of the condition",
                                      "example": "equal_to"
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "The value of the condition",
                                      "example": "BANK_STATEMENT"
                                    }
                                  }
                                }
                              },
                              "requirements": {
                                "type": "array",
                                "description": "A list of requirement conditions applied to the document",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the condition variable",
                                      "example": "document_type"
                                    },
                                    "operator": {
                                      "type": "string",
                                      "description": "The operator of the condition",
                                      "example": "equal_to"
                                    },
                                    "value": {
                                      "oneOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "example": "BANK_STATEMENT"
                                          }
                                        },
                                        {
                                          "type": "boolean",
                                          "example": true
                                        },
                                        {
                                          "type": "integer",
                                          "example": 90
                                        },
                                        {
                                          "type": "number",
                                          "format": "float",
                                          "example": 0.98
                                        }
                                      ],
                                      "description": "The value of the condition"
                                    },
                                    "actual_value": {
                                      "type": "string",
                                      "description": "The value of the condition variable",
                                      "example": "BANK_STATEMENT"
                                    },
                                    "passed": {
                                      "type": "boolean",
                                      "description": "Whether the requirement condition was met or not",
                                      "example": true
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "verification": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "object",
                              "deprecated": true,
                              "description": "The name key will only exist if a name was submitted to be verified against this document. The values within will only be available when the document is in the PROCESSED state. **Warning** This field is deprecated and will be removed in a future release. Please use `names` instead.",
                              "properties": {
                                "verified": {
                                  "type": "boolean",
                                  "description": "Indicates if the name submitted was verified to be in the document. This value is only available when the document is in the PROCESSED state.",
                                  "example": true
                                },
                                "input": {
                                  "type": "string",
                                  "example": "Jane Customer",
                                  "description": "The name submitted to be verified in the document. This value is only available when the document is in the PROCESSED state."
                                },
                                "matched": {
                                  "type": "string",
                                  "example": "Jane Customer",
                                  "description": "The name found in the document that matches the submitted name. This value is only available when the document is in the PROCESSED state."
                                }
                              }
                            },
                            "names": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "The `names` key will only exist if a `names` array was submitted to be verified against this document. The values within will only be available when the document is in the PROCESSED state.",
                                "properties": {
                                  "verified": {
                                    "type": "boolean",
                                    "description": "Indicates if the name submitted was verified to be in the document. This value is only available when the document is in the PROCESSED state.",
                                    "example": true
                                  },
                                  "input": {
                                    "type": "string",
                                    "example": "Jane Customer",
                                    "description": "The name submitted to be verified in the document. This value is only available when the document is in the PROCESSED state."
                                  },
                                  "matched": {
                                    "type": "string",
                                    "example": "Jane Customer",
                                    "description": "The name found in the document that matches the submitted name. This value is only available when the document is in the PROCESSED state."
                                  }
                                }
                              }
                            },
                            "address": {
                              "type": "object",
                              "deprecated": true,
                              "description": "The address key will only exist if an address was submitted to be verified against this document. The values within will only be available when the document is in the PROCESSED state. **warning** This field is deprecated and will be removed in a future release. Please use `addresses` instead.",
                              "properties": {
                                "verified": {
                                  "type": "boolean",
                                  "description": "Indicates if the address submitted was verified to be in the document. This value is only available when the document is in the PROCESSED state.",
                                  "example": true
                                },
                                "input": {
                                  "type": "string",
                                  "example": "1000 Walnut Kansas City MO 64106-3686",
                                  "description": "The address submitted to be verified in the document. This value is only available when the document is in the PROCESSED state."
                                },
                                "matched": {
                                  "type": "string",
                                  "example": "1000 Walnut Kansas City MO 64106-3686",
                                  "description": "The address found in the document that matches the submitted address.This value is only available when the document is in the PROCESSED state."
                                },
                                "normalized": {
                                  "type": "string",
                                  "example": "1000 Walnut St, Kansas City, MO 64106, USA",
                                  "description": "The normalized version of the submitted address. This value is only available when the document is in the PROCESSED state."
                                },
                                "structured": {
                                  "type": "object",
                                  "description": "The structured address. Any or all of these fields can be empty",
                                  "properties": {
                                    "line_1": {
                                      "type": "string",
                                      "description": "First line of the address",
                                      "example": "1000 Walnut St"
                                    },
                                    "line_2": {
                                      "type": "string",
                                      "description": "Second line of the address",
                                      "example": "Kansas City"
                                    },
                                    "city": {
                                      "type": "string",
                                      "description": "City of the address",
                                      "example": "Kansas"
                                    },
                                    "post_code": {
                                      "type": "string",
                                      "description": "Post code of the address",
                                      "example": "64106"
                                    },
                                    "state": {
                                      "type": "string",
                                      "description": "State field of the address",
                                      "example": "MO"
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "Country of the address",
                                      "example": "USA"
                                    }
                                  }
                                }
                              }
                            },
                            "addresses": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "The `addresses` key will only exist if a `addresses` array was submitted to be verified against this document. The values within will only be available when the document is in the PROCESSED state.",
                                "properties": {
                                  "verified": {
                                    "type": "boolean",
                                    "description": "Indicates if the address submitted was verified to be in the document. This value is only available when the document is in the PROCESSED state.",
                                    "example": true
                                  },
                                  "input": {
                                    "type": "string",
                                    "example": "1000 Walnut Kansas City MO 64106-3686",
                                    "description": "The address submitted to be verified in the document. This value is only available when the document is in the PROCESSED state."
                                  },
                                  "matched": {
                                    "type": "string",
                                    "example": "1000 Walnut Kansas City MO 64106-3686",
                                    "description": "The address found in the document that matches the submitted address. This value is only available when the document is in the PROCESSED state."
                                  },
                                  "normalized": {
                                    "type": "string",
                                    "example": "1000 Walnut St, Kansas City, MO 64106, USA",
                                    "description": "The normalized version of the submitted address. This value is only available when the document is in the PROCESSED state."
                                  },
                                  "structured": {
                                    "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1documents~1%7Bid%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/verification/properties/address/properties/structured"
                                  }
                                }
                              }
                            },
                            "company": {
                              "type": "object",
                              "deprecated": true,
                              "description": "The company key will only exist if a company was submitted to be verified against this document. The values within will only be available when the document is in the PROCESSED state. **Warning** This field is deprecated and will be removed in a future release. Please use `companies` instead.",
                              "properties": {
                                "verified": {
                                  "type": "boolean",
                                  "description": "Indicates if the company submitted was verified to be in the document. This value is only available when the document is in the PROCESSED state.",
                                  "example": true
                                },
                                "input": {
                                  "type": "string",
                                  "example": "Inscribe AI Inc",
                                  "description": "The company submitted to be verified in the document. This value is only available when the document is in the PROCESSED state."
                                },
                                "matched": {
                                  "type": "string",
                                  "example": "Inscribe AI Inc",
                                  "description": "The company found in the document that matches the submitted company. This value is only available when the document is in the PROCESSED state."
                                }
                              }
                            },
                            "companies": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "The `companies` key will only exist if a `companies` array was submitted to be verified against this document. The values within will only be available when the document is in the PROCESSED state.",
                                "properties": {
                                  "verified": {
                                    "type": "boolean",
                                    "description": "Indicates if the company submitted was verified to be in the document. This value is only available when the document is in the PROCESSED state.",
                                    "example": true
                                  },
                                  "input": {
                                    "type": "string",
                                    "example": "Inscribe AI Inc",
                                    "description": "The company submitted to be verified in the document. This value is only available when the document is in the PROCESSED state."
                                  },
                                  "matched": {
                                    "type": "string",
                                    "example": "Inscribe AI Inc",
                                    "description": "The company found in the document that matches the submitted company. This value is only available when the document is in the PROCESSED state."
                                  }
                                }
                              }
                            },
                            "id_number": {
                              "type": "object",
                              "deprecated": true,
                              "description": "The id_number key will only exist if a id_number was submitted to be verified against this document. The values within will only be available when the document is in the PROCESSED state. **Warning** This field is deprecated and will be removed in a future release. Please use `id_numbers` instead.",
                              "properties": {
                                "verified": {
                                  "type": "boolean",
                                  "description": "Indicates if the id_number submitted was verified to be in the document. This value is only available when the document is in the PROCESSED state.",
                                  "example": true
                                },
                                "input": {
                                  "type": "string",
                                  "example": "12-1234567",
                                  "description": "The id_number submitted to be verified in the document. This value is only available when the document is in the PROCESSED state."
                                },
                                "matched": {
                                  "type": "string",
                                  "example": "12-1234567",
                                  "description": "The id_number found in the document that matches the submitted id_number. This will not always be the exact same string as the input as we do some intelligent matching. This value is only available when the document is in the PROCESSED state."
                                }
                              }
                            },
                            "id_numbers": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "The `id_numbers` key will only exist if a `id_numbers` array was submitted to be verified against this document. The values within will only be available when the document is in the PROCESSED state.",
                                "properties": {
                                  "verified": {
                                    "type": "boolean",
                                    "description": "Indicates if the id_number submitted was verified to be in the document. This value is only available when the document is in the PROCESSED state.",
                                    "example": true
                                  },
                                  "input": {
                                    "type": "string",
                                    "example": "12-1234567",
                                    "description": "The id_number submitted to be verified in the document. This value is only available when the document is in the PROCESSED state."
                                  },
                                  "matched": {
                                    "type": "string",
                                    "example": "121234567",
                                    "description": "The id_number found in the document that matches the submitted id_number. This will not always be the exact same string as the input as we do some intelligent matching. This value is only available when the document is in the PROCESSED state."
                                  }
                                }
                              }
                            },
                            "strings": {
                              "type": "array",
                              "description": "The strings key will only exist if a `strings` array was submitted to be verified against this document. The values within will only be available when the document is in the PROCESSED state. This feature is in beta and will improve over time.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "verified": {
                                    "type": "boolean",
                                    "description": "Indicates if the string submitted was verified to be in the document. This value is only available when the document is in the PROCESSED state.",
                                    "example": true
                                  },
                                  "input": {
                                    "type": "string",
                                    "example": "9299999111",
                                    "description": "The string submitted to be verified in the document. This value is only available when the document is in the PROCESSED state."
                                  },
                                  "matched": {
                                    "type": "string",
                                    "example": "929-9999-111",
                                    "description": "The string found in the document that matches the submitted id_number. This will not always be the exact same string as the input as we do some intelligent matching. This value is only available when the document is in the PROCESSED state."
                                  }
                                }
                              }
                            },
                            "patterns": {
                              "type": "array",
                              "description": "The patterns key will only exist if a `patterns` array was submitted to be verified against this document. The values within will only be available when the document is in the PROCESSED state. This feature is in beta and will improve over time.",
                              "required": [
                                "verified",
                                "key",
                                "pattern",
                                "matched_string",
                                "matched_groups"
                              ],
                              "items": {
                                "type": "object",
                                "properties": {
                                  "verified": {
                                    "type": "boolean",
                                    "description": "Indicates if the pattern submitted was verified to be in the document. This value is only available when the document is in the PROCESSED state.",
                                    "example": true
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "account-number",
                                    "description": "The key identifying the pattern submitted to be verified in the document. This value is only available when the document is in the PROCESSED state."
                                  },
                                  "pattern": {
                                    "type": "string",
                                    "example": "(9-?2-?9-?(9-?9)-?(1-?1-?1-?1)",
                                    "description": "The pattern submitted to be verified in the document. This value is only available when the document is in the PROCESSED state."
                                  },
                                  "matched_string": {
                                    "type": "string",
                                    "example": "929-99-1111",
                                    "description": "The first string found in the document that matches the submitted pattern. This value is only available when the document is in the PROCESSED state."
                                  },
                                  "matched_groups": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "929",
                                      "99",
                                      "1111"
                                    ],
                                    "description": "The strings found in the document that matched the capturing groups in the submitted pattern. If the pattern contained no capturing groups then this will be an empty array. This value is only available when the document is in the PROCESSED state."
                                  },
                                  "error": {
                                    "type": "string",
                                    "example": "Pattern not found",
                                    "description": "A description of the error that occurred. This value is only available when the document is in the PROCESSED state and an error occurred."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "parsed_details": {
                          "type": "object",
                          "description": "Relevant information that has been parsed from the document you supplied. Note: this currently only works on English language documents.",
                          "properties": {
                            "document_date": {
                              "type": "object",
                              "description": "The document date. For documents such as bank statements, this will be the last day of the statement period. For utility bills and invoices, this will be the date of issue of the bill or invoice. For payslips, this will be the check date or advice date. The document_date key will not exist if a date could not be parsed from the document and values within will only be available when the document is in the PROCESSED state. This feature is in beta and will improve over time.",
                              "properties": {
                                "raw": {
                                  "type": "string",
                                  "description": "The raw date as it appears in the document. This value is only available when the document is in the PROCESSED state.",
                                  "example": "3rd of December 2019"
                                },
                                "normalized": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Normalized date. In the format yyyy-MM-dd - example: 2019-12-03. If a day is not present in the raw date, the normalized date will correspond to the last day of the month. For example, February 2019 will be normalized as 2019-02-28. This value is only available when the document is in the PROCESSED state.",
                                  "example": "2019-12-03"
                                },
                                "confidence": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "A value between 0 and 1 indicating the confidence in the parsed output. This value is only available when the document is in the PROCESSED state.",
                                  "example": 0.8
                                }
                              }
                            },
                            "address": {
                              "type": "object",
                              "description": "The address of the document recipient. The address key will not exist if an address could not be parsed from the document and values within will only be available when the document is in the PROCESSED state. This feature is in beta and will improve over time.",
                              "properties": {
                                "raw": {
                                  "type": "string",
                                  "description": "The raw address as it appears in the document. This value is only available when the document is in the PROCESSED state.",
                                  "example": "1000 walnut kansas city"
                                },
                                "normalized": {
                                  "type": "string",
                                  "description": "Normalized address. This value is only available when the document is in the PROCESSED state.",
                                  "example": "1000 Walnut St, Kansas City, MO 64106, USA"
                                },
                                "structured": {
                                  "type": "object",
                                  "description": "The structured output of the address. Any or all of these fields can be empty depending on the raw address.",
                                  "properties": {
                                    "line_1": {
                                      "type": "string",
                                      "description": "First line of the address",
                                      "example": "1000 Walnut St"
                                    },
                                    "line_2": {
                                      "type": "string",
                                      "description": "Second line of the address",
                                      "example": "Kansas City"
                                    },
                                    "city": {
                                      "type": "string",
                                      "description": "City of the address",
                                      "example": "Kansas"
                                    },
                                    "post_code": {
                                      "type": "string",
                                      "description": "Post code of the address",
                                      "example": "64106"
                                    },
                                    "state": {
                                      "type": "string",
                                      "description": "State field of the address",
                                      "example": "MO"
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "Country of the address",
                                      "example": "USA"
                                    }
                                  }
                                },
                                "confidence": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "A value between 0 and 1 indicating the confidence in the parsed output. This value is only available when the document is in the PROCESSED state.",
                                  "example": 0.8
                                }
                              }
                            },
                            "name": {
                              "type": "object",
                              "description": "The relevant name that this document references. The name key will not exist if a name could not be parsed from the document and values within will only be available when the document is in the PROCESSED state. This feature is in beta and will improve over time.",
                              "properties": {
                                "raw": {
                                  "type": "string",
                                  "description": "The name of the document recipient. This feature is in beta and will improve over time. This value is only available when the document is in the PROCESSED state.",
                                  "example": "Frank Abagnale"
                                },
                                "variants": {
                                  "type": "array",
                                  "description": "List of name variants for matching against, obtained by formatting by line and removing titles and incorporation suffixes. For example, the raw name \"MR FRANK ABAGNALE\\nHOT DEALS LLC\" will have as a list of variants [\"Mr Frank Abagnale\", \"Frank Abagnale\" \"Hot Deals Llc\", \"Hot Deals\"]. This value is only available when the document is in the PROCESSED state.",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "Mr Frank Abagnale",
                                      "Frank Abagnale",
                                      "Hot Deals Llc",
                                      "Hot Deals"
                                    ]
                                  }
                                },
                                "confidence": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "A value between 0 and 1 indicating the confidence in the parsed output. This value is only available when the document is in the PROCESSED state.",
                                  "example": 0.8
                                }
                              }
                            },
                            "account_number": {
                              "type": "object",
                              "description": "The account_number key contains information about the account number as presented in relevant documents such as bank statements or utility bills. The account_number key will not exist if an account number could not be parsed from the document and values within will only be available when the document is in the PROCESSED state. This feature is in beta and will improve over time.",
                              "properties": {
                                "raw": {
                                  "type": "string",
                                  "description": "The account number as it appears on the document. This feature is in beta and will improve over time. This value is only available when the document is in the PROCESSED state.",
                                  "example": "CA 1234 5678"
                                },
                                "normalized": {
                                  "type": "string",
                                  "description": "A formatted version of the account number, with all spaces removed. This value is only available when the document is in the PROCESSED state.",
                                  "example": "CA12345678"
                                },
                                "formatted": {
                                  "type": "string",
                                  "description": "This key has been deprecated."
                                },
                                "confidence": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "A value between 0 and 1 indicating the confidence in the parsed output. This value is only available when the document is in the PROCESSED state.",
                                  "example": 0.8
                                }
                              }
                            },
                            "beginning_balance": {
                              "type": "object",
                              "deprecated": true,
                              "description": "This key has been deprecated by `\"beginning_balance\"` in the `\"bank_accounts\"` parsed details.",
                              "properties": {
                                "raw": {
                                  "type": "string",
                                  "description": "The beginning balance as it appears on the document. This feature is in beta and will improve over time. This value is only available when the document is in the PROCESSED state.",
                                  "example": "$12,345.67"
                                },
                                "normalized": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The numeric part of the balance, with currency information removed. This value is only available when the document is in the PROCESSED state.",
                                  "example": 12345.67
                                },
                                "formatted": {
                                  "type": "string",
                                  "description": "This key has been deprecated."
                                },
                                "confidence": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "A value between 0 and 1 indicating the confidence in the parsed output. This value is only available when the document is in the PROCESSED state.",
                                  "example": 0.8
                                }
                              }
                            },
                            "ending_balance": {
                              "type": "object",
                              "deprecated": true,
                              "description": "This key has been deprecated by `\"beginning_balance\"` in the `\"bank_accounts\"` parsed details.",
                              "properties": {
                                "raw": {
                                  "type": "string",
                                  "description": "The ending balance as it appears on the document. This feature is in beta and will improve over time. This value is only available when the document is in the PROCESSED state.",
                                  "example": "$12,345.67"
                                },
                                "normalized": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The numeric part of the balance, with currency information removed. This value is only available when the document is in the PROCESSED state.",
                                  "example": 12345.67
                                },
                                "formatted": {
                                  "type": "string",
                                  "description": "This key has been deprecated."
                                },
                                "confidence": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "A value between 0 and 1 indicating the confidence in the parsed output. This value is only available when the document is in the PROCESSED state.",
                                  "example": 0.8
                                }
                              }
                            },
                            "date_of_birth": {
                              "type": "object",
                              "description": "The date_of_birth key contains information about the date of birth as presented in relevant documents such as driving licences and passports. The date_of_birth key will not exist if a relevant date could not be parsed from the document and values within will only be available when the document is in the PROCESSED state. This feature is in beta and will improve over time.",
                              "properties": {
                                "raw": {
                                  "type": "string",
                                  "description": "The date as it appears on the document. This feature is in beta and will improve over time. This value is only available when the document is in the PROCESSED state.",
                                  "example": "12.3.1989"
                                },
                                "normalized": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Normalized date. When normalizing, ambiguous dates such as \"12.03.1989\" are assumed to be in the form MM/dd/yyyy. Value returned in the format yyyy-MM-dd. This value is only available when the document is in the PROCESSED state.",
                                  "example": "1989-12-03"
                                },
                                "formatted": {
                                  "type": "string",
                                  "description": "This key has been deprecated."
                                },
                                "confidence": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "A value between 0 and 1 indicating the confidence in the parsed output. This value is only available when the document is in the PROCESSED state.",
                                  "example": 0.8
                                }
                              }
                            },
                            "expiry_date": {
                              "type": "object",
                              "description": "The expiry_date key contains information about the expiry date as presented in relevant documents such as driving licences and passports. The expiry_date key will not exist if a relevant date could not be parsed from the document and values within will only be available when the document is in the PROCESSED state. This feature is in beta and will improve over time.",
                              "properties": {
                                "raw": {
                                  "type": "string",
                                  "description": "The date as it appears on the document. This feature is in beta and will improve over time. This value is only available when the document is in the PROCESSED state.",
                                  "example": "12.3.2023"
                                },
                                "normalized": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Normalized date. When normalizing, ambiguous dates such as \"12.03.2023\" are assumed to be in the form MM/dd/yyyy. Value returned in the format yyyy-MM-dd. This value is only available when the document is in the PROCESSED state.",
                                  "example": "2023-12-03"
                                },
                                "formatted": {
                                  "type": "string",
                                  "description": "This key has been deprecated."
                                },
                                "confidence": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "A value between 0 and 1 indicating the confidence in the parsed output. This value is only available when the document is in the PROCESSED state.",
                                  "example": 0.8
                                }
                              }
                            },
                            "issue_date": {
                              "type": "object",
                              "description": "The issue_date key contains information about the issue date as presented in relevant documents such as utility bills. The issue_date key will not exist if a relevant date could not be parsed from the document and values within will only be available when the document is in the PROCESSED state. This feature is in beta and will improve over time.",
                              "properties": {
                                "raw": {
                                  "type": "string",
                                  "description": "The date as it appears on the document. This feature is in beta and will improve over time. This value is only available when the document is in the PROCESSED state.",
                                  "example": "12.3.2023"
                                },
                                "normalized": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Normalized date. When normalizing, ambiguous dates such as \"12.03.2023\" are assumed to be in the form MM/dd/yyyy. Value returned in the format yyyy-MM-dd. This value is only available when the document is in the PROCESSED state.",
                                  "example": "2023-12-03"
                                },
                                "formatted": {
                                  "type": "string",
                                  "description": "This key has been deprecated."
                                },
                                "confidence": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "A value between 0 and 1 indicating the confidence in the parsed output. This value is only available when the document is in the PROCESSED state.",
                                  "example": 0.8
                                }
                              }
                            },
                            "bank_accounts": {
                              "type": "array",
                              "description": "An array of parsed bank accounts found in the document and the parsed details associated with each account. If no bank accounts are found, an empty array is returned. If the document is not of type `BANK_STATEMENT`, the key will not be present in the response.",
                              "items": {
                                "type": "object",
                                "required": [
                                  "name",
                                  "number",
                                  "beginning_balance",
                                  "ending_balance",
                                  "transactions_match_balances"
                                ],
                                "properties": {
                                  "institution_name": {
                                    "type": "string",
                                    "description": "The name of the bank which issued the document, see documentation for supported banks [here](https://docs.inscribe.ai/docs/documents-classified-by-bank-names).",
                                    "example": "BANK_OF_AMERICA"
                                  },
                                  "account_type": {
                                    "type": "string",
                                    "description": "The bank account type identified by Inscribe. This can have one of the following values: `\"BUSINESS\"`, `\"PERSONAL\"`. The value will be `null` if no account type was identified.",
                                    "example": "PERSONAL"
                                  },
                                  "name": {
                                    "type": "object",
                                    "description": "An object providing information about the name of the bank account as it appears on the bank statement. This is distinct from the name of the document owner, which is available as a top-level key within the `\"parsed_details\"` object. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "confidence"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "The name of the bank account as it appears on the bank statement.",
                                        "example": "Checking 360"
                                      },
                                      "normalized": {
                                        "type": "string",
                                        "description": "A normalized form of the name.",
                                        "example": "Checking 360"
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 giving the confidence associated with this result.",
                                        "example": 0.98
                                      }
                                    }
                                  },
                                  "number": {
                                    "type": "object",
                                    "description": "An object providing information about the bank account number as it appears on the document. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "confidence"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "The number of the bank account as it appears on the bank statement.",
                                        "example": "1234 5678"
                                      },
                                      "normalized": {
                                        "type": "string",
                                        "description": "A normalized form of the number.",
                                        "example": "12345678"
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 giving the confidence associated with this result.",
                                        "example": 0.99
                                      }
                                    }
                                  },
                                  "beginning_date": {
                                    "type": "object",
                                    "description": "An object providing information about the beginning date of activity associated with bank account. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "confidence"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "The beginning date as it appears on the bank statement.",
                                        "example": "Jan 12 2022"
                                      },
                                      "normalized": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "ISO 8601 formatted date string.",
                                        "example": "2022-01-12"
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 giving the confidence associated with this result.",
                                        "example": 0.99
                                      }
                                    }
                                  },
                                  "ending_date": {
                                    "type": "object",
                                    "description": "An object providing information about the ending date of activity associated with bank account. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "confidence"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "The ending date as it appears on the bank statement.",
                                        "example": "Feb 12 2022"
                                      },
                                      "normalized": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "ISO 8601 formatted date string.",
                                        "example": "2022-02-12"
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 giving the confidence associated with this result.",
                                        "example": 0.99
                                      }
                                    }
                                  },
                                  "beginning_balance": {
                                    "type": "object",
                                    "description": "An object providing information about the beginning balance of the bank account. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "confidence"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "The beginning balance as it appears on the bank statement.",
                                        "example": "123.45"
                                      },
                                      "normalized": {
                                        "type": "integer",
                                        "description": "A signed integer giving the beginning balance in cents.",
                                        "example": 12345
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 giving the confidence associated with this result.",
                                        "example": 0.98
                                      }
                                    }
                                  },
                                  "ending_balance": {
                                    "type": "object",
                                    "description": "An object providing information about the ending balance of the bank account. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "confidence"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "The ending balance as it appears on the bank statement.",
                                        "example": "-678.90"
                                      },
                                      "normalized": {
                                        "type": "integer",
                                        "description": "A signed integer giving the ending balance in cents.",
                                        "example": -67890
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 giving the confidence associated with this result.",
                                        "example": 0.99
                                      }
                                    }
                                  },
                                  "transactions_match_balances": {
                                    "type": "boolean",
                                    "description": "Indicates if the sum of the beginning balance and transaction total are equal to the ending balance if a beginning and ending balance are present for the account. Otherwise, returns `null`.",
                                    "example": false
                                  },
                                  "transactions": {
                                    "type": "array",
                                    "description": "An array of the transactions found to be associated with this account. Transaction parsing must be enabled by Inscribe for your account before the results are available, otherwise the key will be omitted from the response. You can contact Inscribe <a href=\"#\" onclick=\"Intercom('showNewMessage')\">via intercom</a> to enquire about enabling the service. If the service is not enabled for your account, the key will be omitted from the response.",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "date",
                                        "description",
                                        "amount"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "format": "uuid",
                                          "description": "A unique identifier for each transaction.",
                                          "example": "f5a7b7f0-03dc-491d-bd38-b5f632919178"
                                        },
                                        "date": {
                                          "type": "string",
                                          "format": "date",
                                          "description": "The date of the transaction in the form `YYYY-MM-DD`.",
                                          "example": "2021-01-01"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The description of the transaction as it appears on the statement.",
                                          "example": "Ssa Treas 310 Des:Xxsoc Sec Id:Xxxxxxxxxa Ssa Indn:Randall J Wright Co Id:9031036360 Ppd"
                                        },
                                        "amount": {
                                          "type": "integer",
                                          "description": "A signed integer giving the transaction amount in cents. Negative values indicate debits, positive values indicate credits.",
                                          "example": 24680
                                        }
                                      }
                                    }
                                  },
                                  "transaction_confidence": {
                                    "type": "number",
                                    "format": "float",
                                    "minimum": 0,
                                    "maximum": 1,
                                    "description": "A number between 0 and 1 giving the document-level confidence of the transactions returned in the `\"transactions\"` section. The value will be `null` if no transactions were found for the account.",
                                    "example": 0.98
                                  },
                                  "transaction_analysis": {
                                    "type": "object",
                                    "description": "**Beta:** Relevant information that has been extracted from the parsed transactions associated with the bank account. Transaction analysis must be enabled by Inscribe for your account before the results are available, otherwise the key will be omitted from the response. You can contact Inscribe <a href=\"#\" onclick=\"Intercom('showNewMessage')\">via intercom</a> to enquire about enabling the service. This feature is in beta and will improve over time.",
                                    "required": [
                                      "charges"
                                    ],
                                    "properties": {
                                      "charges": {
                                        "type": "object",
                                        "description": "Detected charges found within the bank account parsed transactions. Non-sufficent fund and overdraft charges are supported currently.",
                                        "required": [
                                          "non_sufficient_funds",
                                          "overdrafts"
                                        ],
                                        "properties": {
                                          "non_sufficient_funds": {
                                            "type": "array",
                                            "description": "A list of non-sufficient fund charges detected from the bank account parsed transactions. If no charges are found, an empty array is returned.",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "transaction_id",
                                                "refunded",
                                                "refund_transaction_id"
                                              ],
                                              "properties": {
                                                "transaction_id": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "description": "The ID of the non-sufficient fund parsed transaction.",
                                                  "example": "12e90e31-0508-413f-8282-f385167e1510"
                                                },
                                                "refunded": {
                                                  "type": "boolean",
                                                  "description": "An indication of whether or not the charge was refunded.",
                                                  "example": true
                                                },
                                                "refund_transaction_id": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "description": "If a charge refund was issued, the ID of the transaction containing the refund. Otherwise returns `null`.",
                                                  "example": "81e90e31-0508-413f-8282-f385167e1510"
                                                }
                                              }
                                            }
                                          },
                                          "overdrafts": {
                                            "type": "array",
                                            "description": "A list of overdraft charges detected from the bank account parsed transactions. If no charges are found, an empty array is returned.",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "transaction_id",
                                                "refunded",
                                                "refuned_transaction_id"
                                              ],
                                              "properties": {
                                                "transaction_id": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "description": "The ID of the overdraft charge parsed transaction.",
                                                  "example": "12e90e31-0508-413f-8282-f385167e1510"
                                                },
                                                "refunded": {
                                                  "type": "boolean",
                                                  "description": "An indication of whether or not the overdraft charge was refunded.",
                                                  "example": true
                                                },
                                                "refunded_transaction_id": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "description": "If a charge refund was issued, the ID of the transaction containing the refund. Otherwise returns `null`.",
                                                  "example": "81e90e31-0508-413f-8282-f385167e1510"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "summary_statistics": {
                                        "type": "object",
                                        "description": "Credit analysis signals calculated from parsed document transactions during time period starting on date of beginning balance to the last date of month of the last transaction.",
                                        "required": [
                                          "credits_count",
                                          "credits_total_gross",
                                          "debits_count",
                                          "debits_total_gross",
                                          "total_net",
                                          "average_daily_balance",
                                          "maximum_balance",
                                          "minimum_balance",
                                          "maximum_minus_minimum_balance",
                                          "number_of_days_with_negative_balance",
                                          "transfers_count",
                                          "transfers_credits_total_gross",
                                          "transfers_debits_total_gross",
                                          "transfers_total_net",
                                          "revenue_annual",
                                          "revenue_for_period",
                                          "salary_annual",
                                          "salary_for_period"
                                        ],
                                        "properties": {
                                          "average_daily_balance": {
                                            "type": "number",
                                            "format": "integer",
                                            "description": "Average daily balance in cents.",
                                            "example": 2500
                                          },
                                          "credits_count": {
                                            "type": "number",
                                            "format": "integer",
                                            "description": "Number of credits found in parsed transactions.",
                                            "example": 2
                                          },
                                          "credits_total_gross": {
                                            "type": "number",
                                            "format": "integer",
                                            "description": "Sum of credits found in parsed transactions in cents.",
                                            "example": 1000
                                          },
                                          "debits_count": {
                                            "type": "number",
                                            "format": "integer",
                                            "description": "Number of debits found in parsed transactions.",
                                            "example": 1
                                          },
                                          "debits_total_gross": {
                                            "type": "integer",
                                            "format": "integer",
                                            "description": "Sum of debits found in parsed transactions in cents.",
                                            "example": 2000
                                          },
                                          "maximum_balance": {
                                            "type": "number",
                                            "format": "integer",
                                            "description": "Maximum daily balance in cents.",
                                            "example": 2000
                                          },
                                          "minimum_balance": {
                                            "type": "number",
                                            "format": "integer",
                                            "description": "Minimum daily balance in cents.",
                                            "example": -1000
                                          },
                                          "maximum_minus_minimum_balance": {
                                            "type": "number",
                                            "format": "integer",
                                            "description": "Difference between the maximum and minimum daily balances in cents, calculated by `maximum_balance - minimum_balance`",
                                            "example": 3000
                                          },
                                          "number_of_days_with_negative_balance": {
                                            "type": "number",
                                            "format": "integer",
                                            "description": "Number of days when account balance is negative.",
                                            "example": 5
                                          },
                                          "revenue_annual": {
                                            "type": "number",
                                            "format": "integer",
                                            "description": "Estimated annual revenue, based on `revenue_for_period` and the time period of the bank statement.",
                                            "example": 300000000
                                          },
                                          "revenue_for_period": {
                                            "type": "number",
                                            "format": "integer",
                                            "description": "Sum of all revenue transactions found within the bank statement.",
                                            "example": 25000000
                                          },
                                          "salary_annual": {
                                            "type": "number",
                                            "format": "integer",
                                            "description": "Estimated annual salary, based on `salary_for_period` and the time period of the bank statement.",
                                            "example": 3000000
                                          },
                                          "salary_for_period": {
                                            "type": "number",
                                            "format": "integer",
                                            "description": "Sum of all salary transactions found within the bank statement.",
                                            "example": 250000
                                          },
                                          "total_net": {
                                            "type": "number",
                                            "format": "integer",
                                            "description": "Sum of transactions in cents, calculated by `credits_total_gross - debits_total_gross`. In statements where `beginning_balance` and `ending_balance` are found for the bank account, `total_net` should equal `ending_balance - beginning_balance`.",
                                            "example": -1000
                                          },
                                          "transfers_count": {
                                            "type": "number",
                                            "format": "integer",
                                            "description": "Number of transfer transactions found.",
                                            "example": 3
                                          },
                                          "transfers_credits_total_gross": {
                                            "type": "integer",
                                            "format": "integer",
                                            "description": "Sum of credit transfers found in parsed transactions in cents.",
                                            "example": 2000
                                          },
                                          "transfers_debits_total_gross": {
                                            "type": "integer",
                                            "format": "integer",
                                            "description": "Sum of debit transfers found in parsed transactions in cents.",
                                            "example": 1000
                                          },
                                          "transfers_total_net": {
                                            "type": "number",
                                            "format": "integer",
                                            "description": "Sum of transfer transactions in cents, transfers_credits_total_gross - transfers_debits_total_gross.",
                                            "example": 1000
                                          }
                                        }
                                      },
                                      "lending_activity": {
                                        "type": "object",
                                        "description": "Detected loan payment and repayment transactions with identified lenders made to and from the customer respectively.",
                                        "required": [
                                          "payments",
                                          "repayments"
                                        ],
                                        "properties": {
                                          "payments": {
                                            "type": "array",
                                            "description": "List of all loan payment transactions made to the customer from a lender",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "transaction_id",
                                                "lender"
                                              ],
                                              "properties": {
                                                "transaction_id": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "description": "The ID of the associated loan payment transaction.",
                                                  "example": "12e90e31-0508-413f-8282-f385167e1510"
                                                },
                                                "lender": {
                                                  "type": "string",
                                                  "description": "The name of the lender associated with the loan payment",
                                                  "example": "BANK OF AMERICA"
                                                }
                                              }
                                            }
                                          },
                                          "repayments": {
                                            "type": "array",
                                            "description": "List of all loan repayment transactions made by the customer to a lender",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "transaction_id",
                                                "lender"
                                              ],
                                              "properties": {
                                                "transaction_id": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "description": "The ID of the associated loan repayment transaction.",
                                                  "example": "12e90e31-0508-413f-8282-f385167e1510"
                                                },
                                                "lender": {
                                                  "type": "string",
                                                  "description": "The name of the lender associated with the loan repayment",
                                                  "example": "BANK OF AMERICA"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "payslips": {
                              "type": "array",
                              "description": "An array of parsed payslips found in the document and the parsed details associated with the payslips. If no payslips are found, an empty array is returned. If the document is not of type `PAYSLIP`, the key will not be present in the response. Payslip parsing must be enabled by Inscribe for your account before the results are available, otherwise the key will be omitted from the response. You can contact Inscribe <a href=\"#\" onclick=\"Intercom('showNewMessage')\">via intercom</a> to enquire about enabling the service. If the service is not enabled for your account, the key will be omitted from the response.",
                              "items": {
                                "type": "object",
                                "required": [
                                  "business_name",
                                  "business_address",
                                  "gross_pay",
                                  "net_pay",
                                  "gross_pay_ytd",
                                  "net_pay_ytd",
                                  "period_start",
                                  "period_end"
                                ],
                                "properties": {
                                  "business_name": {
                                    "type": "object",
                                    "description": "An object providing information about the business name on the payslip. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "confidence"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "A string giving the business name as it appears on the payslip.",
                                        "example": "Hot Deals LLC"
                                      },
                                      "normalized": {
                                        "type": "string",
                                        "description": "A normalized form of the business name.",
                                        "example": "Hot Deals LLC"
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 giving the confidence associated with this result.",
                                        "example": 0.98
                                      }
                                    }
                                  },
                                  "business_address": {
                                    "type": "object",
                                    "description": "An object providing information about the business address on the payslip. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "structured",
                                      "confidence"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "A string giving the business address as it appears on the payslip.",
                                        "example": "1000 Walnut Kansas City MO 64106-3686"
                                      },
                                      "normalized": {
                                        "type": "string",
                                        "description": "A normalized form of the number.",
                                        "example": "1000 Walnut Kansas City, MO, 64106, USA"
                                      },
                                      "structured": {
                                        "type": "object",
                                        "description": "The structured output of the address. Any or all of these fields can be empty depending on the raw address.",
                                        "properties": {
                                          "line_1": {
                                            "type": "string",
                                            "description": "First line of the address",
                                            "example": "1000 Walnut St"
                                          },
                                          "line_2": {
                                            "type": "string",
                                            "description": "Second line of the address",
                                            "example": "Kansas City"
                                          },
                                          "city": {
                                            "type": "string",
                                            "description": "City of the address",
                                            "example": "Kansas"
                                          },
                                          "post_code": {
                                            "type": "string",
                                            "description": "Post code of the address",
                                            "example": "64106"
                                          },
                                          "state": {
                                            "type": "string",
                                            "description": "State field of the address",
                                            "example": "MO"
                                          },
                                          "country": {
                                            "type": "string",
                                            "description": "Country of the address",
                                            "example": "USA"
                                          }
                                        }
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 giving the confidence associated with this result.",
                                        "example": 0.99
                                      }
                                    }
                                  },
                                  "gross_pay": {
                                    "type": "object",
                                    "description": "An object providing information about the gross pay recorded on the payslip. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "confidence"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "The gross pay as it appears on the payslip.",
                                        "example": "123.45"
                                      },
                                      "normalized": {
                                        "type": "integer",
                                        "description": "A signed integer giving the gross pay in cents.",
                                        "example": 12345
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 giving the confidence associated with this result.",
                                        "example": 0.98
                                      }
                                    }
                                  },
                                  "net_pay": {
                                    "type": "object",
                                    "description": "An object providing information about the net pay recorded on the payslip. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "confidence"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "A string giving the net pay as it appears on the payslip.",
                                        "example": "123.45"
                                      },
                                      "normalized": {
                                        "type": "integer",
                                        "description": "A signed integer giving the net pay in cents.",
                                        "example": 12345
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 giving the confidence associated with this result.",
                                        "example": 0.99
                                      }
                                    }
                                  },
                                  "gross_pay_ytd": {
                                    "type": "object",
                                    "description": "An object providing information about the year-to-date gross pay recorded on the payslip. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "confidence"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "The year-to-date gross pay as it appears on the payslip.",
                                        "example": "123.45"
                                      },
                                      "normalized": {
                                        "type": "integer",
                                        "description": "A signed integer giving the year-to-date gross pay in cents.",
                                        "example": 12345
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 giving the confidence associated with this result.",
                                        "example": 0.98
                                      }
                                    }
                                  },
                                  "net_pay_ytd": {
                                    "type": "object",
                                    "description": "An object providing information about the year-to-date net pay recorded on the payslip. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "confidence"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "A string giving the year-to-date net pay as it appears on the payslip.",
                                        "example": "123.45"
                                      },
                                      "normalized": {
                                        "type": "integer",
                                        "description": "A signed integer giving the year-to-date net pay in cents.",
                                        "example": 12345
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 giving the confidence associated with this result.",
                                        "example": 0.99
                                      }
                                    }
                                  },
                                  "period_start": {
                                    "type": "object",
                                    "description": "An object providing information about date of the start of the pay period recorded on the payslip. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "confidence"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "A string giving the period start date as it appears on the payslip.",
                                        "example": "3rd of December 2019"
                                      },
                                      "normalized": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "A string giving the period start date in the format YYYY-MM-DD.\n",
                                        "example": "2019-12-03"
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 giving the confidence associated with this result.",
                                        "example": 0.8
                                      }
                                    }
                                  },
                                  "period_end": {
                                    "type": "object",
                                    "description": "An object providing information about date of the end of the pay period recorded on the payslip. An empty object is returned if a matching result has not been found.\n",
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "A string giving the period end date as it appears on the payslip.",
                                        "example": "16th of December 2019"
                                      },
                                      "normalized": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "A string giving the period end date in the format YYYY-MM-DD.\n",
                                        "example": "2019-12-16"
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 giving the confidence associated with this result.",
                                        "example": 0.8
                                      }
                                    }
                                  },
                                  "overtime_pay": {
                                    "type": "object",
                                    "description": "**Beta, available on request:** An object providing information about the overtime pay recorded on the payslip. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "confidence"
                                    ],
                                    "x-tags": [
                                      "beta",
                                      "available on request"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "A string giving the year-to-date net pay as it appears on the payslip.",
                                        "example": "123.45"
                                      },
                                      "normalized": {
                                        "type": "integer",
                                        "description": "A signed integer giving the year-to-date net pay in cents.",
                                        "example": 12345
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 giving the confidence associated with this result.",
                                        "example": 0.99
                                      }
                                    }
                                  },
                                  "overtime_pay_ytd": {
                                    "type": "object",
                                    "description": "**Beta, available on request:** An object providing information about the year-to-date overtime pay recorded on the payslip. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "confidence"
                                    ],
                                    "x-tags": [
                                      "beta",
                                      "available on request"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "A string giving the year-to-date net pay as it appears on the payslip.",
                                        "example": "123.45"
                                      },
                                      "normalized": {
                                        "type": "integer",
                                        "description": "A signed integer giving the year-to-date net pay in cents.",
                                        "example": 12345
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 giving the confidence associated with this result.",
                                        "example": 0.99
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "ein": {
                              "type": "array",
                              "description": "A list of unique Employer Identification Numbers found in the document. The ein key will not exist if no EINs were parsed from the document and values within will only be available when the document is in the PROCESSED state. This feature is in beta and will improve over time.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "raw": {
                                    "type": "string",
                                    "description": "The EIN as it appears in the document.",
                                    "example": 126554311
                                  },
                                  "normalized": {
                                    "type": "string",
                                    "description": "The EIN in the format ##-#######",
                                    "example": "12-6554311"
                                  },
                                  "confidence": {
                                    "type": "number",
                                    "format": "float",
                                    "description": "A value between 0 and 1 indicating the confidence in the parsed output. This value is only available when the document is in the PROCESSED state.",
                                    "example": 0.8
                                  }
                                }
                              }
                            },
                            "ssn": {
                              "type": "array",
                              "description": "A list of unique Social Security Numbers found in the document. The ssn key will not exist if no SSNs were parsed from the document and values within will only be available when the document is in the PROCESSED state. This feature is in beta and will improve over time.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "raw": {
                                    "type": "string",
                                    "description": "The SSN as it appears in the document.",
                                    "example": "999-99-9999"
                                  },
                                  "normalized": {
                                    "type": "string",
                                    "description": "The SSN in the format ###-##-####",
                                    "example": "999-99-9999"
                                  },
                                  "confidence": {
                                    "type": "number",
                                    "format": "float",
                                    "description": "A value between 0 and 1 indicating the confidence in the parsed output. This value is only available when the document is in the PROCESSED state.",
                                    "example": 0.9
                                  }
                                }
                              }
                            },
                            "financial_statements": {
                              "type": "object",
                              "description": "If the document contains financial statements, we parse certain financial information from these forms.",
                              "properties": {
                                "profit_and_loss": {
                                  "type": "array",
                                  "description": "A list of financial statements found in the document.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "costs_of_revenue": {
                                        "type": "object",
                                        "description": "The costs directly associated with producing the revenue.",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The raw costs of revenue as it appears in the document.",
                                            "example": "20000.00"
                                          },
                                          "normalized": {
                                            "type": "string",
                                            "description": "The normalized costs of revenue.",
                                            "example": "$20,000.00"
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "gross_profit": {
                                        "type": "object",
                                        "description": "The profit a company makes after deducting the costs associated with making and selling its products, or the costs associated with providing its services.",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The gross profit as it appears in the document.",
                                            "example": "$55,000.00"
                                          },
                                          "normalized": {
                                            "type": "string",
                                            "description": "The normalized gross profit.",
                                            "example": "$55,000.00"
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "gross_margin": {
                                        "type": "object",
                                        "description": "The gross margin represents the percent of total sales revenue that the company retains after incurring the direct costs associated with producing the goods and services sold by a company.",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The gross margin as it appears in the document.",
                                            "example": "55.35%"
                                          },
                                          "normalized": {
                                            "type": "string",
                                            "description": "The normalized gross margin.",
                                            "example": "55.35%"
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "net_profit": {
                                        "type": "object",
                                        "description": "Net profit is the amount of money that is left after subtracting the company's total expenses from total revenue.",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The net profit as it appears in the document.",
                                            "example": "$23,250.00"
                                          },
                                          "normalized": {
                                            "type": "string",
                                            "description": "The normalized net profit.",
                                            "example": "$23,250.00"
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "operating_income": {
                                        "type": "object",
                                        "description": "Operating income is an accounting figure that measures the amount of profit realized from a business's operations, after deducting operating expenses such as wages, depreciation, and cost of goods sold (COGS).",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The operating income as it appears in the document.",
                                            "example": "$30,000.00"
                                          },
                                          "normalized": {
                                            "type": "string",
                                            "description": "The normalized operating income.",
                                            "example": "$30,000.00"
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "operating_margin": {
                                        "type": "object",
                                        "description": "Operating margin is a margin ratio used to measure a company's pricing strategy and operating efficiency.",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The operating margin as it appears in the document.",
                                            "example": "55.38%"
                                          },
                                          "normalized": {
                                            "type": "string",
                                            "description": "The normalized operating margin.",
                                            "example": "55.38%"
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "net_income": {
                                        "type": "object",
                                        "description": "Net income is a company's total earnings (or profit); net income is calculated by taking revenues and subtracting the costs of doing business such as depreciation, interest, taxes and other expenses.",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The net income as it appears in the document.",
                                            "example": "$23,250.00"
                                          },
                                          "normalized": {
                                            "type": "string",
                                            "description": "The normalized net income.",
                                            "example": "$23,250.00"
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "business_name": {
                                        "type": "object",
                                        "description": "The name of the business.",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The business name as it appears in the document.",
                                            "example": "Example Business Inc."
                                          },
                                          "normalized": {
                                            "type": "string",
                                            "description": "The normalized business name.",
                                            "example": "Example Business Inc."
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "business_address": {
                                        "type": "object",
                                        "description": "The address of the business.",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The business address as it appears in the document.",
                                            "example": "1000 Walnut Kansas City MO 64106-3686"
                                          },
                                          "normalized": {
                                            "type": "string",
                                            "description": "The normalized business address.",
                                            "example": "1000 Walnut St, Kansas City, MO 64106, USA"
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "year_issued": {
                                        "type": "object",
                                        "description": "The year the document or data was issued or created.",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The year issued as it appears in the document.",
                                            "example": "2020"
                                          },
                                          "normalized": {
                                            "type": "string",
                                            "description": "The normalized year issued.",
                                            "example": "2020"
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "total_expenses": {
                                        "type": "object",
                                        "description": "The total expenses incurred by the business.",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The total expenses as it appears in the document.",
                                            "example": "$31,750.00"
                                          },
                                          "normalized": {
                                            "type": "string",
                                            "description": "The normalized total expenses.",
                                            "example": "$31,750.00"
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "tax_forms": {
                              "type": "object",
                              "description": "If the document contains tax forms, we will attempt to parse information from these forms.",
                              "properties": {
                                "1040": {
                                  "type": "object",
                                  "description": "U.S. Form 1040 Tax Document",
                                  "properties": {
                                    "taxpayer_name": {
                                      "type": "object",
                                      "description": "The taxpayer name found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The taxpayer name as it appears in the document.",
                                          "example": "John Smith"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized taxpayer name (same as raw in this case).",
                                          "example": "John Smith"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed taxpayer name.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "taxpayer_address": {
                                      "type": "object",
                                      "description": "The taxpayer address found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The taxpayer address as it appears in the document.",
                                          "example": "1000 Walnut Kansas City MO 64106-3686"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized taxpayer address.",
                                          "example": "1000 Walnut St, Kansas City, MO 64106, USA"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed taxpayer address.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "social_security_number": {
                                      "type": "object",
                                      "description": "The Social Security Number (SSN) of the taxpayer",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The SSN as it appears in the document.",
                                          "example": "123-45-6789"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized SSN (same as raw in this case).",
                                          "example": "123-45-6789"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed SSN.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "year_issued": {
                                      "type": "object",
                                      "description": "The parsed year of issuance found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The parsed document year as it appears in the document.",
                                          "example": 2024
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized document year (same as raw in this case).",
                                          "example": 2024
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed document year.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "total_income": {
                                      "type": "object",
                                      "description": "The total income reported in the tax document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The total income as it appears in the document.",
                                          "example": 45000.75
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized total income in cents.",
                                          "example": 4500075
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed total income.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "deductions": {
                                      "type": "object",
                                      "description": "The deductions claimed in the tax document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The deductions as they appear in the document.",
                                          "example": 7500.5
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized deductions in cents.",
                                          "example": 750050
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed deductions.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "taxable_income": {
                                      "type": "object",
                                      "description": "The taxable income calculated based on total income and deductions.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The taxable income as it appears in the document.",
                                          "example": 37500.25
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized taxable income in cents.",
                                          "example": 3750025
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed taxable income.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "total_tax": {
                                      "type": "object",
                                      "description": "The total tax amount calculated.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The total tax amount as it appears in the document.",
                                          "example": 6750.3
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized total tax amount in cents.",
                                          "example": 675030
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed total tax amount.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "total_payments": {
                                      "type": "object",
                                      "description": "The total payments made towards taxes.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The total payments as they appear in the document.",
                                          "example": 8000
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized total payments in cents.",
                                          "example": 800000
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed total payments.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "tax_to_be_refunded": {
                                      "type": "object",
                                      "description": "The amount of tax to be refunded to the taxpayer.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The refund amount as it appears in the document.",
                                          "example": 500.7
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized refund amount in cents.",
                                          "example": 50070
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed refund amount.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "tax_owed": {
                                      "type": "object",
                                      "description": "The amount of tax owed by the taxpayer.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The owed tax amount as it appears in the document.",
                                          "example": 1000.5
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized owed tax amount in cents.",
                                          "example": 100050
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed owed tax amount.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    }
                                  }
                                },
                                "1065": {
                                  "type": "object",
                                  "description": "U.S. Form 1065 Tax Document (Partnership Return)",
                                  "properties": {
                                    "partnership_name": {
                                      "type": "object",
                                      "description": "The partnership name found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The partnership name as it appears in the document.",
                                          "example": "ACME Inc."
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized partnership name (same as raw in this case).",
                                          "example": "ACME Inc."
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed partnership name.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "partnership_address": {
                                      "type": "object",
                                      "description": "The partnership address found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The partnership address as it appears in the document.",
                                          "example": "1000 Walnut Kansas City MO 64106-3686"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized partnership address.",
                                          "example": "1000 Walnut St, Kansas City, MO 64106, USA"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed partnership address.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "employer_identification_number": {
                                      "type": "object",
                                      "description": "The Employer Identification Number (EIN) of the partnership",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The EIN as it appears in the document.",
                                          "example": "12-3456789"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized EIN (same as raw in this case).",
                                          "example": "12-3456789"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed EIN.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "year_issued": {
                                      "type": "object",
                                      "description": "The parsed year of issuance found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The parsed document year as it appears in the document.",
                                          "example": 2024
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized document year (same as raw in this case).",
                                          "example": 2024
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed document year.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "total_income": {
                                      "type": "object",
                                      "description": "The total income reported on the Form 1065 document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The total income as it appears in the document.",
                                          "example": 75000.75
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized total income in cents.",
                                          "example": 7500075
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed total income.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "total_assets": {
                                      "type": "object",
                                      "description": "The total assets of the partnership",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The total assets as they appear in the document.",
                                          "example": 1000000.5
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized total assets in cents.",
                                          "example": 100000050
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed total assets.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "deductions": {
                                      "type": "object",
                                      "description": "The deductions claimed on the Form 1065 document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The deductions as they appear in the document.",
                                          "example": 20000.25
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized deductions in cents.",
                                          "example": 2000025
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed deductions.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "total_tax_balance_due": {
                                      "type": "object",
                                      "description": "The total tax balance due from the partnership",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The tax balance due as it appears in the document.",
                                          "example": 15000.3
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized tax balance due in cents.",
                                          "example": 1500030
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed tax balance due.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "total_tax_amount_owed": {
                                      "type": "object",
                                      "description": "The total tax amount owed by the partnership",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The tax amount owed as it appears in the document.",
                                          "example": 12000.5
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized tax amount owed in cents.",
                                          "example": 1200050
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed tax amount owed.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "ordinary_business_income": {
                                      "type": "object",
                                      "description": "The ordinary business income reported on the Form 1065 document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The ordinary business income as it appears in the document.",
                                          "example": 5000.25
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized ordinary business income in cents.",
                                          "example": 500025
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed ordinary business income.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    }
                                  }
                                },
                                "1120": {
                                  "type": "object",
                                  "description": "U.S. Form 1120 Tax Document (Corporation Income Tax Return)",
                                  "properties": {
                                    "corporation_name": {
                                      "type": "object",
                                      "description": "The corporation name found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The corporation name as it appears in the document.",
                                          "example": "ACME Inc."
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized corporation name (same as raw in this case).",
                                          "example": "ACME Inc."
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed corporation name.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "corporation_address": {
                                      "type": "object",
                                      "description": "The corporation address found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The corporation address as it appears in the document.",
                                          "example": "1000 Walnut Kansas City MO 64106-3686"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized corporation address.",
                                          "example": "1000 Walnut St, Kansas City, MO 64106, USA"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed corporation address.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "year_issued": {
                                      "type": "object",
                                      "description": "The parsed year of issuance found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The parsed document year as it appears in the document.",
                                          "example": 2024
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized document year (same as raw in this case).",
                                          "example": 2024
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed document year.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "employer_identification_number": {
                                      "type": "object",
                                      "description": "The Employer Identification Number (EIN) of the corporation",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The EIN as it appears in the document.",
                                          "example": "12-3456789"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized EIN (same as raw in this case).",
                                          "example": "12-3456789"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed EIN.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "total_assets": {
                                      "type": "object",
                                      "description": "The total assets of the corporation",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The total assets as they appear in the document.",
                                          "example": 10000000.5
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized total assets in cents.",
                                          "example": 1000000050
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed total assets.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "total_income": {
                                      "type": "object",
                                      "description": "The total income reported on the Form 1120 document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The total income as it appears in the document.",
                                          "example": 750000.75
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized total income in cents.",
                                          "example": 75000075
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed total income.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "deductions": {
                                      "type": "object",
                                      "description": "The deductions claimed on the Form 1120 document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The deductions as they appear in the document.",
                                          "example": 200000.25
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized deductions in cents.",
                                          "example": 20000025
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed deductions.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "taxable_income": {
                                      "type": "object",
                                      "description": "The taxable income calculated based on total income and deductions",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The taxable income as it appears in the document.",
                                          "example": 550000.5
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized taxable income in cents.",
                                          "example": 55000050
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed taxable income.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "tax_owed": {
                                      "type": "object",
                                      "description": "The total tax amount owed by the corporation",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The tax amount owed as it appears in the document.",
                                          "example": 150000.3
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized tax amount owed in cents.",
                                          "example": 15000030
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed tax amount owed.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "total_payments_and_credits": {
                                      "type": "object",
                                      "description": "The total payments and tax credits made by the corporation",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The total payments and credits as they appear in the document.",
                                          "example": 200000.5
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized total payments and credits in cents.",
                                          "example": 20000050
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed total payments and credits.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    }
                                  }
                                },
                                "w2": {
                                  "type": "array",
                                  "description": "A list of U.S. Form W-2, Wage and Tax statements found in the document.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "employer_name": {
                                        "type": "object",
                                        "description": "The name of the employer",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The employer name as it appears in the document.",
                                            "example": "John Doe"
                                          },
                                          "normalized": {
                                            "type": "string",
                                            "description": "The normalized employer name. In this case, the normalized value is the same as the raw value.",
                                            "example": "John Doe"
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "employer_address": {
                                        "type": "object",
                                        "description": "The address of the employer",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The employer address as it appears in the document.",
                                            "example": "1000 Walnut Kansas City MO 64106-3686"
                                          },
                                          "normalized": {
                                            "type": "string",
                                            "description": "The normalized employer address.",
                                            "example": "1000 Walnut St, Kansas City, MO 64106, USA"
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "employer_identification_number": {
                                        "type": "object",
                                        "description": "The Employer Identification Number (EIN) of the employer",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The employer identification number as it appears in the document.",
                                            "example": "12-6554311"
                                          },
                                          "normalized": {
                                            "type": "string",
                                            "description": "The normalized employer identification number. In this case, the normalized value is the same as the raw value.",
                                            "example": "12-6554311"
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "social_security_number": {
                                        "type": "object",
                                        "description": "The Social Security Number (SSN) of the employee",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The social security number as it appears in the document.",
                                            "example": "999-99-9999"
                                          },
                                          "normalized": {
                                            "type": "string",
                                            "description": "The normalized social security number. In this case, the normalized value is the same as the raw value.",
                                            "example": "999-99-9999"
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "wages_tips_comp": {
                                        "type": "object",
                                        "description": "The wages, tips and other employee compensation",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The wages, tips and other compensation amount as it appears in the document.",
                                            "example": 123.45
                                          },
                                          "normalized": {
                                            "type": "integer",
                                            "description": "A signed integer giving the wages, tips and other compensation in cents.",
                                            "example": 12345
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "fed_income_tax_withheld": {
                                        "type": "object",
                                        "description": "The federal income tax withheld from employee pay",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The amount of federal income tax withheld from pay as it appears in the document.",
                                            "example": 123.45
                                          },
                                          "normalized": {
                                            "type": "integer",
                                            "description": "A signed integer giving the federal income tax withheld from pay in cents.",
                                            "example": 12345
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "social_security_wages": {
                                        "type": "object",
                                        "description": "The employee wages subject to social security tax",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The amount of wages subject to social security tax as it appears in the document.",
                                            "example": 123.45
                                          },
                                          "normalized": {
                                            "type": "integer",
                                            "description": "A signed integer of wages subject to social security tax in cents.",
                                            "example": 12345
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "state_wages_tips": {
                                        "type": "object",
                                        "description": "The employee wages subject to state tax",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The amount of wages and tips subject to state tax as it appears in the document.",
                                            "example": 123.45
                                          },
                                          "normalized": {
                                            "type": "integer",
                                            "description": "A signed integer of wages and tips subject to state tax in cents.",
                                            "example": 12345
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "social_security_tax_withheld": {
                                        "type": "object",
                                        "description": "The social security tax withheld from employee pay",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The amount of social security tax withheld from pay as it appears in the document.",
                                            "example": 123.45
                                          },
                                          "normalized": {
                                            "type": "integer",
                                            "description": "A signed integer giving the social security tax withheld from pay in cents.",
                                            "example": 12345
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "medicare_wages_tips": {
                                        "type": "object",
                                        "description": "The employee wages subject to medicare tax",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The amount of wages and tips subject to medicare tax as it appears in the document.",
                                            "example": 123.45
                                          },
                                          "normalized": {
                                            "type": "integer",
                                            "description": "A signed integer of wages and tips subject to medicare tax in cents.",
                                            "example": 12345
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      },
                                      "medicare_tax_withheld": {
                                        "type": "object",
                                        "description": "The medicare tax withheld from employee pay",
                                        "properties": {
                                          "raw": {
                                            "type": "string",
                                            "description": "The amount of medicare tax withheld from pay as it appears in the document.",
                                            "example": 123.45
                                          },
                                          "normalized": {
                                            "type": "integer",
                                            "description": "A signed integer giving the medicare tax withheld from pay in cents.",
                                            "example": 12345
                                          },
                                          "confidence": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "A value between 0 and 1 indicating the confidence in the parsed output.",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "1040_schedule_c": {
                                  "type": "object",
                                  "description": "U.S. Form 1040 Schedule C Tax Document",
                                  "properties": {
                                    "proprietor_name": {
                                      "type": "object",
                                      "description": "The proprietor name found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The proprietor name as it appears in the document.",
                                          "example": "John Smith"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized proprietor name (same as raw in this case).",
                                          "example": "John Smith"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed proprietor name.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "business_name": {
                                      "type": "object",
                                      "description": "The business name found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The business name as it appears in the document.",
                                          "example": "ACME Inc."
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized business name (same as raw in this case).",
                                          "example": "ACME Inc."
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed business name.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "business_address": {
                                      "type": "object",
                                      "description": "The business address found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The business address as it appears in the document.",
                                          "example": "1000 Walnut Kansas City MO 64106-3686"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized business address.",
                                          "example": "1000 Walnut St, Kansas City, MO 64106, USA"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed business address.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "employer_identification_number": {
                                      "type": "object",
                                      "description": "The Employer Identification Number (EIN) of the taxpayer's business",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The EIN as it appears in the document.",
                                          "example": "12-3456789"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized EIN (same as raw in this case).",
                                          "example": "12-3456789"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed EIN.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "year_issued": {
                                      "type": "object",
                                      "description": "The parsed year of issuance found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The parsed document year as it appears in the document.",
                                          "example": 2024
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized document year (same as raw in this case).",
                                          "example": 2024
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed document year.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "social_security_number": {
                                      "type": "object",
                                      "description": "The Social Security Number (SSN) of the taxpayer",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The SSN as it appears in the document.",
                                          "example": "123-45-6789"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized SSN (same as raw in this case).",
                                          "example": "123-45-6789"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed SSN.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "gross_profit": {
                                      "type": "object",
                                      "description": "The gross profit from the taxpayer's business",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The gross profit as it appears in the document.",
                                          "example": 25000.75
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized gross profit in cents.",
                                          "example": 2500075
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed gross profit.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "gross_income": {
                                      "type": "object",
                                      "description": "The gross income from the taxpayer's business",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The gross income as it appears in the document.",
                                          "example": 35000.5
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized gross income in cents.",
                                          "example": 3500050
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed gross income.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "total_expenses": {
                                      "type": "object",
                                      "description": "The total expenses incurred by the taxpayer's business",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The total expenses as they appear in the document.",
                                          "example": 10000.25
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized total expenses in cents.",
                                          "example": 1000025
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed total expenses.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "net_profit": {
                                      "type": "object",
                                      "description": "The net profit calculated from the gross profit and total expenses",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The net profit as it appears in the document.",
                                          "example": 25000.25
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized net profit in cents.",
                                          "example": 2500025
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed net profit.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "cost_of_goods_sold": {
                                      "type": "object",
                                      "description": "The cost of goods sold found in the tax form.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The cost of goods sold as it appears in the document.",
                                          "example": 25000.25
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized cost of goods sold in cents.",
                                          "example": 2500025
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed cost of goods sold.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "total_other_expenses": {
                                      "type": "object",
                                      "description": "The total other expenses found in the tax form.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The total other expenses as it appears in the document.",
                                          "example": 25000.25
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized total other expenses in cents.",
                                          "example": 2500025
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed total other expenses.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    }
                                  }
                                },
                                "1120s": {
                                  "type": "object",
                                  "description": "U.S. Form 1120S Tax Document (Income Tax Return for S Corporations)",
                                  "properties": {
                                    "corporation_name": {
                                      "type": "object",
                                      "description": "The corporation name found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The corporation name as it appears in the document.",
                                          "example": "ACME Inc."
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized corporation name (same as raw in this case).",
                                          "example": "ACME Inc."
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed corporation name.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "corporation_address": {
                                      "type": "object",
                                      "description": "The corporation address found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The corporation address as it appears in the document.",
                                          "example": "1000 Walnut Kansas City MO 64106-3686"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized corporation address.",
                                          "example": "1000 Walnut St, Kansas City, MO 64106, USA"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed corporation address.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "year_issued": {
                                      "type": "object",
                                      "description": "The parsed year of issuance found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The parsed document year as it appears in the document.",
                                          "example": 2024
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized document year (same as raw in this case).",
                                          "example": 2024
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed document year.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "employer_identification_number": {
                                      "type": "object",
                                      "description": "The Employer Identification Number (EIN) of the S Corporation",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The EIN as it appears in the document.",
                                          "example": "12-3456789"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized EIN (same as raw in this case).",
                                          "example": "12-3456789"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed EIN.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "total_assets": {
                                      "type": "object",
                                      "description": "The total assets of the S Corporation",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The total assets as they appear in the document.",
                                          "example": 1000000.5
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized total assets in cents.",
                                          "example": 100000050
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed total assets.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "total_income": {
                                      "type": "object",
                                      "description": "The total income reported on the Form 1120S document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The total income as it appears in the document.",
                                          "example": 750000.75
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized total income in cents.",
                                          "example": 75000075
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed total income.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "deductions": {
                                      "type": "object",
                                      "description": "The deductions claimed on the Form 1120S document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The deductions as they appear in the document.",
                                          "example": 200000.25
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized deductions in cents.",
                                          "example": 20000025
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed deductions.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "ordinary_business_income": {
                                      "type": "object",
                                      "description": "The ordinary business income reported on the Form 1120S document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The ordinary business income as it appears in the document.",
                                          "example": 5000.25
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized ordinary business income in cents.",
                                          "example": 500025
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed ordinary business income.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "tax_owed": {
                                      "type": "object",
                                      "description": "The total tax amount owed by the S Corporation.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The tax amount owed as it appears in the document.",
                                          "example": 1500.3
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized tax amount owed in cents.",
                                          "example": 150030
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed tax amount owed.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    }
                                  }
                                },
                                "1099_misc": {
                                  "type": "object",
                                  "description": "U.S. Form 1099-MISC Tax Document",
                                  "properties": {
                                    "payers_name": {
                                      "type": "object",
                                      "description": "The payer name found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The payer name as it appears in the document.",
                                          "example": "John Smith"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized payer name (same as raw in this case).",
                                          "example": "John Smith"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed payer name.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "payers_address": {
                                      "type": "object",
                                      "description": "The payer address found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The payer address as it appears in the document.",
                                          "example": "1000 Walnut Kansas City MO 64106-3686"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized payer address.",
                                          "example": "1000 Walnut St, Kansas City, MO 64106, USA"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed payer address.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "payers_tin": {
                                      "type": "object",
                                      "description": "The Taxpayer Identification Number (TIN) of the payer",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The TIN of the payer as it appears in the document.",
                                          "example": "12-3456789"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized TIN of the payer (same as raw in this case).",
                                          "example": "12-3456789"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed TIN of the payer.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "year_issued": {
                                      "type": "object",
                                      "description": "The parsed year of issuance found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The parsed document year as it appears in the document.",
                                          "example": 2024
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized document year (same as raw in this case).",
                                          "example": 2024
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed document year.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "state_tax_withheld": {
                                      "type": "object",
                                      "description": "The state tax withheld by the payer",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The state tax withheld as it appears in the document.",
                                          "example": 250.5
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized state tax withheld in cents.",
                                          "example": 25050
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed state tax withheld.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "state_income": {
                                      "type": "object",
                                      "description": "The state income reported in the document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The state income as it appears in the document.",
                                          "example": 5000.75
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized state income in cents.",
                                          "example": 500075
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed state income.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "recipients_tin": {
                                      "type": "object",
                                      "description": "The Taxpayer Identification Number (TIN) of the recipient",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The TIN of the recipient as it appears in the document.",
                                          "example": "98-7654321"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized TIN of the recipient (same as raw in this case).",
                                          "example": "98-7654321"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed TIN of the recipient.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "recipients_name": {
                                      "type": "object",
                                      "description": "The name of the recipient",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The name of the recipient as it appears in the document.",
                                          "example": "John Doe"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized name of the recipient (same as raw in this case).",
                                          "example": "John Doe"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed name of the recipient.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "recipients_address": {
                                      "type": "object",
                                      "description": "The address of the recipient",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The address of the recipient as it appears in the document.",
                                          "example": "123 Main St, Anytown"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized address of the recipient. Where possible, this will be in the format Address Line 1, Address Line 2, Postcode, City, State, Country.",
                                          "example": "123 Main St, Anytown, USA"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed address of the recipient.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "rents": {
                                      "type": "object",
                                      "description": "Income from rents reported in the document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "Income from rents as it appears in the document.",
                                          "example": 1500.25
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized income from rents in cents.",
                                          "example": 150025
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed income from rents.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "royalties": {
                                      "type": "object",
                                      "description": "Royalties reported in the document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "Royalties as they appear in the document.",
                                          "example": 750.5
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized royalties in cents.",
                                          "example": 75050
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed royalties.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "other_income": {
                                      "type": "object",
                                      "description": "Other income reported in the document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "Other income as it appears in the document.",
                                          "example": 500.75
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized other income in cents.",
                                          "example": 50075
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed other income.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "medical_and_healthcare": {
                                      "type": "object",
                                      "description": "Medical and healthcare payments reported in the document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "Medical and healthcare payments as they appear in the document.",
                                          "example": 1000.25
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized medical and healthcare payments in cents.",
                                          "example": 100025
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed medical and healthcare payments.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "account_number": {
                                      "type": "object",
                                      "description": "Account number associated with the payment",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The account number as it appears in the document.",
                                          "example": 12345678
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized account number (same as raw in this case).",
                                          "example": 12345678
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed account number.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "gross_attorney_payments": {
                                      "type": "object",
                                      "description": "Gross attorney payments reported in the document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "Gross attorney payments as they appear in the document.",
                                          "example": 500.5
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized gross attorney payments in cents.",
                                          "example": 50050
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed gross attorney payments.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "section_409a_deferrals": {
                                      "type": "object",
                                      "description": "Section 409A deferrals reported in the document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "Section 409A deferrals as they appear in the document.",
                                          "example": 750.75
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized Section 409A deferrals in cents.",
                                          "example": 75075
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed Section 409A deferrals.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "excess_golden_parachute_payments": {
                                      "type": "object",
                                      "description": "Excess golden parachute payments reported in the document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "Excess golden parachute payments as they appear in the document.",
                                          "example": 1000.25
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized excess golden parachute payments in cents.",
                                          "example": 100025
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed excess golden parachute payments.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "non_qualified_deferred_compensation": {
                                      "type": "object",
                                      "description": "Non-qualified deferred compensation reported in the document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "Non-qualified deferred compensation as it appears in the document.",
                                          "example": 1500.5
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized non-qualified deferred compensation in cents.",
                                          "example": 150050
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed non-qualified deferred compensation.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    }
                                  }
                                },
                                "1099_nec": {
                                  "type": "object",
                                  "description": "U.S. Form 1099-NEC Tax Document",
                                  "properties": {
                                    "payers_name": {
                                      "type": "object",
                                      "description": "The payer name found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The payer name as it appears in the document.",
                                          "example": "John Smith"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized payer name (same as raw in this case).",
                                          "example": "John Smith"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed payer name.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "payers_address": {
                                      "type": "object",
                                      "description": "The payer address found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The payer address as it appears in the document.",
                                          "example": "1000 Walnut Kansas City MO 64106-3686"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized payer address.",
                                          "example": "1000 Walnut St, Kansas City, MO 64106, USA"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed payer address.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "year_issued": {
                                      "type": "object",
                                      "description": "The parsed year of issuance found in the document.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The parsed document year as it appears in the document.",
                                          "example": 2024
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized document year (same as raw in this case).",
                                          "example": 2024
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed document year.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "payers_tin": {
                                      "type": "object",
                                      "description": "The Taxpayer Identification Number (TIN) of the payer",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The TIN of the payer as it appears in the document.",
                                          "example": "12-3456789"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized TIN of the payer (same as raw in this case).",
                                          "example": "12-3456789"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed TIN of the payer.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "state_tax_withheld": {
                                      "type": "object",
                                      "description": "The state tax withheld by the payer",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The state tax withheld as it appears in the document.",
                                          "example": 250.5
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized state tax withheld in cents.",
                                          "example": 25050
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed state tax withheld.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "state_income": {
                                      "type": "object",
                                      "description": "The state income reported in the document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The state income as it appears in the document.",
                                          "example": 5000.75
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized state income in cents.",
                                          "example": 500075
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed state income.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "recipients_tin": {
                                      "type": "object",
                                      "description": "The Taxpayer Identification Number (TIN) of the recipient",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The TIN of the recipient as it appears in the document.",
                                          "example": "98-7654321"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized TIN of the recipient (same as raw in this case).",
                                          "example": "98-7654321"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed TIN of the recipient.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "recipients_name": {
                                      "type": "object",
                                      "description": "The name of the recipient",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The name of the recipient as it appears in the document.",
                                          "example": "John Doe"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized name of the recipient (same as raw in this case).",
                                          "example": "John Doe"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed name of the recipient.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "recipients_address": {
                                      "type": "object",
                                      "description": "The address of the recipient",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The address of the recipient as it appears in the document.",
                                          "example": "123 Main St, Anytown"
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized address of the recipient. Where possible, this will be in the format Address Line 1, Address Line 2, Postcode, City, State, Country",
                                          "example": "123 Main St, Anytown, USA"
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed address of the recipient.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "non_employee_compensation": {
                                      "type": "object",
                                      "description": "Non-employee compensation reported in the document",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "Non-employee compensation as it appears in the document.",
                                          "example": 1500.25
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized non-employee compensation in cents.",
                                          "example": 150025
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed non-employee compensation.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "federal_income_tax_withheld": {
                                      "type": "object",
                                      "description": "The federal income tax withheld by the payer",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The federal income tax withheld as it appears in the document.",
                                          "example": 200.5
                                        },
                                        "normalized": {
                                          "type": "integer",
                                          "description": "The normalized federal income tax withheld in cents.",
                                          "example": 20050
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed federal income tax withheld.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    },
                                    "account_number": {
                                      "type": "object",
                                      "description": "Account number associated with the payment.",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "description": "The account number as it appears in the document.",
                                          "example": 12345678
                                        },
                                        "normalized": {
                                          "type": "string",
                                          "description": "The normalized account number (same as raw in this case).",
                                          "example": 12345678
                                        },
                                        "confidence": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "A value between 0 and 1 indicating the confidence in the parsed account number.",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "checks": {
                              "type": "array",
                              "description": "An array of checks found in the document. Currently, only the first check present in a document is returned. If the document isn't of type `CHECK`, the key will not be present in the response.\n",
                              "items": {
                                "type": "object",
                                "required": [
                                  "check_number",
                                  "account_number",
                                  "routing_number",
                                  "amount"
                                ],
                                "properties": {
                                  "check_number": {
                                    "type": "object",
                                    "description": "The parsed check number. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "confidence"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "The check number as it appears on the document",
                                        "example": "362"
                                      },
                                      "normalized": {
                                        "type": "string",
                                        "description": "The normalized check number. In this case the returned normalized value is the same as raw.",
                                        "example": "362"
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 indicating the confidence in the parsed output",
                                        "example": 0.99
                                      }
                                    }
                                  },
                                  "account_number": {
                                    "type": "object",
                                    "description": "The parsed account number. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "confidence"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "The account number as it appears on the document",
                                        "example": "485726463"
                                      },
                                      "normalized": {
                                        "type": "string",
                                        "description": "The normalized account number. In this case the returned normalized value is the same as raw.",
                                        "example": "485726463"
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 indicating the confidence in the parsed output",
                                        "example": 0.99
                                      }
                                    }
                                  },
                                  "routing_number": {
                                    "type": "object",
                                    "description": "The parsed routing number. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "confidence"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "The routing number as it appears on the document",
                                        "example": "026009593"
                                      },
                                      "normalized": {
                                        "type": "string",
                                        "description": "The normalized routing number. In this case the returned normalized value is the same as raw.",
                                        "example": "026009593"
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 indicating the confidence in the parsed output",
                                        "example": 0.99
                                      }
                                    }
                                  },
                                  "amount": {
                                    "type": "object",
                                    "description": "The parsed check amount. An empty object is returned if a matching result has not been found.\n",
                                    "required": [
                                      "raw",
                                      "normalized",
                                      "confidence"
                                    ],
                                    "properties": {
                                      "raw": {
                                        "type": "string",
                                        "description": "The check amount as it appears on the document",
                                        "example": "500.00"
                                      },
                                      "normalized": {
                                        "type": "integer",
                                        "description": "The check amount in cents",
                                        "example": 50000
                                      },
                                      "confidence": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "A number between 0 and 1 indicating the confidence in the parsed output",
                                        "example": 0.99
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "company": {
                              "type": "object",
                              "description": "If the name parsed from a document is the name of a registered company, we will attempt to gather information about this entity using external databases. The company key will not exist if the name parsed from a document is not the name of a registered company, and values within will only be available when the document is in the PROCESSED state. This feature is in beta and will improve over time.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the company as it appears on the external registry. This feature is in beta and will improve over time.",
                                  "example": "Inscribe AI LLC"
                                },
                                "current_status": {
                                  "type": "string",
                                  "description": "The current status of the company as it appears on the external registry. The range of possible statuses and the meaning of a given status are dependent on the external registry used.",
                                  "example": "Active"
                                },
                                "retrieved_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Time at which the information was extracted from the external registry. In the format yyyy-MM-dd'T'HH:mm:ssZ.",
                                  "example": "2019-12-12T15:35:08.460Z"
                                },
                                "opencorporates_url": {
                                  "type": "string",
                                  "description": "A URL to the company's page on Opencorporates.",
                                  "example": "https://opencorporates.com/companies/us_ca/C4575591"
                                },
                                "registry_url": {
                                  "type": "string",
                                  "description": "A URL to the company's page on the relevant external registry.",
                                  "example": "https://businesssearch.sos.ca.gov/CBS/SearchResults?SearchType=NUMBER&SearchCriteria=C4575591"
                                }
                              }
                            }
                          }
                        },
                        "device_fingerprint": {
                          "type": "object",
                          "description": "An optional object that provides details on how and where a document was uploaded. This can be enabled either through Collect or through an API integration. See [here](https://docs.inscribe.ai/docs/device-identification) for more details.",
                          "properties": {
                            "visitor_id": {
                              "type": "string",
                              "description": "Unique identifier for the device used to upload the document.",
                              "example": "3HNey93AkBW6CRbxV6xP"
                            },
                            "incognito_mode_used": {
                              "type": "boolean",
                              "description": "Was the device's browser using enhanced privacy features when uploading the document. For example, Incognito on Chrome, Private Window on Safari, Private Browsing on Firefox, or InPrivate on Edge.",
                              "example": true
                            },
                            "ip_address": {
                              "type": "string",
                              "description": "The IP address used to upload the document.",
                              "example": "1.2.3.4"
                            },
                            "ip_location": {
                              "type": "object",
                              "description": "Location associated with the IP address used to upload the document.",
                              "properties": {
                                "city": {
                                  "type": "object",
                                  "description": "The city the location is contained within. This value will be `null` if the location associated with the IP address is not contained within a city.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The city name.",
                                      "example": "Dublin"
                                    }
                                  }
                                },
                                "subdivisions": {
                                  "type": "array",
                                  "description": "Subdivisions associated with the location.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The subdivision name.",
                                        "example": "Leinster"
                                      },
                                      "iso_code": {
                                        "type": "string",
                                        "description": "The subdivision ISO code.",
                                        "example": "L"
                                      }
                                    }
                                  }
                                },
                                "country": {
                                  "type": "object",
                                  "description": "The country the location is contained within.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The country name.",
                                      "example": "Ireland"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "The country code.",
                                      "example": "IE"
                                    }
                                  }
                                },
                                "continent": {
                                  "type": "object",
                                  "description": "The continent the location is contained within.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The continent name.",
                                      "example": "Europe"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "The continent code.",
                                      "example": "EU"
                                    }
                                  }
                                },
                                "timezone": {
                                  "type": "string",
                                  "description": "The timezone the location is contained within.",
                                  "example": "Europe/Dublin"
                                },
                                "latitude": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The location's latitude.",
                                  "example": 53.3379
                                },
                                "longitude": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The location's longitude.",
                                  "example": -6.2591
                                },
                                "postal_code": {
                                  "type": "string",
                                  "description": "The postal code associated with the location. The value will be `null` if there is no postal code associated with the location.",
                                  "example": "D02"
                                },
                                "accuracy_radius": {
                                  "type": "integer",
                                  "description": "The accuracy radius in kilometers of the location associated with the IP address.",
                                  "example": 10
                                }
                              }
                            },
                            "device_details": {
                              "type": "object",
                              "description": "Details about the device and browser used to upload the document.",
                              "properties": {
                                "browser_name": {
                                  "type": "string",
                                  "description": "The name of the browser used.",
                                  "example": "Chrome Mobile"
                                },
                                "browser_major_version": {
                                  "type": "string",
                                  "description": "The major version of the browser.",
                                  "example": "106"
                                },
                                "browser_full_version": {
                                  "type": "string",
                                  "description": "The full version of the browser.",
                                  "example": "106.0.0"
                                },
                                "os": {
                                  "type": "string",
                                  "description": "The operating system used.",
                                  "example": "Android"
                                },
                                "os_version": {
                                  "type": "string",
                                  "description": "The operating system version.",
                                  "example": "12"
                                },
                                "device": {
                                  "type": "string",
                                  "description": "The type of device used.",
                                  "example": "Samsung SM-G991U1"
                                },
                                "user_agent": {
                                  "type": "string",
                                  "description": "User agent details.",
                                  "example": "Mozilla/5.0 (Linux; Android 12; SM-G991U1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Mobile Safari/537.36"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      },
      "put": {
        "tags": [
          "Documents"
        ],
        "summary": "Update a Document",
        "description": "Update document.",
        "operationId": "updateDocument",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Inscribe customer id.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the document to be updated.",
            "example": "d8555447-406d-459f-a144-0e41d5498ae4",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "array",
                    "description": "The tags you want to update on a document.",
                    "items": {
                      "$ref": "#/paths/~1customers~1%7Bid%7D~1documents/post/requestBody/content/multipart~1form-data/schema/properties/tags/items"
                    }
                  },
                  "review_status": {
                    "type": "string",
                    "description": "The new status of document level feedback. More information can be found at https://help.inscribe.ai/en/articles/8523290-document-level-feedback.",
                    "example": "ACCEPTED",
                    "enum": [
                      "ACCEPTED",
                      "REJECTED",
                      "REQUIRES_REVIEW"
                    ]
                  },
                  "verify_entity": {
                    "type": "object",
                    "description": "Optional information to be verified against a document.",
                    "properties": {
                      "names": {
                        "type": "array",
                        "description": "An array of personal names you wish to verify against the document.",
                        "items": {
                          "type": "string",
                          "example": "Frank Abagnale",
                          "description": "A personal name you wish to verify against the document."
                        }
                      },
                      "addresses": {
                        "type": "array",
                        "description": "An array of address you wish to verify are represented in the document.",
                        "items": {
                          "type": "string",
                          "example": "123 Fake Street",
                          "description": "An address you wish to verify is represented in the document."
                        }
                      },
                      "companies": {
                        "type": "array",
                        "description": "An array of company names you wish to verify against the document.",
                        "items": {
                          "type": "string",
                          "example": "Inscribe AI Inc",
                          "description": "A company name you wish to verify against the document."
                        }
                      },
                      "id_numbers": {
                        "type": "array",
                        "description": "An array of identification numbers you wish to verify against the document.",
                        "items": {
                          "type": "string",
                          "pattern": "^(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4}$|\\d{2}-\\d{7}|\\d{9}",
                          "example": "12-1234567",
                          "description": "An identification number you wish to verify against the document. Currently, SSN and EIN formats are supported."
                        }
                      },
                      "strings": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "An identifier for the input. Set by you for your own reference.",
                              "example": "Phone number"
                            },
                            "input": {
                              "type": "string",
                              "description": "A string you wish to verify against the document.",
                              "example": "929 947 9991"
                            }
                          }
                        }
                      },
                      "patterns": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "An identifier for the pattern. Set by you for your own reference.",
                              "example": "Phone number"
                            },
                            "pattern": {
                              "type": "string",
                              "description": "A regular expression pattern you wish to verify against the document.",
                              "example": "^\\d{3} \\d{3} \\d{4}$"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated document.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1documents~1%7Bid%7D/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        },
        "x-samples-code-samples": [
          {
            "language": "curl",
            "code": "curl -X PUT \"https://api.inscribe.ai/api/v2/customers/{customer_id}/documents/{document_id}\" \\ -H \"Authorization: Inscribe ...\" \\ -F 'tags=[{\"text\": \"onboarding\"}, {\"text\": \"new_system\"}]'"
          }
        ]
      },
      "delete": {
        "tags": [
          "Documents"
        ],
        "summary": "Delete a Document",
        "description": "Delete document. This cannot be undone",
        "operationId": "deleteDocument",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Inscribe customer id.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the document to be deleted.",
            "example": "d8555447-406d-459f-a144-0e41d5498ae4",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted document."
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/open_banking_data/inscribe_financial_data": {
      "post": {
        "tags": [
          "Open Banking"
        ],
        "summary": "Upload Open Banking Data (Inscribe Financial Data Format) (BETA)",
        "description": "Uploads Open Banking Data (Inscribe Financial Data Format) to an Inscribe customer (BETA). See our guide to submitting open banking data [here](https://docs.inscribe.ai/docs/submitting-open-banking-data).",
        "operationId": "uploadInscribeOpenBankingData",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Inscribe customer id.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The Open Banking Data (Inscribe Financial Data Format) to be uploaded.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "start_date",
                  "end_datetime",
                  "accounts"
                ],
                "properties": {
                  "start_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Refers to the beginning date of the data upload period. This should be in 'YYYY-MM-DD' format and represents the day from which the analysis will start at 00:00.",
                    "example": "2023-01-01"
                  },
                  "end_datetime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Marks the ending point of the data upload period. Unlike start_date, this must include both date and time in 'YYYY-MM-DDTHH:MM:SSZ' format, indicating the exact moment the period ends.",
                    "example": "2023-01-31T23:59:59Z"
                  },
                  "accounts": {
                    "type": "array",
                    "description": "An array of objects, each representing a bank account with detailed information.",
                    "items": {
                      "type": "object",
                      "required": [
                        "account_name",
                        "account_number",
                        "account_type",
                        "account_subtype",
                        "available_balance",
                        "balance",
                        "currency_code",
                        "guid",
                        "transactions",
                        "institution_name",
                        "owners"
                      ],
                      "properties": {
                        "account_name": {
                          "type": "string",
                          "description": "The name of the account.",
                          "example": "Checking Gold Account"
                        },
                        "account_number": {
                          "type": "string",
                          "description": "The unique identifier number for the account.",
                          "example": "123456789"
                        },
                        "account_type": {
                          "type": "string",
                          "description": "General category of the account.",
                          "example": "PERSONAL",
                          "enum": [
                            "PERSONAL",
                            "BUSINESS"
                          ]
                        },
                        "account_subtype": {
                          "type": "string",
                          "description": "More specific type of the account within the general category.",
                          "nullable": true,
                          "example": "PERSONAL_CHECKING",
                          "enum": [
                            "PERSONAL_CHECKING",
                            "PERSONAL_SAVING",
                            "PERSONAL_SOLE_PROPRIETOR"
                          ]
                        },
                        "available_balance": {
                          "type": "number",
                          "format": "double",
                          "description": "The available balance in the account at the end of the data period, including any pending transactions.",
                          "maximum": 1.7976931348623157e+308,
                          "minimum": -1.7976931348623157e+308,
                          "example": 2500.5
                        },
                        "balance": {
                          "type": "number",
                          "format": "double",
                          "description": "The current total balance of the account at the end of the data period, excluding any pending transactions.",
                          "maximum": 1.7976931348623157e+308,
                          "minimum": -1.7976931348623157e+308,
                          "example": 2500.5
                        },
                        "currency_code": {
                          "type": "string",
                          "description": "The ISO currency code representing the currency of the account.",
                          "example": "USD"
                        },
                        "guid": {
                          "type": "string",
                          "description": "A globally unique identifier for the account, given by the requester.",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "institution_name": {
                          "type": "string",
                          "nullable": true,
                          "description": "The name of the financial institution where the account is held.",
                          "example": "Oakwood Clearwater Bank"
                        },
                        "owners": {
                          "description": "An array of objects representing the owners of the account.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "name",
                              "address"
                            ],
                            "properties": {
                              "address": {
                                "type": "string",
                                "nullable": true,
                                "description": "The address of the account owner.",
                                "example": "123 Bridge Street, Sampleton, USA"
                              },
                              "name": {
                                "type": "string",
                                "nullable": true,
                                "description": "The name of the account owner.",
                                "example": "Alan Johnson"
                              }
                            }
                          }
                        },
                        "transactions": {
                          "description": "An array of transaction objects associated with the account.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "amount",
                              "currency_code",
                              "date",
                              "description",
                              "guid",
                              "status"
                            ],
                            "properties": {
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "description": "The amount of the transaction. Negative values refer to debit transactions, while positive values refer to credit transactions.",
                                "maximum": 1.7976931348623157e+308,
                                "minimum": -1.7976931348623157e+308,
                                "example": -100
                              },
                              "currency_code": {
                                "type": "string",
                                "description": "The ISO currency code for the transaction.",
                                "example": "USD"
                              },
                              "date": {
                                "type": "string",
                                "format": "date",
                                "description": "The posted date of the transaction in 'YYYY-MM-DD' format. The posted date is when the transaction is processed and recorded by the bank in the account.",
                                "example": "2023-01-15"
                              },
                              "description": {
                                "type": "string",
                                "description": "A brief description of the transaction.",
                                "example": "Grocery Store Payment"
                              },
                              "guid": {
                                "type": "string",
                                "description": "A globally unique identifier for the transaction, given by the requester.",
                                "example": "123e4567-e89b-12d3-a456-426614174000"
                              },
                              "status": {
                                "type": "string",
                                "description": "The status of the transaction.",
                                "example": "PENDING",
                                "enum": [
                                  "PENDING",
                                  "COMPLETE"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "start_date": "2023-01-01",
                "end_datetime": "2023-01-31T23:59:59Z",
                "accounts": [
                  {
                    "account_name": "Checking Gold",
                    "account_number": "123456789",
                    "account_type": "PERSONAL",
                    "account_subtype": "PERSONAL_CHECKING",
                    "available_balance": 1500.85,
                    "balance": 1500.85,
                    "currency_code": "USD",
                    "guid": "123e4567-e89b-12d3-a456-426614174002",
                    "institution_name": "Oakwood Clearwater Bank",
                    "owners": [
                      {
                        "name": "Liam Canpoor",
                        "address": "123 Main St, Anytown, USA"
                      }
                    ],
                    "transactions": [
                      {
                        "amount": -10.15,
                        "currency_code": "USD",
                        "date": "2023-01-02",
                        "description": "Transaction Received on NSF return item 123",
                        "guid": "123e4567-e89b-12d3-a456-426614174001",
                        "status": "COMPLETED"
                      },
                      {
                        "amount": -100.35,
                        "currency_code": "USD",
                        "date": "2023-01-06",
                        "description": "Credit Card Payment to Quail Creek Bank",
                        "guid": "123e4567-e89b-12d3-a456-426614174050",
                        "status": "COMPLETED"
                      },
                      {
                        "amount": 2000.35,
                        "currency_code": "USD",
                        "date": "2023-01-10",
                        "description": "Payroll from NYX Bros Gameshop",
                        "guid": "123e4567-e89b-12d3-a456-426614174020",
                        "status": "COMPLETED"
                      },
                      {
                        "amount": -120.85,
                        "currency_code": "USD",
                        "date": "2023-01-18",
                        "description": "Florida Lottery Payment",
                        "guid": "123e4567-e89b-12d3-a456-426614174030",
                        "status": "COMPLETED"
                      },
                      {
                        "amount": -150.93,
                        "currency_code": "USD",
                        "date": "2023-01-19",
                        "description": "19/01 WD ACH IRS",
                        "guid": "123e4567-e89b-12d3-a466-426614174030",
                        "status": "COMPLETED"
                      },
                      {
                        "amount": 15.11,
                        "currency_code": "USD",
                        "date": "2023-01-25",
                        "description": "Interest Received",
                        "guid": "123e4587-e89b-12d3-a466-426614174030",
                        "status": "COMPLETED"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created a new Open Banking Data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1plaid_assets/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/open_banking_data/mx_aggregated_data": {
      "post": {
        "tags": [
          "Open Banking"
        ],
        "summary": "Upload Open Banking Data (MX Aggregated Data)",
        "description": "Uploads MX Aggregated Data to an Inscribe customer. MX Aggregated Data is a format made by combining the responses from various MX endpoint requests. Once the request is received, the MX Aggregated Data will be processed by Inscribe’s Credit Insights service. See our guide to submitting open banking data [here](https://docs.inscribe.ai/docs/submitting-open-banking-data).",
        "operationId": "uploadMXAggregatedOpenBankingData",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Inscribe customer id.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The MX Aggregated to be uploaded. This data should be in JSON format and is a combination of multiple MX endpoint resource responses. These MX endpoint resources are: [Account](https://docs.mx.com/api-reference/platform-api/reference/account-fields), [Transaction](https://docs.mx.com/api-reference/platform-api/reference/transaction-fields) and [Account Owner](https://docs.mx.com/api-reference/atrium/reference/premium-features/account-owner-fields) (optional).",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "from_date",
                  "accounts"
                ],
                "properties": {
                  "from_date": {
                    "type": "string",
                    "format": "date",
                    "description": "The from_date parameter that was used when querying the [MX List Transactions resource](https://docs.mx.com/api-reference/atrium/reference/transactions/list-transactions)."
                  },
                  "accounts": {
                    "type": "array",
                    "description": "List of [MX Accounts](https://docs.mx.com/api-reference/platform-api/reference/account-fields)",
                    "items": {
                      "type": "object",
                      "required": [
                        "account_number",
                        "apr",
                        "apy",
                        "available_balance",
                        "available_credit",
                        "balance",
                        "cash_balance",
                        "cash_surrender_value",
                        "created_at",
                        "credit_limit",
                        "currency_code",
                        "day_payment_is_due",
                        "death_benefit",
                        "guid",
                        "holdings_value",
                        "id",
                        "imported_at",
                        "institution_code",
                        "insured_name",
                        "interest_rate",
                        "is_closed",
                        "is_hidden",
                        "is_manual",
                        "last_payment",
                        "last_payment_at",
                        "loan_amount",
                        "matures_on",
                        "member_guid",
                        "member_id",
                        "member_is_managed_by_user",
                        "metadata",
                        "minimum_balance",
                        "minimum_payment",
                        "name",
                        "nickname",
                        "original_balance",
                        "pay_out_amount",
                        "payment_due_at",
                        "payoff_balance",
                        "premium_amount",
                        "routing_number",
                        "started_on",
                        "subtype",
                        "total_account_value",
                        "type",
                        "updated_at",
                        "user_guid",
                        "user_id",
                        "transactions"
                      ],
                      "properties": {
                        "account_number": {
                          "type": "string"
                        },
                        "account_ownership": {
                          "type": "string",
                          "nullable": true
                        },
                        "annuity_policy_to_date": {
                          "type": "string",
                          "nullable": true
                        },
                        "annuity_provider": {
                          "type": "string",
                          "nullable": true
                        },
                        "annuity_term_year": {
                          "type": "string",
                          "nullable": true
                        },
                        "apr": {
                          "type": "number",
                          "nullable": true
                        },
                        "apy": {
                          "type": "number",
                          "nullable": true
                        },
                        "available_balance": {
                          "type": "number",
                          "format": "double",
                          "maximum": 1.7976931348623157e+308,
                          "minimum": -1.7976931348623157e+308
                        },
                        "available_credit": {
                          "type": "number",
                          "nullable": true
                        },
                        "balance": {
                          "type": "number",
                          "format": "double",
                          "maximum": 1.7976931348623157e+308,
                          "minimum": -1.7976931348623157e+308
                        },
                        "cash_balance": {
                          "type": "number",
                          "nullable": true
                        },
                        "cash_surrender_value": {
                          "type": "number",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "credit_limit": {
                          "type": "number",
                          "nullable": true
                        },
                        "currency_code": {
                          "type": "string"
                        },
                        "day_payment_is_due": {
                          "type": "number",
                          "nullable": true
                        },
                        "death_benefit": {
                          "type": "number",
                          "nullable": true
                        },
                        "guid": {
                          "type": "string"
                        },
                        "holdings_value": {
                          "type": "number",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "nullable": true
                        },
                        "imported_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "institution_code": {
                          "type": "string",
                          "nullable": true
                        },
                        "insured_name": {
                          "type": "string",
                          "nullable": true
                        },
                        "interest_rate": {
                          "type": "number",
                          "nullable": true
                        },
                        "is_business": {
                          "type": "boolean"
                        },
                        "is_closed": {
                          "type": "boolean"
                        },
                        "is_hidden": {
                          "type": "boolean"
                        },
                        "is_manual": {
                          "type": "boolean"
                        },
                        "last_payment": {
                          "type": "number",
                          "nullable": true
                        },
                        "last_payment_at": {
                          "type": "string",
                          "nullable": true
                        },
                        "loan_amount": {
                          "type": "number",
                          "nullable": true
                        },
                        "margin_balance": {
                          "type": "number",
                          "nullable": true
                        },
                        "matures_on": {
                          "type": "string",
                          "nullable": true
                        },
                        "member_guid": {
                          "type": "string"
                        },
                        "member_id": {
                          "type": "string",
                          "nullable": true
                        },
                        "member_is_managed_by_user": {
                          "type": "boolean"
                        },
                        "metadata": {
                          "type": "string",
                          "nullable": true
                        },
                        "minimum_balance": {
                          "type": "number",
                          "nullable": true
                        },
                        "minimum_payment": {
                          "type": "number",
                          "nullable": true
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        },
                        "nickname": {
                          "type": "string",
                          "nullable": true
                        },
                        "original_balance": {
                          "type": "number",
                          "nullable": true,
                          "format": "double",
                          "maximum": 1.7976931348623157e+308,
                          "minimum": -1.7976931348623157e+308
                        },
                        "pay_out_amount": {
                          "type": "number",
                          "nullable": true
                        },
                        "payment_due_at": {
                          "type": "string",
                          "nullable": true
                        },
                        "payoff_balance": {
                          "type": "number",
                          "nullable": true
                        },
                        "premium_amount": {
                          "type": "number",
                          "nullable": true
                        },
                        "property_type": {
                          "type": "string",
                          "nullable": true
                        },
                        "routing_number": {
                          "type": "string",
                          "nullable": true
                        },
                        "started_on": {
                          "type": "string",
                          "nullable": true,
                          "format": "date-time"
                        },
                        "subtype": {
                          "type": "string",
                          "nullable": true
                        },
                        "total_account_value": {
                          "type": "number",
                          "nullable": true
                        },
                        "type": {
                          "type": "string",
                          "nullable": true
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "user_guid": {
                          "type": "string"
                        },
                        "user_id": {
                          "type": "string",
                          "nullable": true
                        },
                        "today_ugl_amount": {
                          "type": "number",
                          "nullable": true
                        },
                        "today_ugl_percentage": {
                          "type": "number",
                          "nullable": true
                        },
                        "owners": {
                          "description": "List of [MX Account Owners](https://docs.mx.com/api-reference/atrium/reference/premium-features/account-owner-fields) associated with the account",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "account_guid",
                              "address",
                              "city",
                              "state",
                              "country",
                              "postal_code",
                              "phone",
                              "email",
                              "owner_name",
                              "member_guid",
                              "user_guid"
                            ],
                            "properties": {
                              "account_guid": {
                                "type": "string"
                              },
                              "address": {
                                "type": "string",
                                "nullable": true
                              },
                              "city": {
                                "type": "string",
                                "nullable": true
                              },
                              "guid": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string",
                                "nullable": true
                              },
                              "country": {
                                "type": "string",
                                "nullable": true
                              },
                              "postal_code": {
                                "type": "string",
                                "nullable": true
                              },
                              "phone": {
                                "type": "string",
                                "nullable": true
                              },
                              "email": {
                                "type": "string",
                                "nullable": true
                              },
                              "owner_name": {
                                "type": "string",
                                "nullable": true
                              },
                              "member_guid": {
                                "type": "string"
                              },
                              "user_guid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "transactions": {
                          "description": "List of [MX transactions](https://docs.mx.com/api-reference/platform-api/reference/transaction-fields) associated with the account",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "account_guid",
                              "account_id",
                              "amount",
                              "category",
                              "category_guid",
                              "check_number_string",
                              "created_at",
                              "currency_code",
                              "date",
                              "description",
                              "extended_transaction_type",
                              "guid",
                              "id",
                              "is_bill_pay",
                              "is_direct_deposit",
                              "is_expense",
                              "is_fee",
                              "is_income",
                              "is_international",
                              "is_overdraft_fee",
                              "is_payroll_advance",
                              "is_recurring",
                              "is_subscription",
                              "latitude",
                              "localized_description",
                              "localized_memo",
                              "longitude",
                              "member_guid",
                              "member_is_managed_by_user",
                              "memo",
                              "merchant_category_code",
                              "merchant_guid",
                              "merchant_location_guid",
                              "metadata",
                              "original_description",
                              "posted_at",
                              "status",
                              "top_level_category",
                              "transacted_at",
                              "type",
                              "updated_at",
                              "user_guid",
                              "user_id"
                            ],
                            "properties": {
                              "account_guid": {
                                "type": "string"
                              },
                              "account_id": {
                                "type": "string",
                                "nullable": true
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "maximum": 1.7976931348623157e+308,
                                "minimum": -1.7976931348623157e+308
                              },
                              "category": {
                                "type": "string",
                                "nullable": true
                              },
                              "category_guid": {
                                "type": "string",
                                "nullable": true
                              },
                              "check_number_string": {
                                "type": "string",
                                "nullable": true
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "currency_code": {
                                "type": "string"
                              },
                              "date": {
                                "type": "string",
                                "format": "date"
                              },
                              "description": {
                                "type": "string"
                              },
                              "extended_transaction_type": {
                                "type": "string",
                                "nullable": true
                              },
                              "guid": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string",
                                "nullable": true
                              },
                              "is_bill_pay": {
                                "type": "boolean",
                                "nullable": true
                              },
                              "is_direct_deposit": {
                                "type": "boolean",
                                "nullable": true
                              },
                              "is_expense": {
                                "type": "boolean",
                                "nullable": true
                              },
                              "is_fee": {
                                "type": "boolean",
                                "nullable": true
                              },
                              "is_income": {
                                "type": "boolean",
                                "nullable": true
                              },
                              "is_international": {
                                "type": "boolean",
                                "nullable": true
                              },
                              "is_manual": {
                                "type": "boolean",
                                "nullable": true
                              },
                              "is_overdraft_fee": {
                                "type": "boolean",
                                "nullable": true
                              },
                              "is_payroll_advance": {
                                "type": "boolean",
                                "nullable": true
                              },
                              "is_recurring": {
                                "type": "boolean",
                                "nullable": true
                              },
                              "is_subscription": {
                                "type": "boolean",
                                "nullable": true
                              },
                              "latitude": {
                                "type": "number",
                                "nullable": true
                              },
                              "localized_description": {
                                "type": "string",
                                "nullable": true
                              },
                              "localized_memo": {
                                "type": "string",
                                "nullable": true
                              },
                              "longitude": {
                                "type": "number",
                                "nullable": true
                              },
                              "member_guid": {
                                "type": "string"
                              },
                              "member_is_managed_by_user": {
                                "type": "boolean",
                                "nullable": true
                              },
                              "memo": {
                                "type": "string",
                                "nullable": true
                              },
                              "merchant_category_code": {
                                "type": "number",
                                "nullable": true
                              },
                              "merchant_guid": {
                                "type": "string",
                                "nullable": true
                              },
                              "merchant_location_guid": {
                                "type": "string",
                                "nullable": true
                              },
                              "metadata": {
                                "type": "string",
                                "nullable": true
                              },
                              "original_description": {
                                "type": "string"
                              },
                              "posted_at": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                              },
                              "status": {
                                "type": "string"
                              },
                              "top_level_category": {
                                "type": "string",
                                "nullable": true
                              },
                              "transacted_at": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                              },
                              "type": {
                                "type": "string",
                                "nullable": true
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "user_guid": {
                                "type": "string"
                              },
                              "user_id": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "from_date": "2016-10-13",
                "accounts": [
                  {
                    "account_number": "5366",
                    "apr": 1,
                    "apy": 1,
                    "available_balance": 1000,
                    "available_credit": 1000,
                    "balance": 1000,
                    "cash_balance": 1000,
                    "cash_surrender_value": 1000,
                    "created_at": "2016-10-13T17:57:37.000Z",
                    "credit_limit": 100,
                    "currency_code": "USD",
                    "day_payment_is_due": 20,
                    "death_benefit": 1000,
                    "guid": "ACT-06d7f44b-caae-0f6e-1384-01f52e75dcb1",
                    "holdings_value": 1000,
                    "id": "1040434698",
                    "imported_at": "2016-10-20T17:57:37.000Z",
                    "institution_code": "JP Morgan Chase",
                    "insured_name": "Frodo Baggins",
                    "interest_rate": 1,
                    "is_business": false,
                    "is_closed": false,
                    "is_hidden": false,
                    "is_manual": false,
                    "last_payment": 100,
                    "last_payment_at": "2015-10-13T17:57:37.000Z",
                    "loan_amount": 1000,
                    "matures_on": "2015-10-13T17:57:37.000Z",
                    "member_guid": "MBR-7c6f361b-e582-15b6-60c0-358f12466b4b",
                    "member_id": "member123",
                    "member_is_managed_by_user": false,
                    "metadata": "some metadata",
                    "minimum_balance": 100,
                    "minimum_payment": 10,
                    "name": "Checking Account",
                    "nickname": "Checking",
                    "original_balance": 10,
                    "pay_out_amount": 10,
                    "payment_due_at": "2015-10-13T17:57:37.000Z",
                    "payoff_balance": 10,
                    "premium_amount": 1,
                    "property_type": "1",
                    "routing_number": "68899990000000",
                    "started_on": "2016-10-20T17:57:37.000Z",
                    "subtype": "NONE",
                    "total_account_value": 1,
                    "type": "CURRENT",
                    "updated_at": "2016-10-20T18:08:00.000Z",
                    "user_guid": "USR-fa7537f3-48aa-a683-a02a-b18940482f54",
                    "user_id": "user123",
                    "transactions": [
                      {
                        "account_guid": "ACT-06d7f44b-caae-0f6e-1384-01f52e75dcb1",
                        "account_id": "1040434698",
                        "amount": 61.11,
                        "category": "Federal Tax",
                        "category_guid": "CAT-9588eaad-90a4-bb5c-66c8-1812503d0db8",
                        "check_number_string": "6812",
                        "created_at": "2016-10-14T09:43:42.000Z",
                        "currency_code": "USD",
                        "date": "2016-10-14",
                        "description": "14/10 WD ACH IRS",
                        "extended_transaction_type": "partner_transaction_type",
                        "guid": "TRN-265abee9-889b-af6a-c69b-25157db2bdd9",
                        "id": "transaction-265abee9-889b-af6a-c69b-25157db2bdd9",
                        "is_bill_pay": false,
                        "is_direct_deposit": false,
                        "is_expense": true,
                        "is_fee": false,
                        "is_income": false,
                        "is_international": false,
                        "is_overdraft_fee": false,
                        "is_payroll_advance": false,
                        "is_recurring": false,
                        "is_subscription": false,
                        "latitude": -43.2075,
                        "localized_description": "This is a localized_description",
                        "localized_memo": "This is a localized_memo",
                        "longitude": 139.691706,
                        "member_guid": "MBR-7c6f361b-e582-15b6-60c0-358f12466b4b",
                        "member_is_managed_by_user": false,
                        "memo": "This is a memo",
                        "merchant_category_code": 5411,
                        "merchant_guid": "MCH-7ed79542-884d-2b1b-dd74-501c5cc9d25b",
                        "merchant_location_guid": "MCL-00024e59-18b5-4d79-b879-2a7896726fea",
                        "metadata": "some metadata",
                        "original_description": "14/10 WD ACH IRS",
                        "posted_at": "2016-10-07T06:00:00.000Z",
                        "status": "POSTED",
                        "top_level_category": "Taxes",
                        "transacted_at": "2016-10-06T13:00:00.000Z",
                        "type": "DEBIT",
                        "updated_at": "2016-10-07T05:49:12.000Z",
                        "user_guid": "USR-fa7537f3-48aa-a683-a02a-b18940482f54",
                        "user_id": "user123"
                      },
                      {
                        "account_guid": "ACT-06d7f44b-caae-0f6e-1384-01f52e75dcb1",
                        "account_id": "1040434698",
                        "amount": 11.19,
                        "category": "Bank Fee",
                        "category_guid": "CAT-9588eaad-90a4-bb5c-66c8-1812503d0db8",
                        "check_number_string": "6812",
                        "created_at": "2016-10-14T09:43:42.000Z",
                        "currency_code": "USD",
                        "date": "2016-10-14",
                        "description": "Transaction Received on NSF return item 123",
                        "extended_transaction_type": "partner_transaction_type",
                        "guid": "TRN-265abee9-889b-af6a-c69b-25157db2bdd9",
                        "id": "transaction-265abee9-889b-af6a-c69b-25157db2bdd9",
                        "is_bill_pay": false,
                        "is_direct_deposit": false,
                        "is_expense": true,
                        "is_fee": false,
                        "is_income": false,
                        "is_international": false,
                        "is_overdraft_fee": false,
                        "is_payroll_advance": false,
                        "is_recurring": false,
                        "is_subscription": false,
                        "latitude": -43.2075,
                        "localized_description": "This is a localized_description",
                        "localized_memo": "This is a localized_memo",
                        "longitude": 139.691706,
                        "member_guid": "MBR-7c6f361b-e582-15b6-60c0-358f12466b4b",
                        "member_is_managed_by_user": false,
                        "memo": "This is a memo",
                        "merchant_category_code": 5411,
                        "merchant_guid": "MCH-7ed79542-884d-2b1b-dd74-501c5cc9d25b",
                        "merchant_location_guid": "MCL-00024e59-18b5-4d79-b879-2a7896726fea",
                        "metadata": "some metadata",
                        "original_description": "Transaction Received on NSF return item 123",
                        "posted_at": "2016-10-07T06:00:00.000Z",
                        "status": "POSTED",
                        "top_level_category": "Fees & Charges",
                        "transacted_at": "2016-10-06T13:00:00.000Z",
                        "type": "DEBIT",
                        "updated_at": "2016-10-07T05:49:12.000Z",
                        "user_guid": "USR-fa7537f3-48aa-a683-a02a-b18940482f54",
                        "user_id": "user123"
                      },
                      {
                        "account_guid": "ACT-06d7f44b-caae-0f6e-1384-01f52e75dcb1",
                        "account_id": "1040434698",
                        "amount": 1500,
                        "category": "Paycheck",
                        "category_guid": "CAT-9588eaad-90a4-bb5c-66c8-1812503d0db9",
                        "check_number_string": "6812",
                        "created_at": "2016-10-15T09:43:42.000Z",
                        "currency_code": "USD",
                        "date": "2016-10-15",
                        "description": "Payroll from NYX Bros Gameshop",
                        "extended_transaction_type": "partner_transaction_type",
                        "guid": "TRN-265abee9-889b-af6a-c69b-25157db2bdd9",
                        "id": "transaction-265abee9-889b-af6a-c69b-25157db2bdd9",
                        "is_bill_pay": false,
                        "is_direct_deposit": false,
                        "is_expense": true,
                        "is_fee": false,
                        "is_income": false,
                        "is_international": false,
                        "is_overdraft_fee": false,
                        "is_payroll_advance": false,
                        "is_recurring": false,
                        "is_subscription": false,
                        "latitude": -43.2075,
                        "localized_description": "This is a localized_description",
                        "localized_memo": "This is a localized_memo",
                        "longitude": 139.691706,
                        "member_guid": "MBR-7c6f361b-e582-15b6-60c0-358f12466b4b",
                        "member_is_managed_by_user": false,
                        "memo": "This is a memo",
                        "merchant_category_code": 5411,
                        "merchant_guid": "MCH-7ed79542-884d-2b1b-dd74-501c5cc9d25b",
                        "merchant_location_guid": "MCL-00024e59-18b5-4d79-b879-2a7896726fea",
                        "metadata": "some metadata",
                        "original_description": "Payroll from NYX Bros Gameshop",
                        "posted_at": "2016-10-07T06:00:00.000Z",
                        "status": "POSTED",
                        "top_level_category": "Income",
                        "transacted_at": "2016-10-06T13:00:00.000Z",
                        "type": "CREDIT",
                        "updated_at": "2016-10-07T05:49:12.000Z",
                        "user_guid": "USR-fa7537f3-48aa-a683-a02a-b18940482f54",
                        "user_id": "user123"
                      },
                      {
                        "account_guid": "ACT-06d7f44b-caae-0f6e-1384-01f52e75dcb1",
                        "account_id": "1040434698",
                        "amount": 150.36,
                        "category": "Credit Card Payment",
                        "category_guid": "CAT-9588easd-90a4-bb5c-66c8-1812503d0db8",
                        "check_number_string": "6812",
                        "created_at": "2016-10-18T09:43:42.000Z",
                        "currency_code": "USD",
                        "date": "2016-10-18",
                        "description": "Credit Card Payment to Quail Creek Bank",
                        "extended_transaction_type": "partner_transaction_type",
                        "guid": "TRN-265abee9-889b-af6a-c69b-25157db2bdd9",
                        "id": "transaction-265abee9-889b-af6a-c69b-25157db2bdd9",
                        "is_bill_pay": false,
                        "is_direct_deposit": false,
                        "is_expense": true,
                        "is_fee": false,
                        "is_income": false,
                        "is_international": false,
                        "is_overdraft_fee": false,
                        "is_payroll_advance": false,
                        "is_recurring": false,
                        "is_subscription": false,
                        "latitude": -43.2075,
                        "localized_description": "This is a localized_description",
                        "localized_memo": "This is a localized_memo",
                        "longitude": 139.691706,
                        "member_guid": "MBR-7c6f361b-e582-15b6-60c0-358f12466b4b",
                        "member_is_managed_by_user": false,
                        "memo": "This is a memo",
                        "merchant_category_code": 5411,
                        "merchant_guid": "MCH-7ed79542-884d-2b1b-dd74-501c5cc9d25b",
                        "merchant_location_guid": "MCL-00024e59-18b5-4d79-b879-2a7896726fea",
                        "metadata": "some metadata",
                        "original_description": "Credit Card Payment to Quail Creek Bank",
                        "posted_at": "2016-10-07T06:00:00.000Z",
                        "status": "POSTED",
                        "top_level_category": "Transfer",
                        "transacted_at": "2016-10-06T13:00:00.000Z",
                        "type": "DEBIT",
                        "updated_at": "2016-10-07T05:49:12.000Z",
                        "user_guid": "USR-fa7537f3-48aa-a683-a02a-b18940482f54",
                        "user_id": "user123"
                      },
                      {
                        "account_guid": "ACT-06d7f44b-caae-0f6e-1384-01f52e75dcb1",
                        "account_id": "1040434698",
                        "amount": 100.21,
                        "category": "Groceries",
                        "category_guid": "CAT-9588eaad-90a4-bb5c-66c8-1812503d0db8",
                        "check_number_string": "6812",
                        "created_at": "2016-10-19T09:43:42.000Z",
                        "currency_code": "USD",
                        "date": "2016-10-19",
                        "description": "KROGER Brook Av.",
                        "extended_transaction_type": "partner_transaction_type",
                        "guid": "TRN-265abee9-889b-af6a-c69b-25157db2bdd9",
                        "id": "transaction-265abee9-889b-df6a-c69b-25157db2bdd9",
                        "is_bill_pay": false,
                        "is_direct_deposit": false,
                        "is_expense": true,
                        "is_fee": false,
                        "is_income": false,
                        "is_international": false,
                        "is_overdraft_fee": false,
                        "is_payroll_advance": false,
                        "is_recurring": false,
                        "is_subscription": false,
                        "latitude": -43.2075,
                        "localized_description": "This is a localized_description",
                        "localized_memo": "This is a localized_memo",
                        "longitude": 139.691706,
                        "member_guid": "MBR-7c6f361b-e582-15b6-60c0-358f12466b4b",
                        "member_is_managed_by_user": false,
                        "memo": "This is a memo",
                        "merchant_category_code": 5411,
                        "merchant_guid": "MCH-7ed79542-884d-2b1b-dd74-501c5cc9d25b",
                        "merchant_location_guid": "MCL-00024e59-18b5-4d79-b879-2a7896726fea",
                        "metadata": "some metadata",
                        "original_description": "KROGER Brook Av.",
                        "posted_at": "2016-10-07T06:00:00.000Z",
                        "status": "POSTED",
                        "top_level_category": "Food & Dining",
                        "transacted_at": "2016-10-06T13:00:00.000Z",
                        "type": "DEBIT",
                        "updated_at": "2016-10-07T05:49:12.000Z",
                        "user_guid": "USR-fa7537f3-48aa-a683-a02a-b18940482f54",
                        "user_id": "user123"
                      },
                      {
                        "account_guid": "ACT-06d7f44b-caae-0f6e-1384-01f52e75dcb1",
                        "account_id": "1040434698",
                        "amount": 38,
                        "category": "Amusement",
                        "category_guid": "CAT-9588eaad-90a4-bb5c-66c8-1812503d0db8",
                        "check_number_string": "6812",
                        "created_at": "2016-10-19T09:43:42.000Z",
                        "currency_code": "USD",
                        "date": "2016-10-19",
                        "description": "Florida Lottery Payment",
                        "extended_transaction_type": "partner_transaction_type",
                        "guid": "TRN-265abee9-889b-af6a-c69b-25157db2bdd9",
                        "id": "transaction-265abee9-889b-af6a-c69b-25157db2bdd9",
                        "is_bill_pay": false,
                        "is_direct_deposit": false,
                        "is_expense": true,
                        "is_fee": false,
                        "is_income": false,
                        "is_international": false,
                        "is_overdraft_fee": false,
                        "is_payroll_advance": false,
                        "is_recurring": false,
                        "is_subscription": false,
                        "latitude": -43.2075,
                        "localized_description": "This is a localized_description",
                        "localized_memo": "This is a localized_memo",
                        "longitude": 139.691706,
                        "member_guid": "MBR-7c6f361b-e582-15b6-60c0-358f12466b4b",
                        "member_is_managed_by_user": false,
                        "memo": "This is a memo",
                        "merchant_category_code": 5411,
                        "merchant_guid": "MCH-7ed79542-884d-2b1b-dd74-501c5cc9d25b",
                        "merchant_location_guid": "MCL-00024e59-18b5-4d79-b879-2a7896726fea",
                        "metadata": "some metadata",
                        "original_description": "Florida Lottery Payment",
                        "posted_at": "2016-10-07T06:00:00.000Z",
                        "status": "POSTED",
                        "top_level_category": "Entertainment",
                        "transacted_at": "2016-10-06T13:00:00.000Z",
                        "type": "DEBIT",
                        "updated_at": "2016-10-07T05:49:12.000Z",
                        "user_guid": "USR-fa7537f3-48aa-a683-a02a-b18940482f54",
                        "user_id": "user123"
                      }
                    ],
                    "owners": [
                      {
                        "account_guid": "ACT-06d7f44b-caae-0f6e-1384-01f52e75dcb1",
                        "address": "123 This Way",
                        "city": "Middlesex",
                        "country": "US",
                        "email": "donnie@darko.co",
                        "first_name": "Donnie",
                        "guid": "ACO-63dc7714-6fc0-4aa2-a069-c06cdccd1af9",
                        "last_name": "Darko",
                        "member_guid": "MBR-7c6f361b-e582-15b6-60c0-358f12466b4b",
                        "owner_name": "Donnie Darko",
                        "phone": "555-555-5555",
                        "postal_code": "00000-0000",
                        "state": "VA",
                        "user_guid": "USR-fa7537f3-48aa-a683-a02a-b18940482f54"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created a new Open Banking Data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1plaid_assets/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/open_banking_data/plaid_asset_report": {
      "post": {
        "tags": [
          "Open Banking"
        ],
        "summary": "Upload Open Banking Data (Plaid Assets Report)",
        "description": "Uploads open banking data in the format of a Plaid Asset Report to an Inscribe customer. Once the request is received, the open banking data will be processed by Inscribe’s Credit Insights service. See our guide to submitting open banking data [here](https://docs.inscribe.ai/docs/submitting-open-banking-data).",
        "operationId": "uploadPlaidAssetReportOpenBankingData",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Inscribe customer id.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The Plaid Asset Report to be uploaded. This data should be in the format of the GET response to a Plaid Asset Report request which is defined in [Plaid's documentation here](https://plaid.com/docs/api/products/assets/#asset_report-get-response-report).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1plaid_assets/post/requestBody/content/application~1json/schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created a new Open Banking Data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1plaid_assets/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/open_banking_data": {
      "get": {
        "tags": [
          "Open Banking"
        ],
        "summary": "List Open Banking Data",
        "description": "Returns a paginated list of Open Banking Data related to an Inscribe customer. The list is sorted by creation date in ascending order, with the oldest data appearing first.",
        "operationId": "getOpenBankingData",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Inscribe customer id.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "size",
            "description": "Set the number of Open Banking Data records to be returned by the request.",
            "example": 15,
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "in": "query",
            "name": "cursor",
            "description": "Send a cursor to retrieve the next set of Open Banking Data records, starting after the cursor. If no cursor is sent, the first set of Open Banking Data records will be returned.",
            "example": "9361c7fb-934b-4cac-8e07-4897e590ab94",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved Open Banking Data records.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1plaid_assets/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/open_banking_data/{open_banking_data_id}": {
      "delete": {
        "tags": [
          "Open Banking"
        ],
        "summary": "Delete Open Banking Data",
        "description": "Permanently deletes an Open Banking Data, as well as all accounts and transactions associated with the data. It cannot be undone.",
        "operationId": "deleteOpenBankingData",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Inscribe customer id.",
            "example": "efae18a0-05fa-41d2-be8c-481b44aeeee8",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "open_banking_data_id",
            "in": "path",
            "description": "The Inscribe Open Banking Data id to be deleted.",
            "example": "706ddf9e-3eb7-4cc7-b653-1327b2351afb",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted Open Banking Data."
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/plaid_assets": {
      "post": {
        "deprecated": true,
        "tags": [
          "Open Banking"
        ],
        "summary": "Upload Plaid Asset Report",
        "description": "Uploads a Plaid Asset Report to a customer. Once a Plaid Asset Report is uploaded, it will be processed by Inscribe’s Credit Insights service which returns customer insights derived from the open banking data.\n\n**Warning**  This endpoint is deprecated. The recommended endpoint is [Upload Plaid Asset Report Open Banking Data](https://docs.inscribe.ai/reference/uploadplaidassetreportopenbankingdata).",
        "operationId": "uploadPlaidAssetReport",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Inscribe customer id.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The Plaid Asset Report to be uploaded. This data should be in the format of the GET response to a Plaid Asset Report request which is defined in [Plaid's documentation here](https://plaid.com/docs/api/products/assets/#asset_report-get-response-report)",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "report",
                  "warnings",
                  "request_id"
                ],
                "properties": {
                  "report": {
                    "type": "object",
                    "required": [
                      "asset_report_id",
                      "client_report_id",
                      "date_generated",
                      "days_requested",
                      "user",
                      "items"
                    ],
                    "properties": {
                      "asset_report_id": {
                        "type": "string",
                        "description": "A unique identifier for the Asset Report.",
                        "example": "Lr7b1341-1n67-T4a5-pl0r-493199h1vahm"
                      },
                      "client_report_id": {
                        "type": "string",
                        "description": "A self-defined identifier for the Asset Report.",
                        "example": "example_client_report_101"
                      },
                      "date_generated": {
                        "type": "string",
                        "description": "The date and time of the Asset Report being generated.",
                        "example": "2022-09-21T02:45:13Z"
                      },
                      "days_requested": {
                        "type": "number",
                        "description": "The duration the Asset Report corresponds to, in days.",
                        "example": 10
                      },
                      "user": {
                        "type": "object",
                        "description": "The information supplied about the user prior to requesting the Asset Report.",
                        "example": {}
                      },
                      "items": {
                        "type": "array",
                        "description": "Data returned by Plaid about each of the Items included in the Asset Report.",
                        "items": {
                          "type": "object"
                        },
                        "example": []
                      }
                    }
                  },
                  "warnings": {
                    "type": "array",
                    "description": "A list of errors relating to the Asset Report generation.",
                    "items": {
                      "type": "object"
                    },
                    "example": []
                  },
                  "request_id": {
                    "type": "string",
                    "description": "A unique identifier for the request.",
                    "example": "TYeVrpGv4LDWXA2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created a new Plaid Asset Report.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the Open Banking Data.",
                      "example": "0efae611-b3eb-4b84-8ed0-36f11430f5a2"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which the Open Banking Data was created, in the format: yyyy-MM-dd'T'HH:mm:ssZ",
                      "example": "2022-07-14T09:46:10.510Z"
                    },
                    "state": {
                      "type": "string",
                      "description": "The current state of the Open Banking Data, it has the following options: PROCESSING - This Open Banking Data is still being processed. PROCESSED - This Open Banking Data has finished processing and results are available. ERROR_PROCESSING - An error occurred while processing this Open Banking Data. CORRUPT_DATA_DETECTED - This Open Banking Data was found to contain corrupted data and could not be processed.",
                      "enum": [
                        "PROCESSING",
                        "PROCESSED",
                        "ERROR_PROCESSING",
                        "CORRUPT_DATA_DETECTED"
                      ],
                      "example": "PROCESSED"
                    },
                    "no_of_bank_accounts": {
                      "type": "integer",
                      "description": "The number of bank accounts present in the Open Banking Data. This value will be 0 until the data is in the PROCESSED state.",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      },
      "get": {
        "deprecated": true,
        "tags": [
          "Open Banking"
        ],
        "summary": "List all Plaid Asset Reports",
        "description": "Returns a paginated list of Plaid Asset Reports related to a customer. The list is sorted by creation date in ascending order, with the oldest data appearing first.\n\n**Warning**  This endpoint is deprecated. The recommended endpoint is [Get Open Banking Data](https://docs.inscribe.ai/reference/getopenbankingdata).",
        "operationId": "getPlaidAssetReport",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Inscribe customer id.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "size",
            "description": "Set the number of Plaid Asset Reports to be returned by the request.",
            "example": 15,
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "in": "query",
            "name": "cursor",
            "description": "Send a cursor to retrieve the next set of Plaid Asset Reports, starting after the cursor. If no cursor is sent, the first set of Plaid Asset Reports will be returned.",
            "example": "9361c7fb-934b-4cac-8e07-4897e590ab94",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved Plaid Asset Reports.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1plaid_assets/post/responses/200/content/application~1json/schema"
                      },
                      "description": "A map with a data property that contains an array of Open Banking Data records. Each entry in the array is an Open Banking Data object. If no Open Banking Data object is available, the resulting array will be empty."
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "cursor": {
                          "type": "string",
                          "format": "uuid",
                          "description": "A cursor for use in pagination. This cursor value can be used to request the next set of Open Banking Data records.",
                          "example": "9361c7fb-934b-4cac-8e07-4897e590ab94"
                        }
                      }
                    }
                  },
                  "example": {
                    "data": [
                      {
                        "id": "3fc4560f-f6dc-4cdd-a076-182a5e92b70b",
                        "created_at": "2022-07-14T09:46:10.510Z",
                        "state": "PROCESSED",
                        "no_of_bank_accounts": 3
                      },
                      {
                        "id": "18a51c48-b387-43a3-a405-6eb63c13c70a",
                        "created_at": "2022-08-04T11:56:01.460Z",
                        "state": "PROCESSED",
                        "no_of_bank_accounts": 1
                      },
                      {
                        "id": "a28df285-baca-47b2-aae0-e3f085a096d2",
                        "created_at": "2022-10-15T16:55:32.098Z",
                        "state": "PROCESSING",
                        "no_of_bank_accounts": 0
                      }
                    ],
                    "pagination": {
                      "cursor": "a28df285-baca-47b2-aae0-e3f085a096d2"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/plaid_assets/{plaid_asset_report_id}": {
      "delete": {
        "deprecated": true,
        "tags": [
          "Open Banking"
        ],
        "summary": "Delete a Plaid Asset Report",
        "description": "Permanently deletes a Plaid Asset Report, as well as all accounts and transactions associated with the data. It cannot be undone.\n\n**Warning**  This endpoint is deprecated. The recommended endpoint is [Delete Open Banking Data](https://docs.inscribe.ai/reference/deleteopenbankingdata).",
        "operationId": "deletePlaidAssetReport",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Inscribe customer id.",
            "example": "efae18a0-05fa-41d2-be8c-481b44aeeee8",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "plaid_asset_report_id",
            "in": "path",
            "description": "The id of the Plaid Asset Report to be deleted.",
            "example": "706ddf9e-3eb7-4cc7-b653-1327b2351afb",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted Plaid Asset Report."
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/transactions/categories": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "List Inscribe Transaction Categories",
        "description": "Retrieves the hierarchy of transaction categories that Inscribe uses in its transaction enrichment. Every uploaded transaction will be assigned one of these transaction categories (or null if no category is found). Inscribe categories are presented in the form of a hierarchy. More information is available via our [guides](https://docs.inscribe.ai/docs/how-are-transactions-enriched).",
        "operationId": "getTransactionCategories",
        "responses": {
          "200": {
            "description": "Successfully retrieved bank account.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "category_id": {
                            "type": "string",
                            "description": "The category identifier.",
                            "example": "ACCOMMODATION"
                          },
                          "category_key": {
                            "type": "string",
                            "description": "The category key.",
                            "example": "ACCOMMODATION"
                          },
                          "subcategories": {
                            "description": "List of all subcategories for this category.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "category_id": {
                                  "type": "string",
                                  "description": "The subcategory identifier.",
                                  "example": "RENT"
                                },
                                "category_key": {
                                  "type": "string",
                                  "description": "The subcategory key.",
                                  "example": "RENT"
                                },
                                "subcategories": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  },
                                  "example": []
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "An array of category objects."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "List Transactions for a Customer",
        "description": "Returns a list of transactions for a customer. The list is sorted by data source, with transactions from bank statements listed first, followed by transactions from open banking data. Within each of the data sources, the transactions are ordered by creation date, with the most recently created transactions appearing first.\nMost query parameters should be passed only once for filtering. However, there are two exceptions:\n\n  - `category`: This parameter can be passed multiple times to filter transactions by category.\n  - `data_source`: This parameter can also be passed multiple times to filter transactions by data source.\n\nPlease refer to the individual parameter descriptions for more details on usage.",
        "operationId": "getCustomerTransactions",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Inscribe customer id.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "size",
            "description": "Set the number of transactions to be returned by request.",
            "example": 15,
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 10000
            }
          },
          {
            "in": "query",
            "name": "cursor",
            "description": "Send a cursor to retrieve the next set of transactions, starting after the cursor. If no cursor is sent, the first set of transactions will be returned.",
            "example": "9361c7fb-934b-4cac-8e07-4897e590ab94",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "transaction_ids",
            "required": false,
            "description": "Filter transactions to include only those with the specified transaction IDs. To filter by multiple transaction IDs, separate each ID with a comma (,). For example, `transaction_ids=uuid1,uuid2`.",
            "example": "3616baa9-9caf-434e-b4d0-8a32c644dfd4",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "document_ids",
            "required": false,
            "description": "Filter transactions to include only those from the specified document IDs. To filter by multiple document IDs, separate each ID with a comma (,). For example, `document_ids=uuid1,uuid2`. No transactions from open banking data will be returned.",
            "example": "73e78eae-e7ce-4707-b2b2-322af448a1dd,2281526e-a535-4532-8ea0-60bb96e97840",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "document_pages",
            "description": "Filter transactions to include only those that exist on specific pages of documents. To filter by multiple pages, separate each page number with a comma (,). For examples, `document_pages=1,2`. No transactions from open banking data will be returned.",
            "example": "1,2",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Filter transactions where the description or merchant contains the specified search term.",
            "example": "TAX",
            "schema": {
              "type": "string",
              "maxLength": 50
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "description": "Specify the field by which transactions should be sorted.",
            "example": "date",
            "schema": {
              "type": "string",
              "enum": [
                "amount",
                "category",
                "date",
                "merchant"
              ]
            }
          },
          {
            "in": "query",
            "name": "sort_direction",
            "description": "Choose between 'ascending' or 'descending' to define the sorting order.",
            "example": "asc",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Filter transactions to include only those with a date greater than or equal to the specified start date.",
            "example": "2023-01-01",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Filter transactions to include only those with a date less than the specified end date.",
            "example": "2023-02-01",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "min_amount",
            "description": "Filter transactions to include only those with an amount greater than or equal to the specified minimum amount.",
            "example": 0,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "max_amount",
            "description": "Filter transactions to include only those with an amount less than the specified maximum amount.",
            "example": 100000,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "data_source",
            "description": "Set a data source by which to filter transactions. Only transactions in this data source will be returned. If no data source is set, all transactions will be returned.",
            "example": "bank_statement",
            "schema": {
              "type": "string",
              "enum": [
                "bank_statement",
                "open_banking"
              ]
            }
          },
          {
            "in": "query",
            "name": "category",
            "description": "Set a category by which to filter transactions. Only transactions in this category will be returned. If no category is set, all transactions will be returned.",
            "example": "income",
            "schema": {
              "type": "string",
              "enum": [
                "accommodation",
                "rent",
                "hotels",
                "bank_charge",
                "overdraft",
                "nsf",
                "interest_paid",
                "entertainment",
                "gambling",
                "income",
                "revenue",
                "salary",
                "interest_received",
                "retirement",
                "social_security",
                "commission_received",
                "infrastructure",
                "insurance",
                "investments",
                "savings",
                "trading",
                "crypto_trading",
                "loan",
                "mortgage",
                "card_repayment",
                "mca",
                "payday",
                "auto_loan",
                "buy_now_pay_later",
                "personnel",
                "refund",
                "retail",
                "food_and_drink",
                "groceries",
                "self_transfer",
                "sweep_transfer",
                "tax",
                "transport",
                "fuel",
                "utilities",
                "withdrawal"
              ]
            }
          },
          {
            "name": "include_unreconciled_documents",
            "in": "query",
            "description": "Unreconciled bank accounts are bank accounts where the difference between the parsed opening and closing balances is not explained by the sum of the parsed transaction amounts. Bank accounts are typically unreconciled if the uploaded document has poor quality or is missing some of its original pages. It can also happen when the parsing models fail to parse and extract all relevant data. If this parameter is set to False, documents with unreconciled bank accounts will be excluded from the credit insights. This parameter defaults to True, keeping all documents included.",
            "required": false,
            "example": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns back a list of Transaction objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "A transaction object which contains information about the transaction.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the object.",
                            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b"
                          },
                          "guid": {
                            "type": "string",
                            "description": "An identifier for the transaction submitted by the data provider.",
                            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b"
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the transaction.",
                            "example": "2022-07-25"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the transaction.",
                            "example": "Deposit from Stripe acc 0000XXXX1234"
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Amount of the transaction (in cents).",
                            "example": 860000
                          },
                          "category": {
                            "description": "Category of the transaction. This value will be set to null if no category is identified.",
                            "example": "overdraft",
                            "enum": [
                              "accommodation",
                              "rent",
                              "hotels",
                              "bank_charge",
                              "overdraft",
                              "nsf",
                              "interest_paid",
                              "entertainment",
                              "gambling",
                              "income",
                              "revenue",
                              "salary",
                              "interest_received",
                              "retirement",
                              "social_security",
                              "commission_received",
                              "infrastructure",
                              "insurance",
                              "investments",
                              "savings",
                              "trading",
                              "crypto_trading",
                              "loan",
                              "mortgage",
                              "card_repayment",
                              "mca",
                              "payday",
                              "auto_loan",
                              "buy_now_pay_later",
                              "personnel",
                              "refund",
                              "retail",
                              "food_and_drink",
                              "groceries",
                              "self_transfer",
                              "sweep_transfer",
                              "tax",
                              "transport",
                              "fuel",
                              "utilities",
                              "withdrawal"
                            ]
                          },
                          "method": {
                            "type": "string",
                            "description": "Method by which the transaction was made. This value will be set to null if no method is identified.",
                            "example": "BANK_TRANSFER",
                            "enum": [
                              "BANK_TRANSFER",
                              "CARD_PAYMENT",
                              "CASH",
                              "CHECK"
                            ]
                          },
                          "vendor": {
                            "type": "string",
                            "description": "This has been deprecated. Please use merchant instead.",
                            "example": "AMAZON",
                            "deprecated": true
                          },
                          "merchant": {
                            "type": "string",
                            "description": "The merchant associated with the transaction. This value will be set to null if no merchant is identified.",
                            "example": "AMAZON"
                          },
                          "data_source": {
                            "type": "string",
                            "description": "The source of the transaction. The transaction can be from either a bank statement or open banking data.",
                            "enum": [
                              "BANK_STATEMENT",
                              "OPEN_BANKING"
                            ]
                          }
                        }
                      },
                      "description": "A map with a data property that contains an array of transactions. Each entry in the array is a separate transaction object."
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "cursor": {
                          "type": "string",
                          "format": "uuid",
                          "description": "A cursor for use in pagination. This cursor is to be used in the next request's cursor parameter to request the next set of transactions.",
                          "example": "9361c7fb-934b-4cac-8e07-4897e590ab94"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Additional data which provides context about Inscribe's Credit Insights response.",
                      "properties": {
                        "customer_contains_low_trust_documents": {
                          "type": "boolean",
                          "description": "This value will be set to True if the customer contains any documents under a trust score threshold of 50. Else,  this will be set to False.",
                          "example": false
                        },
                        "included_data_sources": {
                          "type": "object",
                          "description": "Lists all documents and open banking data which were used to create the Inscribe Credit Insights.",
                          "properties": {
                            "documents": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "document_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "b3de84cf-97aa-4321-a223-51640d5d8fca"
                                  }
                                }
                              }
                            },
                            "open_banking": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "open_banking_data_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "e959ed48-a9e4-44f3-a6f8-b9dddd21f27c"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "excluded_data_sources": {
                          "type": "object",
                          "description": "Lists all documents and open banking data which were excluded from the Inscribe Credit Insights. Documents can be excluded if they are duplicate documents, or when the include_unreconciled_documents query parameter is set to False.",
                          "properties": {
                            "documents": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "document_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "fd7abd7d-5d62-42d0-b49e-62eae1fd4e22"
                                  },
                                  "exclusion_reason": {
                                    "format": "string",
                                    "example": "UNRECONCILED_BANK_ACCOUNT"
                                  }
                                }
                              }
                            },
                            "open_banking": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "open_banking_data_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "920b148f-db30-46fe-8da9-3de2c9e55b04"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "query_parameters": {
                          "type": "object",
                          "description": "Lists the query parameters which were used in the original endpoint request."
                        }
                      }
                    }
                  },
                  "example": {
                    "data": [
                      {
                        "id": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
                        "date": "2022-07-25",
                        "description": "Deposit",
                        "amount": 860000,
                        "category": "REVENUE",
                        "method": "BANK_TRANSFER",
                        "vendor": "Smith & Sons",
                        "merchant": "Smith & Sons",
                        "data_source": "BANK_STATEMENT",
                        "guid": "123e4567-e89b-12d3-a456-426614174001"
                      },
                      {
                        "id": "3efae611-b3eb-5b84-9ed1-a3e93ad4bf6c",
                        "date": "2022-07-28",
                        "description": "NSF fee on account",
                        "amount": -3500,
                        "category": "NSF",
                        "method": "BANK_TRANSFER",
                        "vendor": null,
                        "merchant": null,
                        "data_source": "BANK_STATEMENT",
                        "guid": "123e4567-e89b-12d3-a456-426614174002"
                      },
                      {
                        "id": "4efae611-b3eb-5b84-9ed1-a3e93ad4bf6c",
                        "date": "2022-07-30",
                        "description": "Chase ATM withdrawal from account",
                        "amount": -50000,
                        "category": "WITHDRAWAL",
                        "method": "CASH",
                        "vendor": "CHASE",
                        "merchant": "CHASE",
                        "data_source": "BANK_STATEMENT",
                        "guid": "123e4567-e89b-12d3-a456-426614174003"
                      }
                    ],
                    "pagination": {
                      "cursor": "9361c7fb-934b-4cac-8e07-4897e590ab94"
                    },
                    "metadata": {
                      "customer_contains_low_trust_documents": false,
                      "included_data_sources": {
                        "documents": [
                          {
                            "document_id": "e959ed48-a9e4-44f3-a6f8-b9dddd21f27c"
                          }
                        ],
                        "open_banking_data": []
                      },
                      "excluded_data_sources": {
                        "documents": [
                          {
                            "document_id": "1ae90a8e-8126-41aa-9b01-1d80e2e0817d",
                            "exclusion_reason": "UNRECONCILED_BANK_ACCOUNT"
                          }
                        ],
                        "open_banking_data": []
                      },
                      "query_parameters": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/bank_accounts/{bank_account_id}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "List Transactions for a Bank Account",
        "description": "Returns a list of transactions for a customer's bank account. The list is sorted by creation date, with the most recently created transactions appearing first.\nMost query parameters should be passed only once for filtering. However, there are two exceptions:\n\n  - `category`: This parameter can be passed multiple times to filter transactions by category.\n  - `data_source`: This parameter can also be passed multiple times to filter transactions by data source.\n\nPlease refer to the individual parameter descriptions for more details on usage.",
        "operationId": "getBankAccountTransactions",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Inscribe customer id.",
            "example": "0efae611-b3eb-4b84-8ed0-a4e92ad3bf4b",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "bank_account_id",
            "in": "path",
            "description": "The id of the corresponding bank account.",
            "example": "506d3678-1bde-473e-b884-64189d48f9e7",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "size",
            "description": "Set the number of transactions to be returned by request.",
            "example": 15,
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 10000
            }
          },
          {
            "in": "query",
            "name": "cursor",
            "description": "Send a cursor to retrieve the next set of transactions, starting after the cursor. If no cursor is sent, the first set of transactions will be returned.",
            "example": "9361c7fb-934b-4cac-8e07-4897e590ab94",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "transaction_ids",
            "required": false,
            "description": "Filter transactions to include only those with the specified transaction IDs. To filter by multiple transaction IDs, separate each ID with a comma (,). For example, `transaction_ids=uuid1,uuid2`.",
            "example": "3616baa9-9caf-434e-b4d0-8a32c644dfd4",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "document_ids",
            "required": false,
            "description": "Filter transactions to include only those from the specified document IDs. To filter by multiple document IDs, separate each ID with a comma (,). For example, `document_ids=uuid1,uuid2`. No transactions from open banking data will be returned.",
            "example": "73e78eae-e7ce-4707-b2b2-322af448a1dd,2281526e-a535-4532-8ea0-60bb96e97840",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "document_pages",
            "description": "Filter transactions to include only those that exist on specific pages of documents. To filter by multiple pages, separate each page number with a comma (,). For examples, `document_pages=1,2`. No transactions from open banking data will be returned.",
            "example": "1,2",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Filter transactions where the description or merchant contains the specified search term.",
            "example": "TAX",
            "schema": {
              "type": "string",
              "maxLength": 50
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "description": "Specify the field by which transactions should be sorted.",
            "example": "date",
            "schema": {
              "type": "string",
              "enum": [
                "amount",
                "category",
                "date",
                "merchant"
              ]
            }
          },
          {
            "in": "query",
            "name": "sort_direction",
            "description": "Choose between 'ascending' or 'descending' to define the sorting order.",
            "example": "asc",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Filter transactions to include only those with a date greater than or equal to the specified start date.",
            "example": "2023-01-01",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Filter transactions to include only those with a date less than the specified end date.",
            "example": "2023-02-01",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "min_amount",
            "description": "Filter transactions to include only those with an amount greater than or equal to the specified minimum amount.",
            "example": 0,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "max_amount",
            "description": "Filter transactions to include only those with an amount less than the specified maximum amount.",
            "example": 100000,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "data_source",
            "description": "Set a data source by which to filter transactions. Only transactions in this data source will be returned. If no data source is set, all transactions will be returned.",
            "example": "bank_statement",
            "schema": {
              "type": "string",
              "enum": [
                "bank_statement",
                "open_banking"
              ]
            }
          },
          {
            "in": "query",
            "name": "category",
            "description": "Set a category by which to filter transactions. Only transactions in this category will be returned. If no category is set, all transactions will be returned.",
            "example": "income",
            "schema": {
              "type": "string",
              "enum": [
                "accommodation",
                "rent",
                "hotels",
                "bank_charge",
                "overdraft",
                "nsf",
                "interest_paid",
                "entertainment",
                "gambling",
                "income",
                "revenue",
                "salary",
                "interest_received",
                "retirement",
                "social_security",
                "commission_received",
                "infrastructure",
                "insurance",
                "investments",
                "savings",
                "trading",
                "crypto_trading",
                "loan",
                "mortgage",
                "card_repayment",
                "mca",
                "payday",
                "auto_loan",
                "buy_now_pay_later",
                "personnel",
                "refund",
                "retail",
                "food_and_drink",
                "groceries",
                "self_transfer",
                "sweep_transfer",
                "tax",
                "transport",
                "fuel",
                "utilities",
                "withdrawal"
              ]
            }
          },
          {
            "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1transactions/get/parameters/15"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns back a list of Transaction objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1customers~1%7Bcustomer_id%7D~1transactions/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/customers/{customer_id}/transactions/categories/{category}": {
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "Recategorize Transactions",
        "description": "Assign a new category to a group of transaction ids",
        "operationId": "recategorizeTransactions",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Inscribe customer id.",
            "example": "efae18a0-05fa-41d2-be8c-481b44aeeee8",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "category",
            "in": "path",
            "description": "The category to be assigned to all the transactions in the list. If the desired transaction category is null, choose null.",
            "example": "salary",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accommodation",
                "rent",
                "hotels",
                "bank_charge",
                "overdraft",
                "nsf",
                "interest_paid",
                "entertainment",
                "gambling",
                "income",
                "revenue",
                "salary",
                "interest_received",
                "retirement",
                "social_security",
                "commission_received",
                "infrastructure",
                "insurance",
                "investments",
                "savings",
                "trading",
                "crypto_trading",
                "loan",
                "mortgage",
                "card_repayment",
                "mca",
                "payday",
                "auto_loan",
                "buy_now_pay_later",
                "personnel",
                "refund",
                "retail",
                "food_and_drink",
                "groceries",
                "self_transfer",
                "sweep_transfer",
                "tax",
                "transport",
                "fuel",
                "utilities",
                "withdrawal",
                "null"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "transaction_ids"
                ],
                "properties": {
                  "transaction_ids": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                },
                "example": {
                  "transaction_ids": [
                    "2c7cf785-94c0-4cef-bfdb-310f7136ad40",
                    "ebaee07a-8920-4170-96df-5e27f5e2fb36",
                    "c66e7df2-3f7e-4eb9-bcab-958fada36804"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully recategorized Transactions."
          },
          "400": {
            "$ref": "#/paths/~1customers/get/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1customers/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1collect~1sessions/get/responses/404"
          },
          "429": {
            "$ref": "#/paths/~1health/get/responses/429"
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Reachability Check"
        ],
        "summary": "Reachability Check",
        "description": "By querying this endpoint, you can check if it's possible to reach Inscribe's services from your own infrastructure. This endpoint does not require any authentication but is rate limited.\nIt does not indicate that all services are working without an error. For those notifications, please subscribe to our status page at <https://status.inscribe.ai>.",
        "operationId": "reachability-check",
        "responses": {
          "200": {
            "description": "Reachability check succeeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response for the reachability check endpoint",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Did the request succeed?",
                      "example": true
                    },
                    "status": {
                      "type": "integer",
                      "description": "http status code",
                      "example": 200
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests. The request has been rate limited. For more information, visit our [documentation on rate limiting](https://docs.inscribe.ai/docs/are-the-endpoints-rate-limited).",
            "content": {
              "text/plain": {
                "example": "Requests are limited to 200 requests over a 5 minute period. Please try again in 30 seconds"
              }
            },
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before retrying the request.",
                "schema": {
                  "type": "integer",
                  "example": 30
                }
              }
            }
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "x-default": "Inscribe <API KEY>"
      }
    }
  },
  "servers": [
    {
      "url": "https://api.inscribe.ai/api/v2"
    }
  ]
}
